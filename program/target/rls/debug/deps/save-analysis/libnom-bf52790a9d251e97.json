{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0","program":"/home/zfaizal/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nom","--edition=2018","/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"std\"","-C","metadata=bf52790a9d251e97","-C","extra-filename=-bf52790a9d251e97","--out-dir","/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps","-L","dependency=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps","--extern","memchr=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libmemchr-6061dad8797913cc.rmeta","--extern","minimal_lexical=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libminimal_lexical-efc167016d0ceecd.rmeta","--cap-lints","allow","--cfg","stable_i128","--error-format=json","--sysroot","/home/zfaizal/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libnom-bf52790a9d251e97.rmeta"},"prelude":{"crate_id":{"name":"nom","disambiguator":[3273981885109162440,0]},"crate_root":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src","external_crates":[{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","num":20,"id":{"name":"memchr","disambiguator":[10078899764617758637,0]}}],"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":0,"byte_end":15812,"line_start":1,"line_end":467,"column_start":1,"column_end":19}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":9658},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15082,"byte_end":15087,"line_start":427,"line_end":427,"column_start":7,"column_end":12},"alias_span":null,"name":"alloc","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":498},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15089,"byte_end":15095,"line_start":427,"line_end":427,"column_start":14,"column_end":20},"alias_span":null,"name":"borrow","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":72},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15097,"byte_end":15102,"line_start":427,"line_end":427,"column_start":22,"column_end":27},"alias_span":null,"name":"boxed","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":2653},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15104,"byte_end":15107,"line_start":427,"line_end":427,"column_start":29,"column_end":32},"alias_span":null,"name":"cmp","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":1,"index":989},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15109,"byte_end":15120,"line_start":427,"line_end":427,"column_start":34,"column_end":45},"alias_span":null,"name":"collections","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":2815},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15122,"byte_end":15129,"line_start":427,"line_end":427,"column_start":47,"column_end":54},"alias_span":null,"name":"convert","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":4308},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15131,"byte_end":15134,"line_start":427,"line_end":427,"column_start":56,"column_end":59},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":9485},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15136,"byte_end":15140,"line_start":427,"line_end":427,"column_start":61,"column_end":65},"alias_span":null,"name":"hash","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":4736},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15142,"byte_end":15146,"line_start":427,"line_end":427,"column_start":67,"column_end":71},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":1837},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15148,"byte_end":15151,"line_start":427,"line_end":427,"column_start":73,"column_end":76},"alias_span":null,"name":"mem","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":3069},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15153,"byte_end":15156,"line_start":427,"line_end":427,"column_start":78,"column_end":81},"alias_span":null,"name":"ops","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":7996},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15158,"byte_end":15164,"line_start":427,"line_end":427,"column_start":83,"column_end":89},"alias_span":null,"name":"option","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":2,"index":8566},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15166,"byte_end":15172,"line_start":427,"line_end":427,"column_start":91,"column_end":97},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":4933},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15180,"byte_end":15185,"line_start":428,"line_end":428,"column_start":7,"column_end":12},"alias_span":null,"name":"slice","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5208},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15187,"byte_end":15190,"line_start":428,"line_end":428,"column_start":14,"column_end":17},"alias_span":null,"name":"str","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5413},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15192,"byte_end":15198,"line_start":428,"line_end":428,"column_start":19,"column_end":25},"alias_span":null,"name":"string","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":6268},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15200,"byte_end":15203,"line_start":428,"line_end":428,"column_start":27,"column_end":30},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":5,"index":5},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15200,"byte_end":15203,"line_start":428,"line_end":428,"column_start":27,"column_end":30},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":1,"index":15},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15318,"byte_end":15325,"line_start":434,"line_end":434,"column_start":20,"column_end":27},"alias_span":null,"name":"v1","value":"","parent":{"krate":0,"index":58}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15366,"byte_end":15367,"line_start":439,"line_end":439,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15393,"byte_end":15394,"line_start":440,"line_end":440,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Err","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15418,"byte_end":15419,"line_start":441,"line_end":441,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"HexDisplay","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15441,"byte_end":15442,"line_start":443,"line_end":443,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":0,"byte_end":15812,"line_start":1,"line_end":467,"column_start":1,"column_end":19},"name":"","qualname":"::","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":185},{"krate":0,"index":444},{"krate":0,"index":660},{"krate":0,"index":1075},{"krate":0,"index":1129},{"krate":0,"index":1297},{"krate":0,"index":1383},{"krate":0,"index":1549},{"krate":0,"index":1868},{"krate":0,"index":2225},{"krate":0,"index":2226}],"decl_id":null,"docs":" # nom, eating data byte by byte","sig":null,"attributes":[{"value":"/ # nom, eating data byte by byte","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ nom is a parser combinator library with a focus on safe parsing,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":40,"byte_end":108,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ streaming patterns, and as much as possible zero copy.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":109,"byte_end":167,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":168,"byte_end":171,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":172,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":187,"byte_end":190,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":191,"byte_end":202,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/ use nom::{","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":203,"byte_end":217,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/   IResult,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":218,"byte_end":232,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/   bytes::complete::{tag, take_while_m_n},","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":233,"byte_end":278,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/   combinator::map_res,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":279,"byte_end":305,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/   sequence::tuple};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":306,"byte_end":329,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":330,"byte_end":333,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug,PartialEq)]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":334,"byte_end":364,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ pub struct Color {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":365,"byte_end":387,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/   pub red:     u8,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":388,"byte_end":410,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/   pub green:   u8,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":411,"byte_end":433,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/   pub blue:    u8,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":434,"byte_end":456,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":457,"byte_end":462,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":463,"byte_end":466,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn from_hex(input: &str) -> Result<u8, std::num::ParseIntError> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":467,"byte_end":536,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/   u8::from_str_radix(input, 16)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":537,"byte_end":572,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":573,"byte_end":578,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":579,"byte_end":582,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn is_hex_digit(c: char) -> bool {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":583,"byte_end":621,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/   c.is_digit(16)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":622,"byte_end":642,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":643,"byte_end":648,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":649,"byte_end":652,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fn hex_primary(input: &str) -> IResult<&str, u8> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":653,"byte_end":707,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/   map_res(","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":708,"byte_end":722,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/     take_while_m_n(2, 2, is_hex_digit),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":723,"byte_end":766,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/     from_hex","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":767,"byte_end":783,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/   )(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":784,"byte_end":798,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":799,"byte_end":804,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":805,"byte_end":808,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ fn hex_color(input: &str) -> IResult<&str, Color> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":809,"byte_end":864,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/   let (input, _) = tag(\"#\")(input)?;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":865,"byte_end":905,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/   let (input, (red, green, blue)) = tuple((hex_primary, hex_primary, hex_primary))(input)?;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":906,"byte_end":1001,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1002,"byte_end":1005,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/   Ok((input, Color { red, green, blue }))","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1006,"byte_end":1051,"line_start":41,"line_end":41,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1052,"byte_end":1057,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1058,"byte_end":1061,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1062,"byte_end":1077,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/   assert_eq!(hex_color(\"#2F14DF\"), Ok((\"\", Color {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1078,"byte_end":1132,"line_start":45,"line_end":45,"column_start":1,"column_end":55}},{"value":"/     red: 47,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1133,"byte_end":1149,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/     green: 20,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1150,"byte_end":1168,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/     blue: 223,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1169,"byte_end":1187,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/   })));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1188,"byte_end":1199,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1200,"byte_end":1205,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1206,"byte_end":1213,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1214,"byte_end":1217,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The code is available on [Github](https://github.com/Geal/nom)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1218,"byte_end":1284,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1285,"byte_end":1288,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ There are a few [guides](https://github.com/Geal/nom/tree/master/doc) with more details","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1289,"byte_end":1380,"line_start":55,"line_end":55,"column_start":1,"column_end":92}},{"value":"/ about [how to write parsers](https://github.com/Geal/nom/blob/master/doc/making_a_new_parser_from_scratch.md),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1381,"byte_end":1495,"line_start":56,"line_end":56,"column_start":1,"column_end":115}},{"value":"/ or the [error management system](https://github.com/Geal/nom/blob/master/doc/error_management.md).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1496,"byte_end":1598,"line_start":57,"line_end":57,"column_start":1,"column_end":103}},{"value":"/ You can also check out the [recipes] module that contains examples of common patterns.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1599,"byte_end":1689,"line_start":58,"line_end":58,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1690,"byte_end":1693,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Looking for a specific combinator? Read the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1694,"byte_end":1743,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"/ [\"choose a combinator\" guide](https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md)**","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1744,"byte_end":1849,"line_start":61,"line_end":61,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1850,"byte_end":1853,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ If you are upgrading to nom 5.0, please read the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1854,"byte_end":1906,"line_start":63,"line_end":63,"column_start":1,"column_end":53}},{"value":"/ [migration document](https://github.com/Geal/nom/blob/master/doc/upgrading_to_nom_5.md).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":1907,"byte_end":1999,"line_start":64,"line_end":64,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2000,"byte_end":2003,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ## Parser combinators","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2004,"byte_end":2029,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2030,"byte_end":2033,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Parser combinators are an approach to parsers that is very different from","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2034,"byte_end":2111,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ software like [lex](https://en.wikipedia.org/wiki/Lex_(software)) and","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2112,"byte_end":2185,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ [yacc](https://en.wikipedia.org/wiki/Yacc). Instead of writing the grammar","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2186,"byte_end":2264,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ in a separate syntax and generating the corresponding code, you use very small","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2265,"byte_end":2347,"line_start":71,"line_end":71,"column_start":1,"column_end":83}},{"value":"/ functions with very specific purposes, like \"take 5 bytes\", or \"recognize the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2348,"byte_end":2429,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/ word 'HTTP'\", and assemble them in meaningful patterns like \"recognize","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2430,"byte_end":2504,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ 'HTTP', then a space, then a version\".","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2505,"byte_end":2547,"line_start":74,"line_end":74,"column_start":1,"column_end":43}},{"value":"/ The resulting code is small, and looks like the grammar you would have","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2548,"byte_end":2622,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ written with other parser approaches.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2623,"byte_end":2664,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2665,"byte_end":2668,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ This gives us a few advantages:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2669,"byte_end":2704,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2705,"byte_end":2708,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ - The parsers are small and easy to write","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2709,"byte_end":2754,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/ - The parsers components are easy to reuse (if they're general enough, please add them to nom!)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2755,"byte_end":2854,"line_start":81,"line_end":81,"column_start":1,"column_end":100}},{"value":"/ - The parsers components are easy to test separately (unit tests and property-based tests)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2855,"byte_end":2949,"line_start":82,"line_end":82,"column_start":1,"column_end":95}},{"value":"/ - The parser combination code looks close to the grammar you would have written","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":2950,"byte_end":3033,"line_start":83,"line_end":83,"column_start":1,"column_end":84}},{"value":"/ - You can build partial parsers, specific to the data you need at the moment, and ignore the rest","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3034,"byte_end":3135,"line_start":84,"line_end":84,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3136,"byte_end":3139,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Here is an example of one such parser, to recognize text between parentheses:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3140,"byte_end":3221,"line_start":86,"line_end":86,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3222,"byte_end":3225,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3226,"byte_end":3237,"line_start":88,"line_end":88,"column_start":1,"column_end":12}},{"value":"/ use nom::{","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3238,"byte_end":3252,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/   IResult,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3253,"byte_end":3267,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/   sequence::delimited,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3268,"byte_end":3294,"line_start":91,"line_end":91,"column_start":1,"column_end":27}},{"value":"/   // see the \"streaming/complete\" paragraph lower for an explanation of these submodules","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3295,"byte_end":3387,"line_start":92,"line_end":92,"column_start":1,"column_end":93}},{"value":"/   character::complete::char,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3388,"byte_end":3420,"line_start":93,"line_end":93,"column_start":1,"column_end":33}},{"value":"/   bytes::complete::is_not","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3421,"byte_end":3450,"line_start":94,"line_end":94,"column_start":1,"column_end":30}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3451,"byte_end":3457,"line_start":95,"line_end":95,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3458,"byte_end":3461,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ fn parens(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3462,"byte_end":3513,"line_start":97,"line_end":97,"column_start":1,"column_end":52}},{"value":"/   delimited(char('('), is_not(\")\"), char(')'))(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3514,"byte_end":3571,"line_start":98,"line_end":98,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3572,"byte_end":3577,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3578,"byte_end":3585,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3586,"byte_end":3589,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It defines a function named `parens` which will recognize a sequence of the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3590,"byte_end":3669,"line_start":102,"line_end":102,"column_start":1,"column_end":80}},{"value":"/ character `(`, the longest byte array not containing `)`, then the character","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3670,"byte_end":3750,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ `)`, and will return the byte array in the middle.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3751,"byte_end":3805,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3806,"byte_end":3809,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Here is another parser, written without using nom's combinators this time:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3810,"byte_end":3888,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3889,"byte_end":3892,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3893,"byte_end":3904,"line_start":108,"line_end":108,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, Err, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3905,"byte_end":3941,"line_start":109,"line_end":109,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3942,"byte_end":3945,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3946,"byte_end":3963,"line_start":111,"line_end":111,"column_start":1,"column_end":18}},{"value":"/ fn take4(i: &[u8]) -> IResult<&[u8], &[u8]>{","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":3964,"byte_end":4012,"line_start":112,"line_end":112,"column_start":1,"column_end":49}},{"value":"/   if i.len() < 4 {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4013,"byte_end":4035,"line_start":113,"line_end":113,"column_start":1,"column_end":23}},{"value":"/     Err(Err::Incomplete(Needed::new(4)))","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4036,"byte_end":4080,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/   } else {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4081,"byte_end":4095,"line_start":115,"line_end":115,"column_start":1,"column_end":15}},{"value":"/     Ok((&i[4..], &i[0..4]))","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4096,"byte_end":4127,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/   }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4128,"byte_end":4135,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4136,"byte_end":4141,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4142,"byte_end":4149,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4150,"byte_end":4157,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4158,"byte_end":4161,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This function takes a byte array as input, and tries to consume 4 bytes.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4162,"byte_end":4238,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/ Writing all the parsers manually, like this, is dangerous, despite Rust's","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4239,"byte_end":4316,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"/ safety features. There are still a lot of mistakes one can make. That's why","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4317,"byte_end":4396,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/ nom provides a list of functions to help in developing parsers.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4397,"byte_end":4464,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4465,"byte_end":4468,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ With functions, you would write it like this:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4469,"byte_end":4518,"line_start":127,"line_end":127,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4519,"byte_end":4522,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4523,"byte_end":4534,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, bytes::streaming::take};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4535,"byte_end":4582,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/ fn take4(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4583,"byte_end":4633,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/   take(4u8)(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4634,"byte_end":4656,"line_start":132,"line_end":132,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4657,"byte_end":4662,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4663,"byte_end":4670,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4671,"byte_end":4674,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ A parser in nom is a function which, for an input type `I`, an output type `O`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4675,"byte_end":4757,"line_start":136,"line_end":136,"column_start":1,"column_end":83}},{"value":"/ and an optional error type `E`, will have the following signature:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4758,"byte_end":4828,"line_start":137,"line_end":137,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4829,"byte_end":4832,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4833,"byte_end":4857,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/ fn parser(input: I) -> IResult<I, O, E>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4858,"byte_end":4902,"line_start":140,"line_end":140,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4903,"byte_end":4910,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4911,"byte_end":4914,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Or like this, if you don't want to specify a custom error type (it will be `(I, ErrorKind)` by default):","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":4915,"byte_end":5023,"line_start":143,"line_end":143,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5024,"byte_end":5027,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5028,"byte_end":5052,"line_start":145,"line_end":145,"column_start":1,"column_end":25}},{"value":"/ fn parser(input: I) -> IResult<I, O>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5053,"byte_end":5094,"line_start":146,"line_end":146,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5095,"byte_end":5102,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5103,"byte_end":5106,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ `IResult` is an alias for the `Result` type:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5107,"byte_end":5155,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5156,"byte_end":5159,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5160,"byte_end":5171,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ use nom::{Needed, error::Error};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5172,"byte_end":5208,"line_start":152,"line_end":152,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5209,"byte_end":5212,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ type IResult<I, O, E = Error<I>> = Result<(I, O), Err<E>>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5213,"byte_end":5275,"line_start":154,"line_end":154,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5276,"byte_end":5279,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ enum Err<E> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5280,"byte_end":5297,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"/   Incomplete(Needed),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5298,"byte_end":5323,"line_start":157,"line_end":157,"column_start":1,"column_end":26}},{"value":"/   Error(E),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5324,"byte_end":5339,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/   Failure(E),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5340,"byte_end":5357,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5358,"byte_end":5363,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5364,"byte_end":5371,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5372,"byte_end":5375,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ It can have the following values:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5376,"byte_end":5413,"line_start":163,"line_end":163,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5414,"byte_end":5417,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ - A correct result `Ok((I,O))` with the first element being the remaining of the input (not parsed yet), and the second the output value;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5418,"byte_end":5559,"line_start":165,"line_end":165,"column_start":1,"column_end":142}},{"value":"/ - An error `Err(Err::Error(c))` with `c` an error that can be built from the input position and a parser specific error","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5560,"byte_end":5683,"line_start":166,"line_end":166,"column_start":1,"column_end":124}},{"value":"/ - An error `Err(Err::Incomplete(Needed))` indicating that more input is necessary. `Needed` can indicate how much data is needed","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5684,"byte_end":5816,"line_start":167,"line_end":167,"column_start":1,"column_end":133}},{"value":"/ - An error `Err(Err::Failure(c))`. It works like the `Error` case, except it indicates an unrecoverable error: We cannot backtrack and test another parser","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5817,"byte_end":5975,"line_start":168,"line_end":168,"column_start":1,"column_end":159}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5976,"byte_end":5979,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ Please refer to the [\"choose a combinator\" guide](https://github.com/Geal/nom/blob/master/doc/choosing_a_combinator.md) for an exhaustive list of parsers.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":5980,"byte_end":6138,"line_start":170,"line_end":170,"column_start":1,"column_end":159}},{"value":"/ See also the rest of the documentation [here](https://github.com/Geal/nom/blob/master/doc).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6139,"byte_end":6234,"line_start":171,"line_end":171,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6235,"byte_end":6238,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ## Making new parsers with function combinators","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6239,"byte_end":6290,"line_start":173,"line_end":173,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6291,"byte_end":6294,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ nom is based on functions that generate parsers, with a signature like","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6295,"byte_end":6369,"line_start":175,"line_end":175,"column_start":1,"column_end":75}},{"value":"/ this: `(arguments) -> impl Fn(Input) -> IResult<Input, Output, Error>`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6370,"byte_end":6445,"line_start":176,"line_end":176,"column_start":1,"column_end":76}},{"value":"/ The arguments of a combinator can be direct values (like `take` which uses","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6446,"byte_end":6524,"line_start":177,"line_end":177,"column_start":1,"column_end":79}},{"value":"/ a number of bytes or character as argument) or even other parsers (like","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6525,"byte_end":6600,"line_start":178,"line_end":178,"column_start":1,"column_end":76}},{"value":"/ `delimited` which takes as argument 3 parsers, and returns the result of","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6601,"byte_end":6677,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ the second one if all are successful).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6678,"byte_end":6720,"line_start":180,"line_end":180,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6721,"byte_end":6724,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ Here are some examples:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6725,"byte_end":6752,"line_start":182,"line_end":182,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6753,"byte_end":6756,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6757,"byte_end":6768,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/ use nom::IResult;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6769,"byte_end":6790,"line_start":185,"line_end":185,"column_start":1,"column_end":22}},{"value":"/ use nom::bytes::complete::{tag, take};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6791,"byte_end":6833,"line_start":186,"line_end":186,"column_start":1,"column_end":43}},{"value":"/ fn abcd_parser(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6834,"byte_end":6886,"line_start":187,"line_end":187,"column_start":1,"column_end":53}},{"value":"/   tag(\"abcd\")(i) // will consume bytes if the input begins with \"abcd\"","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6887,"byte_end":6961,"line_start":188,"line_end":188,"column_start":1,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6962,"byte_end":6967,"line_start":189,"line_end":189,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6968,"byte_end":6971,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ fn take_10(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":6972,"byte_end":7023,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/   take(10u8)(i) // will consume and return 10 bytes of input","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7024,"byte_end":7088,"line_start":192,"line_end":192,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7089,"byte_end":7094,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7095,"byte_end":7102,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7103,"byte_end":7106,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ ## Combining parsers","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7107,"byte_end":7131,"line_start":196,"line_end":196,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7132,"byte_end":7135,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ There are higher level patterns, like the **`alt`** combinator, which","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7136,"byte_end":7209,"line_start":198,"line_end":198,"column_start":1,"column_end":74}},{"value":"/ provides a choice between multiple parsers. If one branch fails, it tries","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7210,"byte_end":7287,"line_start":199,"line_end":199,"column_start":1,"column_end":78}},{"value":"/ the next, and returns the result of the first parser that succeeds:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7288,"byte_end":7359,"line_start":200,"line_end":200,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7360,"byte_end":7363,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7364,"byte_end":7375,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/ use nom::IResult;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7376,"byte_end":7397,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7398,"byte_end":7423,"line_start":204,"line_end":204,"column_start":1,"column_end":26}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7424,"byte_end":7458,"line_start":205,"line_end":205,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7459,"byte_end":7462,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ let mut alt_tags = alt((tag(\"abcd\"), tag(\"efgh\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7463,"byte_end":7518,"line_start":207,"line_end":207,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7519,"byte_end":7522,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alt_tags(&b\"abcdxxx\"[..]), Ok((&b\"xxx\"[..], &b\"abcd\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7523,"byte_end":7598,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(alt_tags(&b\"efghxxx\"[..]), Ok((&b\"xxx\"[..], &b\"efgh\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7599,"byte_end":7674,"line_start":210,"line_end":210,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(alt_tags(&b\"ijklxxx\"[..]), Err(nom::Err::Error((&b\"ijklxxx\"[..], nom::error::ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7675,"byte_end":7786,"line_start":211,"line_end":211,"column_start":1,"column_end":112}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7787,"byte_end":7794,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7795,"byte_end":7798,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ The **`opt`** combinator makes a parser optional. If the child parser returns","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7799,"byte_end":7880,"line_start":214,"line_end":214,"column_start":1,"column_end":82}},{"value":"/ an error, **`opt`** will still succeed and return None:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7881,"byte_end":7940,"line_start":215,"line_end":215,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7941,"byte_end":7944,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7945,"byte_end":7956,"line_start":217,"line_end":217,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, combinator::opt, bytes::complete::tag};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":7957,"byte_end":8019,"line_start":218,"line_end":218,"column_start":1,"column_end":63}},{"value":"/ fn abcd_opt(i: &[u8]) -> IResult<&[u8], Option<&[u8]>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8020,"byte_end":8080,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/   opt(tag(\"abcd\"))(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8081,"byte_end":8106,"line_start":220,"line_end":220,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8107,"byte_end":8112,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8113,"byte_end":8116,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(abcd_opt(&b\"abcdxxx\"[..]), Ok((&b\"xxx\"[..], Some(&b\"abcd\"[..]))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8117,"byte_end":8198,"line_start":223,"line_end":223,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(abcd_opt(&b\"efghxxx\"[..]), Ok((&b\"efghxxx\"[..], None)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8199,"byte_end":8270,"line_start":224,"line_end":224,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8271,"byte_end":8278,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8279,"byte_end":8282,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ **`many0`** applies a parser 0 or more times, and returns a vector of the aggregated results:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8283,"byte_end":8380,"line_start":227,"line_end":227,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8381,"byte_end":8384,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8385,"byte_end":8396,"line_start":229,"line_end":229,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"alloc\")]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8397,"byte_end":8428,"line_start":230,"line_end":230,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8429,"byte_end":8446,"line_start":231,"line_end":231,"column_start":1,"column_end":18}},{"value":"/ use nom::{IResult, multi::many0, bytes::complete::tag};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8447,"byte_end":8506,"line_start":232,"line_end":232,"column_start":1,"column_end":60}},{"value":"/ use std::str;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8507,"byte_end":8524,"line_start":233,"line_end":233,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8525,"byte_end":8528,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ fn multi(i: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8529,"byte_end":8580,"line_start":235,"line_end":235,"column_start":1,"column_end":52}},{"value":"/   many0(tag(\"abcd\"))(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8581,"byte_end":8608,"line_start":236,"line_end":236,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8609,"byte_end":8614,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8615,"byte_end":8618,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ let a = \"abcdef\";","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8619,"byte_end":8640,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/ let b = \"abcdabcdef\";","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8641,"byte_end":8666,"line_start":240,"line_end":240,"column_start":1,"column_end":26}},{"value":"/ let c = \"azerty\";","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8667,"byte_end":8688,"line_start":241,"line_end":241,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(multi(a), Ok((\"ef\",     vec![\"abcd\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8689,"byte_end":8744,"line_start":242,"line_end":242,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(multi(b), Ok((\"ef\",     vec![\"abcd\", \"abcd\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8745,"byte_end":8808,"line_start":243,"line_end":243,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(multi(c), Ok((\"azerty\", Vec::new())));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8809,"byte_end":8862,"line_start":244,"line_end":244,"column_start":1,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8863,"byte_end":8870,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"alloc\"))]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8871,"byte_end":8907,"line_start":246,"line_end":246,"column_start":1,"column_end":37}},{"value":"/ # fn main() {}","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8908,"byte_end":8926,"line_start":247,"line_end":247,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8927,"byte_end":8934,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8935,"byte_end":8938,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Here are some basic combinators available:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8939,"byte_end":8985,"line_start":250,"line_end":250,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8986,"byte_end":8989,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ - **`opt`**: Will make the parser optional (if it returns the `O` type, the new parser returns `Option<O>`)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":8990,"byte_end":9101,"line_start":252,"line_end":252,"column_start":1,"column_end":112}},{"value":"/ - **`many0`**: Will apply the parser 0 or more times (if it returns the `O` type, the new parser returns `Vec<O>`)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9102,"byte_end":9220,"line_start":253,"line_end":253,"column_start":1,"column_end":119}},{"value":"/ - **`many1`**: Will apply the parser 1 or more times","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9221,"byte_end":9277,"line_start":254,"line_end":254,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9278,"byte_end":9281,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ There are more complex (and more useful) parsers like `tuple!`, which is","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9282,"byte_end":9358,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ used to apply a series of parsers then assemble their results.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9359,"byte_end":9425,"line_start":257,"line_end":257,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9426,"byte_end":9429,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Example with `tuple`:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9430,"byte_end":9455,"line_start":259,"line_end":259,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9456,"byte_end":9459,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9460,"byte_end":9471,"line_start":261,"line_end":261,"column_start":1,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9472,"byte_end":9489,"line_start":262,"line_end":262,"column_start":1,"column_end":18}},{"value":"/ use nom::{error::ErrorKind, Needed,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9490,"byte_end":9529,"line_start":263,"line_end":263,"column_start":1,"column_end":40}},{"value":"/ number::streaming::be_u16,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9530,"byte_end":9560,"line_start":264,"line_end":264,"column_start":1,"column_end":31}},{"value":"/ bytes::streaming::{tag, take},","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9561,"byte_end":9595,"line_start":265,"line_end":265,"column_start":1,"column_end":35}},{"value":"/ sequence::tuple};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9596,"byte_end":9617,"line_start":266,"line_end":266,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9618,"byte_end":9621,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ let mut tpl = tuple((be_u16, take(3u8), tag(\"fg\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9622,"byte_end":9678,"line_start":268,"line_end":268,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9679,"byte_end":9682,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9683,"byte_end":9698,"line_start":270,"line_end":270,"column_start":1,"column_end":16}},{"value":"/   tpl(&b\"abcdefgh\"[..]),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9699,"byte_end":9727,"line_start":271,"line_end":271,"column_start":1,"column_end":29}},{"value":"/   Ok((","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9728,"byte_end":9738,"line_start":272,"line_end":272,"column_start":1,"column_end":11}},{"value":"/     &b\"h\"[..],","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9739,"byte_end":9757,"line_start":273,"line_end":273,"column_start":1,"column_end":19}},{"value":"/     (0x6162u16, &b\"cde\"[..], &b\"fg\"[..])","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9758,"byte_end":9802,"line_start":274,"line_end":274,"column_start":1,"column_end":45}},{"value":"/   ))","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9803,"byte_end":9811,"line_start":275,"line_end":275,"column_start":1,"column_end":9}},{"value":"/ );","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9812,"byte_end":9818,"line_start":276,"line_end":276,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(tpl(&b\"abcde\"[..]), Err(nom::Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9819,"byte_end":9897,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ let input = &b\"abcdejk\"[..];","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9898,"byte_end":9930,"line_start":278,"line_end":278,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(tpl(input), Err(nom::Err::Error((&input[5..], ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":9931,"byte_end":10011,"line_start":279,"line_end":279,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10012,"byte_end":10019,"line_start":280,"line_end":280,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10020,"byte_end":10027,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10028,"byte_end":10031,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ But you can also use a sequence of combinators written in imperative style,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10032,"byte_end":10111,"line_start":283,"line_end":283,"column_start":1,"column_end":80}},{"value":"/ thanks to the `?` operator:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10112,"byte_end":10143,"line_start":284,"line_end":284,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10144,"byte_end":10147,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10148,"byte_end":10159,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10160,"byte_end":10177,"line_start":287,"line_end":287,"column_start":1,"column_end":18}},{"value":"/ use nom::{IResult, bytes::complete::tag};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10178,"byte_end":10223,"line_start":288,"line_end":288,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10224,"byte_end":10227,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10228,"byte_end":10259,"line_start":290,"line_end":290,"column_start":1,"column_end":32}},{"value":"/ struct A {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10260,"byte_end":10274,"line_start":291,"line_end":291,"column_start":1,"column_end":15}},{"value":"/   a: u8,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10275,"byte_end":10287,"line_start":292,"line_end":292,"column_start":1,"column_end":13}},{"value":"/   b: u8","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10288,"byte_end":10299,"line_start":293,"line_end":293,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10300,"byte_end":10305,"line_start":294,"line_end":294,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10306,"byte_end":10309,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ fn ret_int1(i:&[u8]) -> IResult<&[u8], u8> { Ok((i,1)) }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10310,"byte_end":10370,"line_start":296,"line_end":296,"column_start":1,"column_end":61}},{"value":"/ fn ret_int2(i:&[u8]) -> IResult<&[u8], u8> { Ok((i,2)) }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10371,"byte_end":10431,"line_start":297,"line_end":297,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10432,"byte_end":10435,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ fn f(i: &[u8]) -> IResult<&[u8], A> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10436,"byte_end":10477,"line_start":299,"line_end":299,"column_start":1,"column_end":42}},{"value":"/   // if successful, the parser returns `Ok((remaining_input, output_value))` that we can destructure","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10478,"byte_end":10582,"line_start":300,"line_end":300,"column_start":1,"column_end":105}},{"value":"/   let (i, _) = tag(\"abcd\")(i)?;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10583,"byte_end":10618,"line_start":301,"line_end":301,"column_start":1,"column_end":36}},{"value":"/   let (i, a) = ret_int1(i)?;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10619,"byte_end":10651,"line_start":302,"line_end":302,"column_start":1,"column_end":33}},{"value":"/   let (i, _) = tag(\"efgh\")(i)?;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10652,"byte_end":10687,"line_start":303,"line_end":303,"column_start":1,"column_end":36}},{"value":"/   let (i, b) = ret_int2(i)?;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10688,"byte_end":10720,"line_start":304,"line_end":304,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10721,"byte_end":10724,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/   Ok((i, A { a, b }))","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10725,"byte_end":10750,"line_start":306,"line_end":306,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10751,"byte_end":10756,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10757,"byte_end":10760,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ let r = f(b\"abcdefghX\");","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10761,"byte_end":10789,"line_start":309,"line_end":309,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(r, Ok((&b\"X\"[..], A{a: 1, b: 2})));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10790,"byte_end":10840,"line_start":310,"line_end":310,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10841,"byte_end":10848,"line_start":311,"line_end":311,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10849,"byte_end":10856,"line_start":312,"line_end":312,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10857,"byte_end":10860,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ ## Streaming / Complete","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10861,"byte_end":10888,"line_start":314,"line_end":314,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10889,"byte_end":10892,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ Some of nom's modules have `streaming` or `complete` submodules. They hold","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10893,"byte_end":10971,"line_start":316,"line_end":316,"column_start":1,"column_end":79}},{"value":"/ different variants of the same combinators.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":10972,"byte_end":11019,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11020,"byte_end":11023,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ A streaming parser assumes that we might not have all of the input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11024,"byte_end":11100,"line_start":319,"line_end":319,"column_start":1,"column_end":77}},{"value":"/ This can happen with some network protocol or large file parsers, where the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11101,"byte_end":11180,"line_start":320,"line_end":320,"column_start":1,"column_end":80}},{"value":"/ input buffer can be full and need to be resized or refilled.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11181,"byte_end":11245,"line_start":321,"line_end":321,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11246,"byte_end":11249,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ A complete parser assumes that we already have all of the input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11250,"byte_end":11323,"line_start":323,"line_end":323,"column_start":1,"column_end":74}},{"value":"/ This will be the common case with small files that can be read entirely to","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11324,"byte_end":11402,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/ memory.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11403,"byte_end":11414,"line_start":325,"line_end":325,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11415,"byte_end":11418,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ Here is how it works in practice:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11419,"byte_end":11456,"line_start":327,"line_end":327,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11457,"byte_end":11460,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11461,"byte_end":11472,"line_start":329,"line_end":329,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, Err, Needed, error::{Error, ErrorKind}, bytes, character};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11473,"byte_end":11554,"line_start":330,"line_end":330,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11555,"byte_end":11558,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ fn take_streaming(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11559,"byte_end":11617,"line_start":332,"line_end":332,"column_start":1,"column_end":59}},{"value":"/   bytes::streaming::take(4u8)(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11618,"byte_end":11654,"line_start":333,"line_end":333,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11655,"byte_end":11660,"line_start":334,"line_end":334,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11661,"byte_end":11664,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ fn take_complete(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11665,"byte_end":11722,"line_start":336,"line_end":336,"column_start":1,"column_end":58}},{"value":"/   bytes::complete::take(4u8)(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11723,"byte_end":11758,"line_start":337,"line_end":337,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11759,"byte_end":11764,"line_start":338,"line_end":338,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11765,"byte_end":11768,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ // both parsers will take 4 bytes as expected","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11769,"byte_end":11818,"line_start":340,"line_end":340,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(take_streaming(&b\"abcde\"[..]), Ok((&b\"e\"[..], &b\"abcd\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11819,"byte_end":11896,"line_start":341,"line_end":341,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(take_complete(&b\"abcde\"[..]), Ok((&b\"e\"[..], &b\"abcd\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11897,"byte_end":11973,"line_start":342,"line_end":342,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11974,"byte_end":11977,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ // if the input is smaller than 4 bytes, the streaming parser","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":11978,"byte_end":12043,"line_start":344,"line_end":344,"column_start":1,"column_end":66}},{"value":"/ // will return `Incomplete` to indicate that we need more data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12044,"byte_end":12110,"line_start":345,"line_end":345,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(take_streaming(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12111,"byte_end":12193,"line_start":346,"line_end":346,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12194,"byte_end":12197,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ // but the complete parser will return an error","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12198,"byte_end":12249,"line_start":348,"line_end":348,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(take_complete(&b\"abc\"[..]), Err(Err::Error(Error::new(&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12250,"byte_end":12351,"line_start":349,"line_end":349,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12352,"byte_end":12355,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ // the alpha0 function recognizes 0 or more alphabetic characters","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12356,"byte_end":12425,"line_start":351,"line_end":351,"column_start":1,"column_end":70}},{"value":"/ fn alpha0_streaming(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12426,"byte_end":12483,"line_start":352,"line_end":352,"column_start":1,"column_end":58}},{"value":"/   character::streaming::alpha0(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12484,"byte_end":12521,"line_start":353,"line_end":353,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12522,"byte_end":12527,"line_start":354,"line_end":354,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12528,"byte_end":12531,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ fn alpha0_complete(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12532,"byte_end":12588,"line_start":356,"line_end":356,"column_start":1,"column_end":57}},{"value":"/   character::complete::alpha0(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12589,"byte_end":12625,"line_start":357,"line_end":357,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12626,"byte_end":12631,"line_start":358,"line_end":358,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12632,"byte_end":12635,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ // if there's a clear limit to the recognized characters, both parsers work the same way","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12636,"byte_end":12728,"line_start":360,"line_end":360,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(alpha0_streaming(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12729,"byte_end":12790,"line_start":361,"line_end":361,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(alpha0_complete(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12791,"byte_end":12851,"line_start":362,"line_end":362,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12852,"byte_end":12855,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ // but when there's no limit, the streaming version returns `Incomplete`, because it cannot","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12856,"byte_end":12951,"line_start":364,"line_end":364,"column_start":1,"column_end":96}},{"value":"/ // know if more input data should be recognized. The whole input could be \"abcd;\", or","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":12952,"byte_end":13041,"line_start":365,"line_end":365,"column_start":1,"column_end":90}},{"value":"/ // \"abcde;\"","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":13042,"byte_end":13057,"line_start":366,"line_end":366,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(alpha0_streaming(\"abcd\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":13058,"byte_end":13137,"line_start":367,"line_end":367,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":13138,"byte_end":13141,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ // while the complete version knows that all of the data is there","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":13142,"byte_end":13211,"line_start":369,"line_end":369,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha0_complete(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":13212,"byte_end":13270,"line_start":370,"line_end":370,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":13271,"byte_end":13278,"line_start":371,"line_end":371,"column_start":1,"column_end":8}},{"value":"/ **Going further:** Read the [guides](https://github.com/Geal/nom/tree/master/doc),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":13279,"byte_end":13365,"line_start":372,"line_end":372,"column_start":1,"column_end":87}},{"value":"/ check out the [recipes]!","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":13366,"byte_end":13394,"line_start":373,"line_end":373,"column_start":1,"column_end":29}},{"value":"deny(missing_docs)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":13667,"byte_end":13689,"line_start":379,"line_end":379,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":14159,"byte_end":14162,"line_start":396,"line_end":396,"column_start":9,"column_end":12},"name":"lib","qualname":"::lib","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":5}],"decl_id":null,"docs":" Lib module to re-export everything needed from `std` or `core`/`alloc`. This is how `serde` does\n it, albeit there it is not public.\n","sig":null,"attributes":[{"value":"/ Lib module to re-export everything needed from `std` or `core`/`alloc`. This is how `serde` does","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":13947,"byte_end":14047,"line_start":393,"line_end":393,"column_start":1,"column_end":101}},{"value":"/ it, albeit there it is not public.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":14048,"byte_end":14086,"line_start":394,"line_end":394,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15032,"byte_end":15035,"line_start":424,"line_end":424,"column_start":11,"column_end":14},"name":"std","qualname":"::lib::std","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58}],"decl_id":null,"docs":" internal std exports for no_std compatibility\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":14880,"byte_end":14903,"line_start":421,"line_end":421,"column_start":3,"column_end":26}},{"value":"/ internal std exports for no_std compatibility","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":14972,"byte_end":15021,"line_start":423,"line_end":423,"column_start":3,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":58},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15289,"byte_end":15296,"line_start":433,"line_end":433,"column_start":13,"column_end":20},"name":"prelude","qualname":"::lib::std::prelude","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":59}],"decl_id":null,"docs":" internal reproduction of std prelude\n","sig":null,"attributes":[{"value":"/ internal reproduction of std prelude","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15217,"byte_end":15257,"line_start":431,"line_end":431,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":66},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":2710},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2719},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":2723},{"krate":0,"index":2726},{"krate":0,"index":2729},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2738},{"krate":0,"index":2748},{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":130},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":161},{"krate":0,"index":2756},{"krate":0,"index":2863},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2871},{"krate":0,"index":2874},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":" Error management","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15445,"byte_end":15457,"line_start":445,"line_end":445,"column_start":1,"column_end":13}},{"value":"/ Error management","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":15814,"byte_end":15834,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":15835,"byte_end":15838,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Parsers are generic over their error type, requiring that it implements","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":15839,"byte_end":15914,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ the `error::ParseError<Input>` trait.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":15915,"byte_end":15956,"line_start":4,"line_end":4,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":73},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16327,"byte_end":16337,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"ParseError","qualname":"::error::ParseError","value":"ParseError<I>: Sized","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" This trait must be implemented by the error type of a nom parser.","sig":null,"attributes":[{"value":"/ This trait must be implemented by the error type of a nom parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16014,"byte_end":16083,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16084,"byte_end":16087,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ There are already implementations of it for `(Input, ErrorKind)`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16088,"byte_end":16156,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ and `VerboseError<Input>`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16157,"byte_end":16187,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16188,"byte_end":16191,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ It provides methods to create an error from some combinators,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16192,"byte_end":16257,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ and combine existing errors in combinators like `alt`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16258,"byte_end":16316,"line_start":15,"line_end":15,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16421,"byte_end":16436,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"name":"from_error_kind","qualname":"::error::ParseError::from_error_kind","value":"pub fn from_error_kind(I, ErrorKind) -> Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Creates an error from the input position and an [ErrorKind]\n","sig":null,"attributes":[{"value":"/ Creates an error from the input position and an [ErrorKind]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16352,"byte_end":16415,"line_start":17,"line_end":17,"column_start":3,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16684,"byte_end":16690,"line_start":23,"line_end":23,"column_start":6,"column_end":12},"name":"append","qualname":"::error::ParseError::append","value":"pub fn append(I, ErrorKind, Self) -> Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Combines an existing error with a new one created from the input\n position and an [ErrorKind]. This is useful when backtracking\n through a parse tree, accumulating error context on the way\n","sig":null,"attributes":[{"value":"/ Combines an existing error with a new one created from the input","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16476,"byte_end":16544,"line_start":20,"line_end":20,"column_start":3,"column_end":71}},{"value":"/ position and an [ErrorKind]. This is useful when backtracking","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16547,"byte_end":16612,"line_start":21,"line_end":21,"column_start":3,"column_end":68}},{"value":"/ through a parse tree, accumulating error context on the way","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16615,"byte_end":16678,"line_start":22,"line_end":22,"column_start":3,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16818,"byte_end":16827,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"name":"from_char","qualname":"::error::ParseError::from_char","value":"pub fn from_char(I, char) -> Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Creates an error from an input position and an expected character\n","sig":null,"attributes":[{"value":"/ Creates an error from an input position and an expected character","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16743,"byte_end":16812,"line_start":25,"line_end":25,"column_start":3,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17039,"byte_end":17041,"line_start":32,"line_end":32,"column_start":6,"column_end":8},"name":"or","qualname":"::error::ParseError::or","value":"pub fn or(Self, Self) -> Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Combines two existing errors. This function is used to compare errors\n generated in various branches of `alt`.\n","sig":null,"attributes":[{"value":"/ Combines two existing errors. This function is used to compare errors","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16914,"byte_end":16987,"line_start":30,"line_end":30,"column_start":3,"column_end":76}},{"value":"/ generated in various branches of `alt`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16990,"byte_end":17033,"line_start":31,"line_end":31,"column_start":3,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":79},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17201,"byte_end":17213,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"ContextError","qualname":"::error::ContextError","value":"ContextError<I>: Sized","parent":null,"children":[{"krate":0,"index":81}],"decl_id":null,"docs":" This trait is required by the `context` combinator to add a static string\n to an existing error\n","sig":null,"attributes":[{"value":"/ This trait is required by the `context` combinator to add a static string","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17088,"byte_end":17165,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ to an existing error","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17166,"byte_end":17190,"line_start":38,"line_end":38,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17463,"byte_end":17474,"line_start":43,"line_end":43,"column_start":6,"column_end":17},"name":"add_context","qualname":"::error::ContextError::add_context","value":"pub fn add_context(I, &'static str, Self) -> Self","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Creates a new error from an input position, a static string and an existing error.\n This is used mainly in the [context] combinator, to add user friendly information\n to errors when backtracking through a parse tree\n","sig":null,"attributes":[{"value":"/ Creates a new error from an input position, a static string and an existing error.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17228,"byte_end":17314,"line_start":40,"line_end":40,"column_start":3,"column_end":89}},{"value":"/ This is used mainly in the [context] combinator, to add user friendly information","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17317,"byte_end":17402,"line_start":41,"line_end":41,"column_start":3,"column_end":88}},{"value":"/ to errors when backtracking through a parse tree","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17405,"byte_end":17457,"line_start":42,"line_end":42,"column_start":3,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17690,"byte_end":17707,"line_start":50,"line_end":50,"column_start":11,"column_end":28},"name":"FromExternalError","qualname":"::error::FromExternalError","value":"FromExternalError<I, E>","parent":null,"children":[{"krate":0,"index":85}],"decl_id":null,"docs":" This trait is required by the `map_res` combinator to integrate\n error types from external functions, like [std::str::FromStr]\n","sig":null,"attributes":[{"value":"/ This trait is required by the `map_res` combinator to integrate","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17546,"byte_end":17613,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ error types from external functions, like [std::str::FromStr]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17614,"byte_end":17679,"line_start":49,"line_end":49,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17846,"byte_end":17865,"line_start":53,"line_end":53,"column_start":6,"column_end":25},"name":"from_external_error","qualname":"::error::FromExternalError::from_external_error","value":"pub fn from_external_error(I, ErrorKind, E) -> Self","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Creates a new error from an input position, an [ErrorKind] indicating the\n wrapping parser, and an external error\n","sig":null,"attributes":[{"value":"/ Creates a new error from an input position, an [ErrorKind] indicating the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17718,"byte_end":17795,"line_start":51,"line_end":51,"column_start":3,"column_end":80}},{"value":"/ wrapping parser, and an external error","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17798,"byte_end":17840,"line_start":52,"line_end":52,"column_start":3,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2710},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18017,"byte_end":18022,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error { input, code }","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713}],"decl_id":null,"docs":" default error type, only contains the error' location and code\n","sig":null,"attributes":[{"value":"/ default error type, only contains the error' location and code","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17911,"byte_end":17977,"line_start":56,"line_end":56,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2712},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18080,"byte_end":18085,"line_start":60,"line_end":60,"column_start":7,"column_end":12},"name":"input","qualname":"::error::Error::input","value":"I","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" position of the error in the input data\n","sig":null,"attributes":[{"value":"/ position of the error in the input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18030,"byte_end":18073,"line_start":59,"line_end":59,"column_start":3,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2713},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18117,"byte_end":18121,"line_start":62,"line_end":62,"column_start":7,"column_end":11},"name":"code","qualname":"::error::Error::code","value":"error::ErrorKind","parent":{"krate":0,"index":2710},"children":[],"decl_id":null,"docs":" nom error code\n","sig":null,"attributes":[{"value":"/ nom error code","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18092,"byte_end":18110,"line_start":61,"line_end":61,"column_start":3,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18197,"byte_end":18200,"line_start":67,"line_end":67,"column_start":10,"column_end":13},"name":"new","qualname":"<Error<I>>::new","value":"pub fn new(I, ErrorKind) -> Error<I>","parent":null,"children":[],"decl_id":null,"docs":" creates a new basic error\n","sig":null,"attributes":[{"value":"/ creates a new basic error","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18158,"byte_end":18187,"line_start":66,"line_end":66,"column_start":3,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":124},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":19952,"byte_end":19962,"line_start":134,"line_end":134,"column_start":8,"column_end":18},"name":"make_error","qualname":"::error::make_error","value":"pub fn make_error<I, E: ParseError<I>>(I, ErrorKind) -> E","parent":null,"children":[],"decl_id":null,"docs":" Creates an error from the input position and an [ErrorKind]\n","sig":null,"attributes":[{"value":"/ Creates an error from the input position and an [ErrorKind]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":19881,"byte_end":19944,"line_start":133,"line_end":133,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20261,"byte_end":20273,"line_start":141,"line_end":141,"column_start":8,"column_end":20},"name":"append_error","qualname":"::error::append_error","value":"pub fn append_error<I, E: ParseError<I>>(I, ErrorKind, E) -> E","parent":null,"children":[],"decl_id":null,"docs":" Combines an existing error with a new one created from the input\n position and an [ErrorKind]. This is useful when backtracking\n through a parse tree, accumulating error context on the way\n","sig":null,"attributes":[{"value":"/ Combines an existing error with a new one created from the input","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20055,"byte_end":20123,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"/ position and an [ErrorKind]. This is useful when backtracking","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20124,"byte_end":20189,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/ through a parse tree, accumulating error context on the way","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20190,"byte_end":20253,"line_start":140,"line_end":140,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2723},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20719,"byte_end":20731,"line_start":151,"line_end":151,"column_start":12,"column_end":24},"name":"VerboseError","qualname":"::error::VerboseError","value":"VerboseError { errors }","parent":null,"children":[{"krate":0,"index":2725}],"decl_id":null,"docs":" This error type accumulates errors and their position when backtracking\n through a parse tree. With some post processing (cf `examples/json.rs`),\n it can be used to display user friendly error messages\n","sig":null,"attributes":[{"value":"/ This error type accumulates errors and their position when backtracking","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20374,"byte_end":20449,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ through a parse tree. With some post processing (cf `examples/json.rs`),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20450,"byte_end":20526,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ it can be used to display user friendly error messages","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20527,"byte_end":20585,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20586,"byte_end":20611,"line_start":148,"line_end":148,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2725},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20862,"byte_end":20868,"line_start":154,"line_end":154,"column_start":7,"column_end":13},"name":"errors","qualname":"::error::VerboseError::errors","value":"std::vec::Vec<(I, error::VerboseErrorKind)>","parent":{"krate":0,"index":2723},"children":[],"decl_id":null,"docs":" List of errors accumulated by `VerboseError`, containing the affected\n part of input data, and some context\n","sig":null,"attributes":[{"value":"/ List of errors accumulated by `VerboseError`, containing the affected","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20739,"byte_end":20812,"line_start":152,"line_end":152,"column_start":3,"column_end":76}},{"value":"/ part of input data, and some context","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20815,"byte_end":20855,"line_start":153,"line_end":153,"column_start":3,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2739},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":21164,"byte_end":21171,"line_start":163,"line_end":163,"column_start":3,"column_end":10},"name":"Context","qualname":"::error::VerboseErrorKind::Context","value":"VerboseErrorKind::Context(&'static str)","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Static string added by the `context` function\n","sig":null,"attributes":[{"value":"/ Static string added by the `context` function","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":21112,"byte_end":21161,"line_start":162,"line_end":162,"column_start":3,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2742},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":21257,"byte_end":21261,"line_start":165,"line_end":165,"column_start":3,"column_end":7},"name":"Char","qualname":"::error::VerboseErrorKind::Char","value":"VerboseErrorKind::Char(char)","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Indicates which character was expected by the `char` function\n","sig":null,"attributes":[{"value":"/ Indicates which character was expected by the `char` function","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":21189,"byte_end":21254,"line_start":164,"line_end":164,"column_start":3,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2745},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":21317,"byte_end":21320,"line_start":167,"line_end":167,"column_start":3,"column_end":6},"name":"Nom","qualname":"::error::VerboseErrorKind::Nom","value":"VerboseErrorKind::Nom(ErrorKind)","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Error kind given by various nom parsers\n","sig":null,"attributes":[{"value":"/ Error kind given by various nom parsers","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":21271,"byte_end":21314,"line_start":166,"line_end":166,"column_start":3,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2738},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":21091,"byte_end":21107,"line_start":161,"line_end":161,"column_start":10,"column_end":26},"name":"VerboseErrorKind","qualname":"::error::VerboseErrorKind","value":"pub enum VerboseErrorKind {\n    Context(&'static str),\n    Char(char),\n    Nom(ErrorKind),\n}","parent":null,"children":[{"krate":0,"index":2739},{"krate":0,"index":2742},{"krate":0,"index":2745}],"decl_id":null,"docs":" Error context for `VerboseError`\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":20923,"byte_end":20948,"line_start":157,"line_end":157,"column_start":1,"column_end":26}},{"value":"/ Error context for `VerboseError`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":21045,"byte_end":21081,"line_start":160,"line_end":160,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":23397,"byte_end":23404,"line_start":233,"line_end":233,"column_start":8,"column_end":15},"name":"context","qualname":"::error::context","value":"pub fn context<I: Clone, E: ContextError<I>, F, O>(&'static str, F)\n-> /*impl Trait*/ where F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Create a new error from an input position, a static string and an existing error.\n This is used mainly in the [context] combinator, to add user friendly information\n to errors when backtracking through a parse tree\n","sig":null,"attributes":[{"value":"/ Create a new error from an input position, a static string and an existing error.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":23165,"byte_end":23250,"line_start":230,"line_end":230,"column_start":1,"column_end":86}},{"value":"/ This is used mainly in the [context] combinator, to add user friendly information","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":23251,"byte_end":23336,"line_start":231,"line_end":231,"column_start":1,"column_end":86}},{"value":"/ to errors when backtracking through a parse tree","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":23337,"byte_end":23389,"line_start":232,"line_end":232,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":23995,"byte_end":24008,"line_start":251,"line_end":251,"column_start":8,"column_end":21},"name":"convert_error","qualname":"::error::convert_error","value":"pub fn convert_error<I: core::ops::Deref<Target = str>>(I, VerboseError<I>)\n-> crate::lib::std::string::String","parent":null,"children":[],"decl_id":null,"docs":" Transforms a `VerboseError` into a trace with input position information\n","sig":null,"attributes":[{"value":"/ Transforms a `VerboseError` into a trace with input position information","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":23824,"byte_end":23900,"line_start":248,"line_end":248,"column_start":1,"column_end":77}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":23901,"byte_end":23926,"line_start":249,"line_end":249,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2757},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27527,"byte_end":27530,"line_start":367,"line_end":367,"column_start":3,"column_end":6},"name":"Tag","qualname":"::error::ErrorKind::Tag","value":"ErrorKind::Tag","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2759},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27534,"byte_end":27540,"line_start":368,"line_end":368,"column_start":3,"column_end":9},"name":"MapRes","qualname":"::error::ErrorKind::MapRes","value":"ErrorKind::MapRes","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2761},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27544,"byte_end":27550,"line_start":369,"line_end":369,"column_start":3,"column_end":9},"name":"MapOpt","qualname":"::error::ErrorKind::MapOpt","value":"ErrorKind::MapOpt","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2763},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27554,"byte_end":27557,"line_start":370,"line_end":370,"column_start":3,"column_end":6},"name":"Alt","qualname":"::error::ErrorKind::Alt","value":"ErrorKind::Alt","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2765},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27561,"byte_end":27566,"line_start":371,"line_end":371,"column_start":3,"column_end":8},"name":"IsNot","qualname":"::error::ErrorKind::IsNot","value":"ErrorKind::IsNot","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2767},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27570,"byte_end":27573,"line_start":372,"line_end":372,"column_start":3,"column_end":6},"name":"IsA","qualname":"::error::ErrorKind::IsA","value":"ErrorKind::IsA","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2769},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27577,"byte_end":27590,"line_start":373,"line_end":373,"column_start":3,"column_end":16},"name":"SeparatedList","qualname":"::error::ErrorKind::SeparatedList","value":"ErrorKind::SeparatedList","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2771},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27594,"byte_end":27615,"line_start":374,"line_end":374,"column_start":3,"column_end":24},"name":"SeparatedNonEmptyList","qualname":"::error::ErrorKind::SeparatedNonEmptyList","value":"ErrorKind::SeparatedNonEmptyList","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2773},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27619,"byte_end":27624,"line_start":375,"line_end":375,"column_start":3,"column_end":8},"name":"Many0","qualname":"::error::ErrorKind::Many0","value":"ErrorKind::Many0","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2775},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27628,"byte_end":27633,"line_start":376,"line_end":376,"column_start":3,"column_end":8},"name":"Many1","qualname":"::error::ErrorKind::Many1","value":"ErrorKind::Many1","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2777},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27637,"byte_end":27645,"line_start":377,"line_end":377,"column_start":3,"column_end":11},"name":"ManyTill","qualname":"::error::ErrorKind::ManyTill","value":"ErrorKind::ManyTill","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2779},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27649,"byte_end":27654,"line_start":378,"line_end":378,"column_start":3,"column_end":8},"name":"Count","qualname":"::error::ErrorKind::Count","value":"ErrorKind::Count","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2781},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27658,"byte_end":27667,"line_start":379,"line_end":379,"column_start":3,"column_end":12},"name":"TakeUntil","qualname":"::error::ErrorKind::TakeUntil","value":"ErrorKind::TakeUntil","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2783},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27671,"byte_end":27682,"line_start":380,"line_end":380,"column_start":3,"column_end":14},"name":"LengthValue","qualname":"::error::ErrorKind::LengthValue","value":"ErrorKind::LengthValue","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2785},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27686,"byte_end":27696,"line_start":381,"line_end":381,"column_start":3,"column_end":13},"name":"TagClosure","qualname":"::error::ErrorKind::TagClosure","value":"ErrorKind::TagClosure","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2787},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27700,"byte_end":27705,"line_start":382,"line_end":382,"column_start":3,"column_end":8},"name":"Alpha","qualname":"::error::ErrorKind::Alpha","value":"ErrorKind::Alpha","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2789},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27709,"byte_end":27714,"line_start":383,"line_end":383,"column_start":3,"column_end":8},"name":"Digit","qualname":"::error::ErrorKind::Digit","value":"ErrorKind::Digit","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2791},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27718,"byte_end":27726,"line_start":384,"line_end":384,"column_start":3,"column_end":11},"name":"HexDigit","qualname":"::error::ErrorKind::HexDigit","value":"ErrorKind::HexDigit","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2793},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27730,"byte_end":27738,"line_start":385,"line_end":385,"column_start":3,"column_end":11},"name":"OctDigit","qualname":"::error::ErrorKind::OctDigit","value":"ErrorKind::OctDigit","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2795},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27742,"byte_end":27754,"line_start":386,"line_end":386,"column_start":3,"column_end":15},"name":"AlphaNumeric","qualname":"::error::ErrorKind::AlphaNumeric","value":"ErrorKind::AlphaNumeric","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2797},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27758,"byte_end":27763,"line_start":387,"line_end":387,"column_start":3,"column_end":8},"name":"Space","qualname":"::error::ErrorKind::Space","value":"ErrorKind::Space","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2799},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27767,"byte_end":27777,"line_start":388,"line_end":388,"column_start":3,"column_end":13},"name":"MultiSpace","qualname":"::error::ErrorKind::MultiSpace","value":"ErrorKind::MultiSpace","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2801},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27781,"byte_end":27794,"line_start":389,"line_end":389,"column_start":3,"column_end":16},"name":"LengthValueFn","qualname":"::error::ErrorKind::LengthValueFn","value":"ErrorKind::LengthValueFn","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2803},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27798,"byte_end":27801,"line_start":390,"line_end":390,"column_start":3,"column_end":6},"name":"Eof","qualname":"::error::ErrorKind::Eof","value":"ErrorKind::Eof","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2805},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27805,"byte_end":27811,"line_start":391,"line_end":391,"column_start":3,"column_end":9},"name":"Switch","qualname":"::error::ErrorKind::Switch","value":"ErrorKind::Switch","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2807},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27815,"byte_end":27822,"line_start":392,"line_end":392,"column_start":3,"column_end":10},"name":"TagBits","qualname":"::error::ErrorKind::TagBits","value":"ErrorKind::TagBits","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2809},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27826,"byte_end":27831,"line_start":393,"line_end":393,"column_start":3,"column_end":8},"name":"OneOf","qualname":"::error::ErrorKind::OneOf","value":"ErrorKind::OneOf","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2811},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27835,"byte_end":27841,"line_start":394,"line_end":394,"column_start":3,"column_end":9},"name":"NoneOf","qualname":"::error::ErrorKind::NoneOf","value":"ErrorKind::NoneOf","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2813},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27845,"byte_end":27849,"line_start":395,"line_end":395,"column_start":3,"column_end":7},"name":"Char","qualname":"::error::ErrorKind::Char","value":"ErrorKind::Char","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2815},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27853,"byte_end":27857,"line_start":396,"line_end":396,"column_start":3,"column_end":7},"name":"CrLf","qualname":"::error::ErrorKind::CrLf","value":"ErrorKind::CrLf","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2817},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27861,"byte_end":27872,"line_start":397,"line_end":397,"column_start":3,"column_end":14},"name":"RegexpMatch","qualname":"::error::ErrorKind::RegexpMatch","value":"ErrorKind::RegexpMatch","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2819},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27876,"byte_end":27889,"line_start":398,"line_end":398,"column_start":3,"column_end":16},"name":"RegexpMatches","qualname":"::error::ErrorKind::RegexpMatches","value":"ErrorKind::RegexpMatches","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2821},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27893,"byte_end":27903,"line_start":399,"line_end":399,"column_start":3,"column_end":13},"name":"RegexpFind","qualname":"::error::ErrorKind::RegexpFind","value":"ErrorKind::RegexpFind","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2823},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27907,"byte_end":27920,"line_start":400,"line_end":400,"column_start":3,"column_end":16},"name":"RegexpCapture","qualname":"::error::ErrorKind::RegexpCapture","value":"ErrorKind::RegexpCapture","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2825},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27924,"byte_end":27938,"line_start":401,"line_end":401,"column_start":3,"column_end":17},"name":"RegexpCaptures","qualname":"::error::ErrorKind::RegexpCaptures","value":"ErrorKind::RegexpCaptures","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2827},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27942,"byte_end":27952,"line_start":402,"line_end":402,"column_start":3,"column_end":13},"name":"TakeWhile1","qualname":"::error::ErrorKind::TakeWhile1","value":"ErrorKind::TakeWhile1","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2829},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27956,"byte_end":27964,"line_start":403,"line_end":403,"column_start":3,"column_end":11},"name":"Complete","qualname":"::error::ErrorKind::Complete","value":"ErrorKind::Complete","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2831},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27968,"byte_end":27971,"line_start":404,"line_end":404,"column_start":3,"column_end":6},"name":"Fix","qualname":"::error::ErrorKind::Fix","value":"ErrorKind::Fix","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2833},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27975,"byte_end":27982,"line_start":405,"line_end":405,"column_start":3,"column_end":10},"name":"Escaped","qualname":"::error::ErrorKind::Escaped","value":"ErrorKind::Escaped","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2835},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27986,"byte_end":28002,"line_start":406,"line_end":406,"column_start":3,"column_end":19},"name":"EscapedTransform","qualname":"::error::ErrorKind::EscapedTransform","value":"ErrorKind::EscapedTransform","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2837},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28006,"byte_end":28014,"line_start":407,"line_end":407,"column_start":3,"column_end":11},"name":"NonEmpty","qualname":"::error::ErrorKind::NonEmpty","value":"ErrorKind::NonEmpty","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2839},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28018,"byte_end":28024,"line_start":408,"line_end":408,"column_start":3,"column_end":9},"name":"ManyMN","qualname":"::error::ErrorKind::ManyMN","value":"ErrorKind::ManyMN","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2841},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28028,"byte_end":28031,"line_start":409,"line_end":409,"column_start":3,"column_end":6},"name":"Not","qualname":"::error::ErrorKind::Not","value":"ErrorKind::Not","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2843},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28035,"byte_end":28046,"line_start":410,"line_end":410,"column_start":3,"column_end":14},"name":"Permutation","qualname":"::error::ErrorKind::Permutation","value":"ErrorKind::Permutation","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2845},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28050,"byte_end":28056,"line_start":411,"line_end":411,"column_start":3,"column_end":9},"name":"Verify","qualname":"::error::ErrorKind::Verify","value":"ErrorKind::Verify","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2847},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28060,"byte_end":28069,"line_start":412,"line_end":412,"column_start":3,"column_end":12},"name":"TakeTill1","qualname":"::error::ErrorKind::TakeTill1","value":"ErrorKind::TakeTill1","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2849},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28073,"byte_end":28084,"line_start":413,"line_end":413,"column_start":3,"column_end":14},"name":"TakeWhileMN","qualname":"::error::ErrorKind::TakeWhileMN","value":"ErrorKind::TakeWhileMN","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2851},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28088,"byte_end":28096,"line_start":414,"line_end":414,"column_start":3,"column_end":11},"name":"TooLarge","qualname":"::error::ErrorKind::TooLarge","value":"ErrorKind::TooLarge","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2853},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28100,"byte_end":28110,"line_start":415,"line_end":415,"column_start":3,"column_end":13},"name":"Many0Count","qualname":"::error::ErrorKind::Many0Count","value":"ErrorKind::Many0Count","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2855},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28114,"byte_end":28124,"line_start":416,"line_end":416,"column_start":3,"column_end":13},"name":"Many1Count","qualname":"::error::ErrorKind::Many1Count","value":"ErrorKind::Many1Count","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2857},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28128,"byte_end":28133,"line_start":417,"line_end":417,"column_start":3,"column_end":8},"name":"Float","qualname":"::error::ErrorKind::Float","value":"ErrorKind::Float","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2859},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28137,"byte_end":28144,"line_start":418,"line_end":418,"column_start":3,"column_end":10},"name":"Satisfy","qualname":"::error::ErrorKind::Satisfy","value":"ErrorKind::Satisfy","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2861},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28148,"byte_end":28152,"line_start":419,"line_end":419,"column_start":3,"column_end":7},"name":"Fail","qualname":"::error::ErrorKind::Fail","value":"ErrorKind::Fail","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2756},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27513,"byte_end":27522,"line_start":366,"line_end":366,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n    Tag,\n    MapRes,\n    MapOpt,\n    Alt,\n    IsNot,\n    IsA,\n    SeparatedList,\n    SeparatedNonEmptyList,\n    Many0,\n    Many1,\n    ManyTill,\n    Count,\n    TakeUntil,\n    LengthValue,\n    TagClosure,\n    Alpha,\n    Digit,\n    HexDigit,\n    OctDigit,\n    AlphaNumeric,\n    Space,\n    MultiSpace,\n    LengthValueFn,\n    Eof,\n    Switch,\n    TagBits,\n    OneOf,\n    NoneOf,\n    Char,\n    CrLf,\n    RegexpMatch,\n    RegexpMatches,\n    RegexpFind,\n    RegexpCapture,\n    RegexpCaptures,\n    TakeWhile1,\n    Complete,\n    Fix,\n    Escaped,\n    EscapedTransform,\n    NonEmpty,\n    ManyMN,\n    Not,\n    Permutation,\n    Verify,\n    TakeTill1,\n    TakeWhileMN,\n    TooLarge,\n    Many0Count,\n    Many1Count,\n    Float,\n    Satisfy,\n    Fail,\n}","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2765},{"krate":0,"index":2767},{"krate":0,"index":2769},{"krate":0,"index":2771},{"krate":0,"index":2773},{"krate":0,"index":2775},{"krate":0,"index":2777},{"krate":0,"index":2779},{"krate":0,"index":2781},{"krate":0,"index":2783},{"krate":0,"index":2785},{"krate":0,"index":2787},{"krate":0,"index":2789},{"krate":0,"index":2791},{"krate":0,"index":2793},{"krate":0,"index":2795},{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":2807},{"krate":0,"index":2809},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2817},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2841},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2861}],"decl_id":null,"docs":" Indicates which parser returned an error\n","sig":null,"attributes":[{"value":"/ Indicates which parser returned an error","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27362,"byte_end":27406,"line_start":362,"line_end":362,"column_start":1,"column_end":45}},{"value":"rustfmt::skip","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27407,"byte_end":27423,"line_start":363,"line_end":363,"column_start":1,"column_end":17}},{"value":"allow(deprecated, missing_docs)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":27470,"byte_end":27503,"line_start":365,"line_end":365,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":2877},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28240,"byte_end":28252,"line_start":425,"line_end":425,"column_start":8,"column_end":20},"name":"error_to_u32","qualname":"::error::error_to_u32","value":"pub fn error_to_u32(&ErrorKind) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Converts an ErrorKind to a number\n","sig":null,"attributes":[{"value":"rustfmt::skip","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28157,"byte_end":28173,"line_start":422,"line_end":422,"column_start":1,"column_end":17}},{"value":"allow(deprecated)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28174,"byte_end":28194,"line_start":423,"line_end":423,"column_start":1,"column_end":21}},{"value":"/ Converts an ErrorKind to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":28195,"byte_end":28232,"line_start":424,"line_end":424,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":30950,"byte_end":30961,"line_start":487,"line_end":487,"column_start":10,"column_end":21},"name":"description","qualname":"<ErrorKind>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Converts an ErrorKind to a text description\n","sig":null,"attributes":[{"value":"rustfmt::skip","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":30851,"byte_end":30867,"line_start":484,"line_end":484,"column_start":3,"column_end":19}},{"value":"allow(deprecated)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":30870,"byte_end":30890,"line_start":485,"line_end":485,"column_start":3,"column_end":23}},{"value":"/ Converts an ErrorKind to a text description","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":30893,"byte_end":30940,"line_start":486,"line_end":486,"column_start":3,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":175},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35565,"byte_end":35572,"line_start":590,"line_end":590,"column_start":8,"column_end":15},"name":"dbg_dmp","qualname":"::error::dbg_dmp","value":"pub fn dbg_dmp<'a, F, O, E: std::fmt::Debug>(F, &'static str)\n-> /*impl Trait*/ where F: Fn(&'a [u8]) -> IResult<&'a [u8], O, E>","parent":null,"children":[],"decl_id":null,"docs":" Prints a message and the input if the parser fails.","sig":null,"attributes":[{"value":"/ Prints a message and the input if the parser fails.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":34843,"byte_end":34898,"line_start":567,"line_end":567,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":34899,"byte_end":34902,"line_start":568,"line_end":568,"column_start":1,"column_end":4}},{"value":"/ The message prints the `Error` or `Incomplete`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":34903,"byte_end":34953,"line_start":569,"line_end":569,"column_start":1,"column_end":51}},{"value":"/ and the parser's calling code.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":34954,"byte_end":34988,"line_start":570,"line_end":570,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":34989,"byte_end":34992,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ It also displays the input in hexdump format","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":34993,"byte_end":35041,"line_start":572,"line_end":572,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35042,"byte_end":35045,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35046,"byte_end":35057,"line_start":574,"line_end":574,"column_start":1,"column_end":12}},{"value":"/ use nom::{IResult, error::dbg_dmp, bytes::complete::tag};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35058,"byte_end":35119,"line_start":575,"line_end":575,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35120,"byte_end":35123,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ fn f(i: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35124,"byte_end":35169,"line_start":577,"line_end":577,"column_start":1,"column_end":46}},{"value":"/   dbg_dmp(tag(\"abcd\"), \"tag\")(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35170,"byte_end":35206,"line_start":578,"line_end":578,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35207,"byte_end":35212,"line_start":579,"line_end":579,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35213,"byte_end":35216,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/   let a = &b\"efghijkl\"[..];","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35217,"byte_end":35248,"line_start":581,"line_end":581,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35249,"byte_end":35252,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ // Will print the following message:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35253,"byte_end":35293,"line_start":583,"line_end":583,"column_start":1,"column_end":41}},{"value":"/ // Error(Position(0, [101, 102, 103, 104, 105, 106, 107, 108])) at l.5 by ' tag ! ( \"abcd\" ) '","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35294,"byte_end":35392,"line_start":584,"line_end":584,"column_start":1,"column_end":99}},{"value":"/ // 00000000        65 66 67 68 69 6a 6b 6c         efghijkl","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35393,"byte_end":35456,"line_start":585,"line_end":585,"column_start":1,"column_end":64}},{"value":"/ f(a);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35457,"byte_end":35466,"line_start":586,"line_end":586,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35467,"byte_end":35474,"line_start":587,"line_end":587,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":35475,"byte_end":35498,"line_start":588,"line_end":588,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":185},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinator","qualname":"::combinator","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":266},{"krate":0,"index":276},{"krate":0,"index":285},{"krate":0,"index":294},{"krate":0,"index":304},{"krate":0,"index":311},{"krate":0,"index":318},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":335},{"krate":0,"index":342},{"krate":0,"index":351},{"krate":0,"index":360},{"krate":0,"index":367},{"krate":0,"index":374},{"krate":0,"index":381},{"krate":0,"index":388},{"krate":0,"index":397},{"krate":0,"index":402},{"krate":0,"index":409},{"krate":0,"index":414},{"krate":0,"index":422},{"krate":0,"index":434},{"krate":0,"index":440}],"decl_id":null,"docs":" General purpose combinators\n","sig":null,"attributes":[{"value":"/ General purpose combinators","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":41487,"byte_end":41518,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"allow(unused_imports)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":41520,"byte_end":41545,"line_start":3,"line_end":3,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":251},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42347,"byte_end":42351,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"rest","qualname":"::combinator::rest","value":"pub fn rest<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>>, T: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Return the remaining input.","sig":null,"attributes":[{"value":"/ Return the remaining input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42084,"byte_end":42115,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42116,"byte_end":42119,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42120,"byte_end":42131,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # use nom::error::ErrorKind;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42132,"byte_end":42164,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ use nom::combinator::rest;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42165,"byte_end":42195,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(rest::<_,(_, ErrorKind)>(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42196,"byte_end":42261,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(rest::<_,(_, ErrorKind)>(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42262,"byte_end":42321,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42322,"byte_end":42329,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42330,"byte_end":42339,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":254},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42797,"byte_end":42805,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"rest_len","qualname":"::combinator::rest_len","value":"pub fn rest_len<T, E: ParseError<T>>(T) -> IResult<T, usize, E> where\nT: InputLength","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the remaining input.","sig":null,"attributes":[{"value":"/ Return the length of the remaining input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42510,"byte_end":42555,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42556,"byte_end":42559,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42560,"byte_end":42571,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ # use nom::error::ErrorKind;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42572,"byte_end":42604,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ use nom::combinator::rest_len;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42605,"byte_end":42639,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(rest_len::<_,(_, ErrorKind)>(\"abc\"), Ok((\"abc\", 3)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42640,"byte_end":42708,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(rest_len::<_,(_, ErrorKind)>(\"\"), Ok((\"\", 0)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42709,"byte_end":42771,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42772,"byte_end":42779,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42780,"byte_end":42789,"line_start":47,"line_end":47,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":257},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43479,"byte_end":43482,"line_start":73,"line_end":73,"column_start":8,"column_end":11},"name":"map","qualname":"::combinator::map","value":"pub fn map<I, O1, O2, E, F, G>(F, G) -> /*impl Trait*/ where\nF: Parser<I, O1, E>, G: FnMut(O1) -> O2","parent":null,"children":[],"decl_id":null,"docs":" Maps a function on the result of a parser.","sig":null,"attributes":[{"value":"/ Maps a function on the result of a parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42940,"byte_end":42986,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42987,"byte_end":42990,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":42991,"byte_end":43002,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ use nom::{Err,error::ErrorKind, IResult,Parser};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43003,"byte_end":43055,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43056,"byte_end":43097,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43098,"byte_end":43127,"line_start":61,"line_end":61,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43128,"byte_end":43145,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43146,"byte_end":43149,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut parser = map(digit1, |s: &str| s.len());","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43150,"byte_end":43202,"line_start":64,"line_end":64,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43203,"byte_end":43206,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // the parser will count how many characters were returned by digit1","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43207,"byte_end":43279,"line_start":66,"line_end":66,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(parser.parse(\"123456\"), Ok((\"\", 6)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43280,"byte_end":43332,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43333,"byte_end":43336,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43337,"byte_end":43374,"line_start":69,"line_end":69,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parser.parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43375,"byte_end":43455,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43456,"byte_end":43463,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43464,"byte_end":43471,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":266},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44439,"byte_end":44446,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"map_res","qualname":"::combinator::map_res","value":"pub fn map_res<I: Clone, O1, O2, E: FromExternalError<I, E2>, E2, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: FnMut(O1) -> Result<O2, E2>","parent":null,"children":[],"decl_id":null,"docs":" Applies a function returning a `Result` over the result of a parser.","sig":null,"attributes":[{"value":"/ Applies a function returning a `Result` over the result of a parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43713,"byte_end":43785,"line_start":84,"line_end":84,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43786,"byte_end":43789,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43790,"byte_end":43801,"line_start":86,"line_end":86,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43802,"byte_end":43849,"line_start":87,"line_end":87,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43850,"byte_end":43891,"line_start":88,"line_end":88,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map_res;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43892,"byte_end":43925,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43926,"byte_end":43943,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43944,"byte_end":43947,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_res(digit1, |s: &str| s.parse::<u8>());","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":43948,"byte_end":44011,"line_start":92,"line_end":92,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44012,"byte_end":44015,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // the parser will convert the result of digit1 to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44016,"byte_end":44079,"line_start":94,"line_end":94,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parse(\"123\"), Ok((\"\", 123)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44080,"byte_end":44124,"line_start":95,"line_end":95,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44125,"byte_end":44128,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44129,"byte_end":44166,"line_start":97,"line_end":97,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44167,"byte_end":44240,"line_start":98,"line_end":98,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44241,"byte_end":44244,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // this will fail if the mapped function fails (a `u8` is too small to hold `123456`)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44245,"byte_end":44334,"line_start":100,"line_end":100,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parse(\"123456\"), Err(Err::Error((\"123456\", ErrorKind::MapRes))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44335,"byte_end":44415,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44416,"byte_end":44423,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44424,"byte_end":44431,"line_start":103,"line_end":103,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":276},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45608,"byte_end":45615,"line_start":142,"line_end":142,"column_start":8,"column_end":15},"name":"map_opt","qualname":"::combinator::map_opt","value":"pub fn map_opt<I: Clone, O1, O2, E: ParseError<I>, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: FnMut(O1) -> Option<O2>","parent":null,"children":[],"decl_id":null,"docs":" Applies a function returning an `Option` over the result of a parser.","sig":null,"attributes":[{"value":"/ Applies a function returning an `Option` over the result of a parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44876,"byte_end":44949,"line_start":122,"line_end":122,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44950,"byte_end":44953,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44954,"byte_end":44965,"line_start":124,"line_end":124,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":44966,"byte_end":45013,"line_start":125,"line_end":125,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45014,"byte_end":45055,"line_start":126,"line_end":126,"column_start":1,"column_end":42}},{"value":"/ use nom::combinator::map_opt;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45056,"byte_end":45089,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45090,"byte_end":45107,"line_start":128,"line_end":128,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45108,"byte_end":45111,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_opt(digit1, |s: &str| s.parse::<u8>().ok());","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45112,"byte_end":45180,"line_start":130,"line_end":130,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45181,"byte_end":45184,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ // the parser will convert the result of digit1 to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45185,"byte_end":45248,"line_start":132,"line_end":132,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parse(\"123\"), Ok((\"\", 123)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45249,"byte_end":45293,"line_start":133,"line_end":133,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45294,"byte_end":45297,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ // this will fail if digit1 fails","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45298,"byte_end":45335,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(parse(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Digit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45336,"byte_end":45409,"line_start":136,"line_end":136,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45410,"byte_end":45413,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ // this will fail if the mapped function fails (a `u8` is too small to hold `123456`)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45414,"byte_end":45503,"line_start":138,"line_end":138,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parse(\"123456\"), Err(Err::Error((\"123456\", ErrorKind::MapOpt))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45504,"byte_end":45584,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45585,"byte_end":45592,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":45593,"byte_end":45600,"line_start":141,"line_end":141,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":285},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46523,"byte_end":46533,"line_start":176,"line_end":176,"column_start":8,"column_end":18},"name":"map_parser","qualname":"::combinator::map_parser","value":"pub fn map_parser<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<O1, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser over the result of another one.","sig":null,"attributes":[{"value":"/ Applies a parser over the result of another one.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46019,"byte_end":46071,"line_start":160,"line_end":160,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46072,"byte_end":46075,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46076,"byte_end":46087,"line_start":162,"line_end":162,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46088,"byte_end":46135,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/ use nom::character::complete::digit1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46136,"byte_end":46177,"line_start":164,"line_end":164,"column_start":1,"column_end":42}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46178,"byte_end":46213,"line_start":165,"line_end":165,"column_start":1,"column_end":36}},{"value":"/ use nom::combinator::map_parser;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46214,"byte_end":46250,"line_start":166,"line_end":166,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46251,"byte_end":46268,"line_start":167,"line_end":167,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46269,"byte_end":46272,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ let mut parse = map_parser(take(5u8), digit1);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46273,"byte_end":46323,"line_start":169,"line_end":169,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46324,"byte_end":46327,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46328,"byte_end":46378,"line_start":171,"line_end":171,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parse(\"123ab\"), Ok((\"\", \"123\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46379,"byte_end":46427,"line_start":172,"line_end":172,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(parse(\"123\"), Err(Err::Error((\"123\", ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46428,"byte_end":46499,"line_start":173,"line_end":173,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46500,"byte_end":46507,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46508,"byte_end":46515,"line_start":175,"line_end":175,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":294},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47379,"byte_end":47387,"line_start":206,"line_end":206,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::combinator::flat_map","value":"pub fn flat_map<I, O1, O2, E: ParseError<I>, F, G, H>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: FnMut(O1) -> H, H: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parser from the output of the first parser, then apply that parser over the rest of the input.","sig":null,"attributes":[{"value":"/ Creates a new parser from the output of the first parser, then apply that parser over the rest of the input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46843,"byte_end":46955,"line_start":191,"line_end":191,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46956,"byte_end":46959,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46960,"byte_end":46971,"line_start":193,"line_end":193,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":46972,"byte_end":47019,"line_start":194,"line_end":194,"column_start":1,"column_end":48}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47020,"byte_end":47055,"line_start":195,"line_end":195,"column_start":1,"column_end":36}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47056,"byte_end":47090,"line_start":196,"line_end":196,"column_start":1,"column_end":35}},{"value":"/ use nom::combinator::flat_map;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47091,"byte_end":47125,"line_start":197,"line_end":197,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47126,"byte_end":47143,"line_start":198,"line_end":198,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47144,"byte_end":47147,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ let mut parse = flat_map(u8, take);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47148,"byte_end":47187,"line_start":200,"line_end":200,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47188,"byte_end":47191,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse(&[2, 0, 1, 2][..]), Ok((&[2][..], &[0, 1][..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47192,"byte_end":47262,"line_start":202,"line_end":202,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(parse(&[4, 0, 1, 2][..]), Err(Err::Error((&[0, 1, 2][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47263,"byte_end":47355,"line_start":203,"line_end":203,"column_start":1,"column_end":93}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47356,"byte_end":47363,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47364,"byte_end":47371,"line_start":205,"line_end":205,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":304},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48128,"byte_end":48131,"line_start":237,"line_end":237,"column_start":8,"column_end":11},"name":"opt","qualname":"::combinator::opt","value":"pub fn opt<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Optional parser: Will return `None` if not successful.","sig":null,"attributes":[{"value":"/ Optional parser: Will return `None` if not successful.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47691,"byte_end":47749,"line_start":221,"line_end":221,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47750,"byte_end":47753,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47754,"byte_end":47765,"line_start":223,"line_end":223,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47766,"byte_end":47813,"line_start":224,"line_end":224,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::opt;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47814,"byte_end":47843,"line_start":225,"line_end":225,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47844,"byte_end":47885,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47886,"byte_end":47903,"line_start":227,"line_end":227,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47904,"byte_end":47907,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ fn parser(i: &str) -> IResult<&str, Option<&str>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47908,"byte_end":47963,"line_start":229,"line_end":229,"column_start":1,"column_end":56}},{"value":"/   opt(alpha1)(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47964,"byte_end":47984,"line_start":230,"line_end":230,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47985,"byte_end":47990,"line_start":231,"line_end":231,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47991,"byte_end":47994,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\";\", Some(\"abcd\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":47995,"byte_end":48052,"line_start":233,"line_end":233,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"123;\"), Ok((\"123;\", None)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48053,"byte_end":48104,"line_start":234,"line_end":234,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48105,"byte_end":48112,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48113,"byte_end":48120,"line_start":236,"line_end":236,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":311},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49058,"byte_end":49062,"line_start":269,"line_end":269,"column_start":8,"column_end":12},"name":"cond","qualname":"::combinator::cond","value":"pub fn cond<I, O, E: ParseError<I>, F>(bool, F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Calls the parser if the condition is met.","sig":null,"attributes":[{"value":"/ Calls the parser if the condition is met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48443,"byte_end":48488,"line_start":251,"line_end":251,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48489,"byte_end":48492,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48493,"byte_end":48504,"line_start":253,"line_end":253,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48505,"byte_end":48562,"line_start":254,"line_end":254,"column_start":1,"column_end":58}},{"value":"/ use nom::combinator::cond;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48563,"byte_end":48593,"line_start":255,"line_end":255,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48594,"byte_end":48635,"line_start":256,"line_end":256,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48636,"byte_end":48653,"line_start":257,"line_end":257,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48654,"byte_end":48657,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ fn parser(b: bool, i: &str) -> IResult<&str, Option<&str>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48658,"byte_end":48722,"line_start":259,"line_end":259,"column_start":1,"column_end":65}},{"value":"/   cond(b, alpha1)(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48723,"byte_end":48747,"line_start":260,"line_end":260,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48748,"byte_end":48753,"line_start":261,"line_end":261,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48754,"byte_end":48757,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(true, \"abcd;\"), Ok((\";\", Some(\"abcd\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48758,"byte_end":48821,"line_start":263,"line_end":263,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(false, \"abcd;\"), Ok((\"abcd;\", None)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48822,"byte_end":48882,"line_start":264,"line_end":264,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(true, \"123;\"), Err(Err::Error(Error::new(\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48883,"byte_end":48975,"line_start":265,"line_end":265,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(parser(false, \"123;\"), Ok((\"123;\", None)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":48976,"byte_end":49034,"line_start":266,"line_end":266,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49035,"byte_end":49042,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49043,"byte_end":49050,"line_start":268,"line_end":268,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":318},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49788,"byte_end":49792,"line_start":302,"line_end":302,"column_start":8,"column_end":12},"name":"peek","qualname":"::combinator::peek","value":"pub fn peek<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Tries to apply its parser without consuming the input.","sig":null,"attributes":[{"value":"/ Tries to apply its parser without consuming the input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49375,"byte_end":49433,"line_start":288,"line_end":288,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49434,"byte_end":49437,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49438,"byte_end":49449,"line_start":290,"line_end":290,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49450,"byte_end":49497,"line_start":291,"line_end":291,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::peek;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49498,"byte_end":49528,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49529,"byte_end":49570,"line_start":293,"line_end":293,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49571,"byte_end":49588,"line_start":294,"line_end":294,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49589,"byte_end":49592,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ let mut parser = peek(alpha1);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49593,"byte_end":49627,"line_start":296,"line_end":296,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49628,"byte_end":49631,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\"abcd;\", \"abcd\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49632,"byte_end":49687,"line_start":298,"line_end":298,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"123;\"), Err(Err::Error((\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49688,"byte_end":49764,"line_start":299,"line_end":299,"column_start":1,"column_end":77}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49765,"byte_end":49772,"line_start":300,"line_end":300,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":49773,"byte_end":49780,"line_start":301,"line_end":301,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":325},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50474,"byte_end":50477,"line_start":331,"line_end":331,"column_start":8,"column_end":11},"name":"eof","qualname":"::combinator::eof","value":"pub fn eof<I: InputLength + Clone, E: ParseError<I>>(I) -> IResult<I, I, E>","parent":null,"children":[],"decl_id":null,"docs":" returns its input if it is at the end of input data","sig":null,"attributes":[{"value":"/ returns its input if it is at the end of input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50047,"byte_end":50102,"line_start":315,"line_end":315,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50103,"byte_end":50106,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ When we're at the end of the data, this combinator","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50107,"byte_end":50161,"line_start":317,"line_end":317,"column_start":1,"column_end":55}},{"value":"/ will succeed","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50162,"byte_end":50178,"line_start":318,"line_end":318,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50179,"byte_end":50182,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50183,"byte_end":50190,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # use std::str;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50191,"byte_end":50210,"line_start":321,"line_end":321,"column_start":1,"column_end":20}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50211,"byte_end":50259,"line_start":322,"line_end":322,"column_start":1,"column_end":49}},{"value":"/ # use nom::combinator::eof;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50260,"byte_end":50291,"line_start":323,"line_end":323,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50292,"byte_end":50295,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50296,"byte_end":50313,"line_start":325,"line_end":325,"column_start":1,"column_end":18}},{"value":"/ let parser = eof;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50314,"byte_end":50335,"line_start":326,"line_end":326,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50336,"byte_end":50408,"line_start":327,"line_end":327,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50409,"byte_end":50450,"line_start":328,"line_end":328,"column_start":1,"column_end":42}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50451,"byte_end":50458,"line_start":329,"line_end":329,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50459,"byte_end":50466,"line_start":330,"line_end":330,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":328},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51120,"byte_end":51128,"line_start":354,"line_end":354,"column_start":8,"column_end":16},"name":"complete","qualname":"::combinator::complete","value":"pub fn complete<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Transforms Incomplete into `Error`.","sig":null,"attributes":[{"value":"/ Transforms Incomplete into `Error`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50717,"byte_end":50756,"line_start":340,"line_end":340,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50757,"byte_end":50760,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50761,"byte_end":50772,"line_start":342,"line_end":342,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50773,"byte_end":50820,"line_start":343,"line_end":343,"column_start":1,"column_end":48}},{"value":"/ use nom::bytes::streaming::take;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50821,"byte_end":50857,"line_start":344,"line_end":344,"column_start":1,"column_end":37}},{"value":"/ use nom::combinator::complete;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50858,"byte_end":50892,"line_start":345,"line_end":345,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50893,"byte_end":50910,"line_start":346,"line_end":346,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50911,"byte_end":50914,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ let mut parser = complete(take(5u8));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50915,"byte_end":50956,"line_start":348,"line_end":348,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50957,"byte_end":50960,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcdefg\"), Ok((\"fg\", \"abcde\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":50961,"byte_end":51016,"line_start":350,"line_end":350,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abcd\"), Err(Err::Error((\"abcd\", ErrorKind::Complete))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51017,"byte_end":51096,"line_start":351,"line_end":351,"column_start":1,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51097,"byte_end":51104,"line_start":352,"line_end":352,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51105,"byte_end":51112,"line_start":353,"line_end":353,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":335},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51955,"byte_end":51968,"line_start":382,"line_end":382,"column_start":8,"column_end":21},"name":"all_consuming","qualname":"::combinator::all_consuming","value":"pub fn all_consuming<I, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nI: InputLength, F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if all the input has been consumed by its child parser.","sig":null,"attributes":[{"value":"/ Succeeds if all the input has been consumed by its child parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51441,"byte_end":51509,"line_start":367,"line_end":367,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51510,"byte_end":51513,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51514,"byte_end":51525,"line_start":369,"line_end":369,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51526,"byte_end":51573,"line_start":370,"line_end":370,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::all_consuming;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51574,"byte_end":51613,"line_start":371,"line_end":371,"column_start":1,"column_end":40}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51614,"byte_end":51655,"line_start":372,"line_end":372,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51656,"byte_end":51673,"line_start":373,"line_end":373,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51674,"byte_end":51677,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ let mut parser = all_consuming(alpha1);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51678,"byte_end":51721,"line_start":375,"line_end":375,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51722,"byte_end":51725,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51726,"byte_end":51775,"line_start":377,"line_end":377,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51776,"byte_end":51847,"line_start":378,"line_end":378,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(parser(\"123abcd;\"),Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51848,"byte_end":51931,"line_start":379,"line_end":379,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51932,"byte_end":51939,"line_start":380,"line_end":380,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":51940,"byte_end":51947,"line_start":381,"line_end":381,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":342},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52941,"byte_end":52947,"line_start":415,"line_end":415,"column_start":8,"column_end":14},"name":"verify","qualname":"::combinator::verify","value":"pub fn verify<I: Clone, O1, O2, E: ParseError<I>, F, G>(F, G)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Fn(&O2) -> bool,\nO1: Borrow<O2>, O2: ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns the result of the child parser if it satisfies a verification function.","sig":null,"attributes":[{"value":"/ Returns the result of the child parser if it satisfies a verification function.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52297,"byte_end":52380,"line_start":397,"line_end":397,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52381,"byte_end":52384,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ The verification function takes as argument a reference to the output of the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52385,"byte_end":52465,"line_start":399,"line_end":399,"column_start":1,"column_end":81}},{"value":"/ parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52466,"byte_end":52477,"line_start":400,"line_end":400,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52478,"byte_end":52481,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52482,"byte_end":52493,"line_start":402,"line_end":402,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52494,"byte_end":52541,"line_start":403,"line_end":403,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::verify;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52542,"byte_end":52574,"line_start":404,"line_end":404,"column_start":1,"column_end":33}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52575,"byte_end":52616,"line_start":405,"line_end":405,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52617,"byte_end":52634,"line_start":406,"line_end":406,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52635,"byte_end":52638,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ let mut parser = verify(alpha1, |s: &str| s.len() == 4);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52639,"byte_end":52699,"line_start":408,"line_end":408,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52700,"byte_end":52703,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", \"abcd\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52704,"byte_end":52753,"line_start":410,"line_end":410,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"abcde\"), Err(Err::Error((\"abcde\", ErrorKind::Verify))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52754,"byte_end":52833,"line_start":411,"line_end":411,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(\"123abcd;\"),Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52834,"byte_end":52917,"line_start":412,"line_end":412,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52918,"byte_end":52925,"line_start":413,"line_end":413,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":52926,"byte_end":52933,"line_start":414,"line_end":414,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":351},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53797,"byte_end":53802,"line_start":451,"line_end":451,"column_start":8,"column_end":13},"name":"value","qualname":"::combinator::value","value":"pub fn value<I, O1: Clone, O2, E: ParseError<I>, F>(O1, F) -> /*impl Trait*/\nwhere F: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the provided value if the child parser succeeds.","sig":null,"attributes":[{"value":"/ Returns the provided value if the child parser succeeds.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53374,"byte_end":53434,"line_start":437,"line_end":437,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53435,"byte_end":53438,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53439,"byte_end":53450,"line_start":439,"line_end":439,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53451,"byte_end":53498,"line_start":440,"line_end":440,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53499,"byte_end":53530,"line_start":441,"line_end":441,"column_start":1,"column_end":32}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53531,"byte_end":53572,"line_start":442,"line_end":442,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53573,"byte_end":53590,"line_start":443,"line_end":443,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53591,"byte_end":53594,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ let mut parser = value(1234, alpha1);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53595,"byte_end":53636,"line_start":445,"line_end":445,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53637,"byte_end":53640,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd\"), Ok((\"\", 1234)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53641,"byte_end":53688,"line_start":447,"line_end":447,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123abcd;\"), Err(Err::Error((\"123abcd;\", ErrorKind::Alpha))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53689,"byte_end":53773,"line_start":448,"line_end":448,"column_start":1,"column_end":85}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53774,"byte_end":53781,"line_start":449,"line_end":449,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":53782,"byte_end":53789,"line_start":450,"line_end":450,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":360},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54407,"byte_end":54410,"line_start":475,"line_end":475,"column_start":8,"column_end":11},"name":"not","qualname":"::combinator::not","value":"pub fn not<I: Clone, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if the child parser returns an error.","sig":null,"attributes":[{"value":"/ Succeeds if the child parser returns an error.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54014,"byte_end":54064,"line_start":461,"line_end":461,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54065,"byte_end":54068,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54069,"byte_end":54080,"line_start":463,"line_end":463,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54081,"byte_end":54128,"line_start":464,"line_end":464,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::not;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54129,"byte_end":54158,"line_start":465,"line_end":465,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54159,"byte_end":54200,"line_start":466,"line_end":466,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54201,"byte_end":54218,"line_start":467,"line_end":467,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54219,"byte_end":54222,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ let mut parser = not(alpha1);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54223,"byte_end":54256,"line_start":469,"line_end":469,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54257,"byte_end":54260,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"123\"), Ok((\"123\", ())));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54261,"byte_end":54308,"line_start":471,"line_end":471,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"abcd\"), Err(Err::Error((\"abcd\", ErrorKind::Not))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54309,"byte_end":54383,"line_start":472,"line_end":472,"column_start":1,"column_end":75}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54384,"byte_end":54391,"line_start":473,"line_end":473,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54392,"byte_end":54399,"line_start":474,"line_end":474,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":367},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55287,"byte_end":55296,"line_start":504,"line_end":504,"column_start":8,"column_end":17},"name":"recognize","qualname":"::combinator::recognize","value":"pub fn recognize<I: Clone + Offset + Slice<RangeTo<usize>>, O,\n                 E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" If the child parser was successful, return the consumed input as produced value.","sig":null,"attributes":[{"value":"/ If the child parser was successful, return the consumed input as produced value.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54756,"byte_end":54840,"line_start":489,"line_end":489,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54841,"byte_end":54844,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54845,"byte_end":54856,"line_start":491,"line_end":491,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54857,"byte_end":54904,"line_start":492,"line_end":492,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::recognize;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54905,"byte_end":54940,"line_start":493,"line_end":493,"column_start":1,"column_end":36}},{"value":"/ use nom::character::complete::{char, alpha1};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54941,"byte_end":54990,"line_start":494,"line_end":494,"column_start":1,"column_end":50}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":54991,"byte_end":55029,"line_start":495,"line_end":495,"column_start":1,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55030,"byte_end":55047,"line_start":496,"line_end":496,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55048,"byte_end":55051,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ let mut parser = recognize(separated_pair(alpha1, char(','), alpha1));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55052,"byte_end":55126,"line_start":498,"line_end":498,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55127,"byte_end":55130,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd,efgh\"), Ok((\"\", \"abcd,efgh\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55131,"byte_end":55190,"line_start":500,"line_end":500,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55191,"byte_end":55263,"line_start":501,"line_end":501,"column_start":1,"column_end":73}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55264,"byte_end":55271,"line_start":502,"line_end":502,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55272,"byte_end":55279,"line_start":503,"line_end":503,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":374},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57164,"byte_end":57172,"line_start":559,"line_end":559,"column_start":8,"column_end":16},"name":"consumed","qualname":"::combinator::consumed","value":"pub fn consumed<I, O, F, E>(F) -> /*impl Trait*/ where I: Clone + Offset +\nSlice<RangeTo<usize>>, E: ParseError<I>, F: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" if the child parser was successful, return the consumed input with the output\n as a tuple. Functions similarly to [recognize](fn.recognize.html) except it\n returns the parser output as well.","sig":null,"attributes":[{"value":"/ if the child parser was successful, return the consumed input with the output","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55669,"byte_end":55750,"line_start":522,"line_end":522,"column_start":1,"column_end":82}},{"value":"/ as a tuple. Functions similarly to [recognize](fn.recognize.html) except it","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55751,"byte_end":55830,"line_start":523,"line_end":523,"column_start":1,"column_end":80}},{"value":"/ returns the parser output as well.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55831,"byte_end":55869,"line_start":524,"line_end":524,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55870,"byte_end":55873,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ This can be useful especially in cases where the output is not the same type","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55874,"byte_end":55954,"line_start":526,"line_end":526,"column_start":1,"column_end":81}},{"value":"/ as the input, or the input is a user defined type.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":55955,"byte_end":56009,"line_start":527,"line_end":527,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56010,"byte_end":56013,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ Returned tuple is of the format `(consumed input, produced output)`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56014,"byte_end":56086,"line_start":529,"line_end":529,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56087,"byte_end":56090,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56091,"byte_end":56102,"line_start":531,"line_end":531,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56103,"byte_end":56150,"line_start":532,"line_end":532,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::{consumed, value, recognize, map};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56151,"byte_end":56210,"line_start":533,"line_end":533,"column_start":1,"column_end":60}},{"value":"/ use nom::character::complete::{char, alpha1};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56211,"byte_end":56260,"line_start":534,"line_end":534,"column_start":1,"column_end":50}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56261,"byte_end":56295,"line_start":535,"line_end":535,"column_start":1,"column_end":35}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56296,"byte_end":56334,"line_start":536,"line_end":536,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56335,"byte_end":56338,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ fn inner_parser(input: &str) -> IResult<&str, bool> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56339,"byte_end":56396,"line_start":538,"line_end":538,"column_start":1,"column_end":58}},{"value":"/     value(true, tag(\"1234\"))(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56397,"byte_end":56436,"line_start":539,"line_end":539,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56437,"byte_end":56442,"line_start":540,"line_end":540,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56443,"byte_end":56446,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56447,"byte_end":56464,"line_start":542,"line_end":542,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56465,"byte_end":56468,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ let mut consumed_parser = consumed(value(true, separated_pair(alpha1, char(','), alpha1)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56469,"byte_end":56564,"line_start":544,"line_end":544,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56565,"byte_end":56568,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(consumed_parser(\"abcd,efgh1\"), Ok((\"1\", (\"abcd,efgh\", true))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56569,"byte_end":56647,"line_start":546,"line_end":546,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(consumed_parser(\"abcd;\"),Err(Err::Error((\";\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56648,"byte_end":56729,"line_start":547,"line_end":547,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56730,"byte_end":56733,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56734,"byte_end":56737,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ // the first output (representing the consumed input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56738,"byte_end":56795,"line_start":550,"line_end":550,"column_start":1,"column_end":58}},{"value":"/ // should be the same as that of the `recognize` parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56796,"byte_end":56856,"line_start":551,"line_end":551,"column_start":1,"column_end":61}},{"value":"/ let mut recognize_parser = recognize(inner_parser);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56857,"byte_end":56912,"line_start":552,"line_end":552,"column_start":1,"column_end":56}},{"value":"/ let mut consumed_parser = map(consumed(inner_parser), |(consumed, output)| consumed);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":56913,"byte_end":57002,"line_start":553,"line_end":553,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57003,"byte_end":57006,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(recognize_parser(\"1234\"), consumed_parser(\"1234\"));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57007,"byte_end":57073,"line_start":555,"line_end":555,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(recognize_parser(\"abcd\"), consumed_parser(\"abcd\"));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57074,"byte_end":57140,"line_start":556,"line_end":556,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57141,"byte_end":57148,"line_start":557,"line_end":557,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57149,"byte_end":57156,"line_start":558,"line_end":558,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":381},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58012,"byte_end":58015,"line_start":592,"line_end":592,"column_start":8,"column_end":11},"name":"cut","qualname":"::combinator::cut","value":"pub fn cut<I, O, E: ParseError<I>, F>(F) -> /*impl Trait*/ where\nF: Parser<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" transforms an error to failure","sig":null,"attributes":[{"value":"/ transforms an error to failure","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57627,"byte_end":57661,"line_start":578,"line_end":578,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57662,"byte_end":57665,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57666,"byte_end":57677,"line_start":580,"line_end":580,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57678,"byte_end":57725,"line_start":581,"line_end":581,"column_start":1,"column_end":48}},{"value":"/ use nom::combinator::cut;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57726,"byte_end":57755,"line_start":582,"line_end":582,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57756,"byte_end":57797,"line_start":583,"line_end":583,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57798,"byte_end":57815,"line_start":584,"line_end":584,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57816,"byte_end":57819,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ let mut parser = cut(alpha1);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57820,"byte_end":57853,"line_start":586,"line_end":586,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57854,"byte_end":57857,"line_start":587,"line_end":587,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcd;\"), Ok((\";\", \"abcd\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57858,"byte_end":57909,"line_start":588,"line_end":588,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"123;\"), Err(Err::Failure((\"123;\", ErrorKind::Alpha))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57910,"byte_end":57988,"line_start":589,"line_end":589,"column_start":1,"column_end":79}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57989,"byte_end":57996,"line_start":590,"line_end":590,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":57997,"byte_end":58004,"line_start":591,"line_end":591,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":388},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58910,"byte_end":58914,"line_start":624,"line_end":624,"column_start":8,"column_end":12},"name":"into","qualname":"::combinator::into","value":"pub fn into<I, O1, O2, E1, E2, F>(F) -> /*impl Trait*/ where O1: Into<O2>,\nE1: Into<E2>, E1: ParseError<I>, E2: ParseError<I>, F: Parser<I, O1, E1>","parent":null,"children":[],"decl_id":null,"docs":" automatically converts the child parser's result to another type","sig":null,"attributes":[{"value":"/ automatically converts the child parser's result to another type","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58244,"byte_end":58312,"line_start":602,"line_end":602,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58313,"byte_end":58316,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ it will be able to convert the output value and the error value","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58317,"byte_end":58384,"line_start":604,"line_end":604,"column_start":1,"column_end":68}},{"value":"/ as long as the `Into` implementations are available","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58385,"byte_end":58440,"line_start":605,"line_end":605,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58441,"byte_end":58444,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58445,"byte_end":58456,"line_start":607,"line_end":607,"column_start":1,"column_end":12}},{"value":"/ # use nom::IResult;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58457,"byte_end":58480,"line_start":608,"line_end":608,"column_start":1,"column_end":24}},{"value":"/ use nom::combinator::into;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58481,"byte_end":58511,"line_start":609,"line_end":609,"column_start":1,"column_end":31}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58512,"byte_end":58553,"line_start":610,"line_end":610,"column_start":1,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58554,"byte_end":58571,"line_start":611,"line_end":611,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58572,"byte_end":58575,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/  fn parser1(i: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58576,"byte_end":58625,"line_start":613,"line_end":613,"column_start":1,"column_end":50}},{"value":"/    alpha1(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58626,"byte_end":58642,"line_start":614,"line_end":614,"column_start":1,"column_end":17}},{"value":"/  }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58643,"byte_end":58649,"line_start":615,"line_end":615,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58650,"byte_end":58653,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/  let mut parser2 = into(parser1);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58654,"byte_end":58691,"line_start":617,"line_end":617,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58692,"byte_end":58695,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ // the parser converts the &str output of the child parser into a Vec<u8>","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58696,"byte_end":58773,"line_start":619,"line_end":619,"column_start":1,"column_end":78}},{"value":"/ let bytes: IResult<&str, Vec<u8>> = parser2(\"abcd\");","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58774,"byte_end":58830,"line_start":620,"line_end":620,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(bytes, Ok((\"\", vec![97, 98, 99, 100])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58831,"byte_end":58886,"line_start":621,"line_end":621,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58887,"byte_end":58894,"line_start":622,"line_end":622,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":58895,"byte_end":58902,"line_start":623,"line_end":623,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":397},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":60151,"byte_end":60159,"line_start":659,"line_end":659,"column_start":8,"column_end":16},"name":"iterator","qualname":"::combinator::iterator","value":"pub fn iterator<Input, Output, Error, F>(Input, F)\n-> ParserIterator<Input, Error, F> where F: Parser<Input, Output, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator from input data and a parser.","sig":null,"attributes":[{"value":"/ Creates an iterator from input data and a parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59381,"byte_end":59434,"line_start":641,"line_end":641,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59435,"byte_end":59438,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ Call the iterator's [ParserIterator::finish] method to get the remaining input if successful,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59439,"byte_end":59536,"line_start":643,"line_end":643,"column_start":1,"column_end":98}},{"value":"/ or the error value if we encountered an error.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59537,"byte_end":59587,"line_start":644,"line_end":644,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59588,"byte_end":59591,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59592,"byte_end":59603,"line_start":646,"line_end":646,"column_start":1,"column_end":12}},{"value":"/ use nom::{combinator::iterator, IResult, bytes::complete::tag, character::complete::alpha1, sequence::terminated};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59604,"byte_end":59722,"line_start":647,"line_end":647,"column_start":1,"column_end":119}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59723,"byte_end":59757,"line_start":648,"line_end":648,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59758,"byte_end":59761,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ let data = \"abc|defg|hijkl|mnopqr|123\";","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59762,"byte_end":59805,"line_start":650,"line_end":650,"column_start":1,"column_end":44}},{"value":"/ let mut it = iterator(data, terminated(alpha1, tag(\"|\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59806,"byte_end":59868,"line_start":651,"line_end":651,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59869,"byte_end":59872,"line_start":652,"line_end":652,"column_start":1,"column_end":4}},{"value":"/ let parsed = it.map(|v| (v, v.len())).collect::<HashMap<_,_>>();","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59873,"byte_end":59941,"line_start":653,"line_end":653,"column_start":1,"column_end":69}},{"value":"/ let res: IResult<_,_> = it.finish();","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59942,"byte_end":59982,"line_start":654,"line_end":654,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59983,"byte_end":59986,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parsed, [(\"abc\", 3usize), (\"defg\", 4), (\"hijkl\", 5), (\"mnopqr\", 6)].iter().cloned().collect());","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":59987,"byte_end":60097,"line_start":656,"line_end":656,"column_start":1,"column_end":111}},{"value":"/ assert_eq!(res, Ok((\"123\", ())));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":60098,"byte_end":60135,"line_start":657,"line_end":657,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":60136,"byte_end":60143,"line_start":658,"line_end":658,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":402},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":60467,"byte_end":60481,"line_start":672,"line_end":672,"column_start":12,"column_end":26},"name":"ParserIterator","qualname":"::combinator::ParserIterator","value":"ParserIterator {  }","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"decl_id":null,"docs":" Main structure associated to the [iterator] function.\n","sig":null,"attributes":[{"value":"/ Main structure associated to the [iterator] function.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":60398,"byte_end":60455,"line_start":671,"line_end":671,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":60708,"byte_end":60714,"line_start":680,"line_end":680,"column_start":10,"column_end":16},"name":"finish","qualname":"<ParserIterator<I, E, F>>::finish","value":"pub fn finish(Self) -> IResult<I, (), E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining input if parsing was successful, or the error if we encountered an error.\n","sig":null,"attributes":[{"value":"/ Returns the remaining input if parsing was successful, or the error if we encountered an error.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":60599,"byte_end":60698,"line_start":679,"line_end":679,"column_start":3,"column_end":102}}]},{"kind":"Function","id":{"krate":0,"index":434},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62642,"byte_end":62649,"line_start":753,"line_end":753,"column_start":8,"column_end":15},"name":"success","qualname":"::combinator::success","value":"pub fn success<I, O: Clone, E: ParseError<I>>(O) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" a parser which always succeeds with given value without consuming any input.","sig":null,"attributes":[{"value":"/ a parser which always succeeds with given value without consuming any input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":61901,"byte_end":61981,"line_start":732,"line_end":732,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":61982,"byte_end":61985,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ It can be used for example as the last alternative in `alt` to","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":61986,"byte_end":62052,"line_start":734,"line_end":734,"column_start":1,"column_end":67}},{"value":"/ specify the default case.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62053,"byte_end":62082,"line_start":735,"line_end":735,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62083,"byte_end":62086,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62087,"byte_end":62098,"line_start":737,"line_end":737,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62099,"byte_end":62146,"line_start":738,"line_end":738,"column_start":1,"column_end":48}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62147,"byte_end":62172,"line_start":739,"line_end":739,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::{success, value};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62173,"byte_end":62215,"line_start":740,"line_end":740,"column_start":1,"column_end":43}},{"value":"/ use nom::character::complete::char;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62216,"byte_end":62255,"line_start":741,"line_end":741,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62256,"byte_end":62273,"line_start":742,"line_end":742,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62274,"byte_end":62277,"line_start":743,"line_end":743,"column_start":1,"column_end":4}},{"value":"/ let mut parser = success::<_,_,(_,ErrorKind)>(10);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62278,"byte_end":62332,"line_start":744,"line_end":744,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(parser(\"xyz\"), Ok((\"xyz\", 10)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62333,"byte_end":62380,"line_start":745,"line_end":745,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62381,"byte_end":62384,"line_start":746,"line_end":746,"column_start":1,"column_end":4}},{"value":"/ let mut sign = alt((value(-1, char('-')), value(1, char('+')), success::<_,_,(_,ErrorKind)>(1)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62385,"byte_end":62486,"line_start":747,"line_end":747,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(sign(\"+10\"), Ok((\"10\", 1)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62487,"byte_end":62530,"line_start":748,"line_end":748,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(sign(\"-10\"), Ok((\"10\", -1)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62531,"byte_end":62575,"line_start":749,"line_end":749,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(sign(\"10\"), Ok((\"10\", 1)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62576,"byte_end":62618,"line_start":750,"line_end":750,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62619,"byte_end":62626,"line_start":751,"line_end":751,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62627,"byte_end":62634,"line_start":752,"line_end":752,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":440},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":63019,"byte_end":63023,"line_start":766,"line_end":766,"column_start":8,"column_end":12},"name":"fail","qualname":"::combinator::fail","value":"pub fn fail<I, O, E: ParseError<I>>(I) -> IResult<I, O, E>","parent":null,"children":[],"decl_id":null,"docs":" A parser which always fails.","sig":null,"attributes":[{"value":"/ A parser which always fails.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62771,"byte_end":62803,"line_start":757,"line_end":757,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62804,"byte_end":62807,"line_start":758,"line_end":758,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62808,"byte_end":62819,"line_start":759,"line_end":759,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62820,"byte_end":62868,"line_start":760,"line_end":760,"column_start":1,"column_end":49}},{"value":"/ use nom::combinator::fail;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62869,"byte_end":62899,"line_start":761,"line_end":761,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62900,"byte_end":62903,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ let s = \"string\";","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62904,"byte_end":62925,"line_start":763,"line_end":763,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(fail::<_, &str, _>(s), Err(Err::Error((s, ErrorKind::Fail))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":62926,"byte_end":63003,"line_start":764,"line_end":764,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":63004,"byte_end":63011,"line_start":765,"line_end":765,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":459},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63781,"byte_end":63788,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"name":"IResult","qualname":"::internal::IResult","value":"Result<(I, O), Err<E>>","parent":null,"children":[],"decl_id":null,"docs":" Holds the result of parsing functions","sig":null,"attributes":[{"value":"/ Holds the result of parsing functions","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63289,"byte_end":63330,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63331,"byte_end":63334,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ It depends on the input type `I`, the output type `O`, and the error type `E`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63335,"byte_end":63416,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ (by default `(I, nom::ErrorKind)`)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63417,"byte_end":63455,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63456,"byte_end":63459,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The `Ok` side is a pair containing the remainder of the input (the part of the data that","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63460,"byte_end":63552,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/ was not parsed) and the produced value. The `Err` side contains an instance of `nom::Err`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63553,"byte_end":63647,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63648,"byte_end":63651,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Outside of the parsing code, you can use the [Finish::finish] method to convert","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63652,"byte_end":63735,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/ it to a more common result type","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63736,"byte_end":63771,"line_start":17,"line_end":17,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":463},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63925,"byte_end":63931,"line_start":21,"line_end":21,"column_start":11,"column_end":17},"name":"Finish","qualname":"::internal::Finish","value":"Finish<I, O, E>","parent":null,"children":[{"krate":0,"index":467}],"decl_id":null,"docs":" Helper trait to convert a parser's result to a more manageable type\n","sig":null,"attributes":[{"value":"/ Helper trait to convert a parser's result to a more manageable type","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63843,"byte_end":63914,"line_start":20,"line_end":20,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":64677,"byte_end":64683,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"name":"finish","qualname":"::internal::Finish::finish","value":"pub fn finish(Self) -> Result<(I, O), E>","parent":{"krate":0,"index":463},"children":[],"decl_id":null,"docs":" converts the parser's result to a type that is more consumable by error\n management libraries. It keeps the same `Ok` branch, and merges `Err::Error`\n and `Err::Failure` into the `Err` side.","sig":null,"attributes":[{"value":"/ converts the parser's result to a type that is more consumable by error","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":63945,"byte_end":64020,"line_start":22,"line_end":22,"column_start":3,"column_end":78}},{"value":"/ management libraries. It keeps the same `Ok` branch, and merges `Err::Error`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":64023,"byte_end":64103,"line_start":23,"line_end":23,"column_start":3,"column_end":83}},{"value":"/ and `Err::Failure` into the `Err` side.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":64106,"byte_end":64149,"line_start":24,"line_end":24,"column_start":3,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":64152,"byte_end":64155,"line_start":25,"line_end":25,"column_start":3,"column_end":6}},{"value":"/ *warning*: if the result is `Err(Err::Incomplete(_))`, this method will panic.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":64158,"byte_end":64240,"line_start":26,"line_end":26,"column_start":3,"column_end":85}},{"value":"/ - \"complete\" parsers: It will not be an issue, `Incomplete` is never used","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":64243,"byte_end":64320,"line_start":27,"line_end":27,"column_start":3,"column_end":80}},{"value":"/ - \"streaming\" parsers: `Incomplete` will be returned if there's not enough data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":64323,"byte_end":64406,"line_start":28,"line_end":28,"column_start":3,"column_end":86}},{"value":"/ for the parser to decide, and you should gather more data before parsing again.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":64409,"byte_end":64492,"line_start":29,"line_end":29,"column_start":3,"column_end":86}},{"value":"/ Once the parser returns either `Ok(_)`, `Err(Err::Error(_))` or `Err(Err::Failure(_))`,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":64495,"byte_end":64586,"line_start":30,"line_end":30,"column_start":3,"column_end":94}},{"value":"/ you can get out of the parsing loop and call `finish()` on the parser's result","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":64589,"byte_end":64671,"line_start":31,"line_end":31,"column_start":3,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2880},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65429,"byte_end":65436,"line_start":52,"line_end":52,"column_start":3,"column_end":10},"name":"Unknown","qualname":"::internal::Needed::Unknown","value":"Needed::Unknown","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" Needs more data, but we do not know how much\n","sig":null,"attributes":[{"value":"/ Needs more data, but we do not know how much","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65378,"byte_end":65426,"line_start":51,"line_end":51,"column_start":3,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2882},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65487,"byte_end":65491,"line_start":54,"line_end":54,"column_start":3,"column_end":7},"name":"Size","qualname":"::internal::Needed::Size","value":"Needed::Size(NonZeroUsize)","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":" Contains the required data size in bytes\n","sig":null,"attributes":[{"value":"/ Contains the required data size in bytes","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65440,"byte_end":65484,"line_start":53,"line_end":53,"column_start":3,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":2879},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65367,"byte_end":65373,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Needed","qualname":"::internal::Needed","value":"pub enum Needed { Unknown, Size(NonZeroUsize), }","parent":null,"children":[{"krate":0,"index":2880},{"krate":0,"index":2882}],"decl_id":null,"docs":" Contains information on needed data if a parser returned `Incomplete`\n","sig":null,"attributes":[{"value":"/ Contains information on needed data if a parser returned `Incomplete`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65176,"byte_end":65249,"line_start":47,"line_end":47,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65616,"byte_end":65619,"line_start":59,"line_end":59,"column_start":10,"column_end":13},"name":"new","qualname":"<Needed>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates `Needed` instance, returns `Needed::Unknown` if the argument is zero\n","sig":null,"attributes":[{"value":"/ Creates `Needed` instance, returns `Needed::Unknown` if the argument is zero","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65526,"byte_end":65606,"line_start":58,"line_end":58,"column_start":3,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65810,"byte_end":65818,"line_start":67,"line_end":67,"column_start":10,"column_end":18},"name":"is_known","qualname":"<Needed>::is_known","value":"pub fn is_known(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if we know how many bytes we need\n","sig":null,"attributes":[{"value":"/ Indicates if we know how many bytes we need","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65753,"byte_end":65800,"line_start":66,"line_end":66,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65969,"byte_end":65972,"line_start":73,"line_end":73,"column_start":10,"column_end":13},"name":"map","qualname":"<Needed>::map","value":"pub fn map<F: Fn(NonZeroUsize) -> usize>(Self, F) -> Needed","parent":null,"children":[],"decl_id":null,"docs":" Maps a `Needed` to `Needed` by applying a function to a contained `Size` value.\n","sig":null,"attributes":[{"value":"/ Maps a `Needed` to `Needed` by applying a function to a contained `Size` value.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65864,"byte_end":65947,"line_start":71,"line_end":71,"column_start":3,"column_end":86}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65950,"byte_end":65959,"line_start":72,"line_end":72,"column_start":3,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2899},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67071,"byte_end":67081,"line_start":99,"line_end":99,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::internal::Err::Incomplete","value":"Err::Incomplete(Needed)","parent":{"krate":0,"index":2897},"children":[],"decl_id":null,"docs":" There was not enough data\n","sig":null,"attributes":[{"value":"/ There was not enough data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67039,"byte_end":67068,"line_start":98,"line_end":98,"column_start":3,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2902},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67137,"byte_end":67142,"line_start":101,"line_end":101,"column_start":3,"column_end":8},"name":"Error","qualname":"::internal::Err::Error","value":"Err::Error(E)","parent":{"krate":0,"index":2897},"children":[],"decl_id":null,"docs":" The parser had an error (recoverable)\n","sig":null,"attributes":[{"value":"/ The parser had an error (recoverable)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67093,"byte_end":67134,"line_start":100,"line_end":100,"column_start":3,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2905},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67305,"byte_end":67312,"line_start":105,"line_end":105,"column_start":3,"column_end":10},"name":"Failure","qualname":"::internal::Err::Failure","value":"Err::Failure(E)","parent":{"krate":0,"index":2897},"children":[],"decl_id":null,"docs":" The parser had an unrecoverable error: we got to the right\n branch and we know other branches won't work, so backtrack\n as fast as possible\n","sig":null,"attributes":[{"value":"/ The parser had an unrecoverable error: we got to the right","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67149,"byte_end":67211,"line_start":102,"line_end":102,"column_start":3,"column_end":65}},{"value":"/ branch and we know other branches won't work, so backtrack","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67214,"byte_end":67276,"line_start":103,"line_end":103,"column_start":3,"column_end":65}},{"value":"/ as fast as possible","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67279,"byte_end":67302,"line_start":104,"line_end":104,"column_start":3,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":2897},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67028,"byte_end":67031,"line_start":97,"line_end":97,"column_start":10,"column_end":13},"name":"Err","qualname":"::internal::Err","value":"pub enum Err<E> { Incomplete(Needed), Error(E), Failure(E), }","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2902},{"krate":0,"index":2905}],"decl_id":null,"docs":" The `Err` enum indicates the parser was not successful","sig":null,"attributes":[{"value":"/ The `Err` enum indicates the parser was not successful","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66119,"byte_end":66177,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66178,"byte_end":66181,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ It has three cases:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66182,"byte_end":66205,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66206,"byte_end":66209,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ * `Incomplete` indicates that more data is needed to decide. The `Needed` enum","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66210,"byte_end":66292,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ can contain how many additional bytes are necessary. If you are sure your parser","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66293,"byte_end":66377,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/ is working on full data, you can wrap your parser with the `complete` combinator","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66378,"byte_end":66462,"line_start":87,"line_end":87,"column_start":1,"column_end":85}},{"value":"/ to transform that case in `Error`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66463,"byte_end":66500,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/ * `Error` means some parser did not succeed, but another one might (as an example,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66501,"byte_end":66587,"line_start":89,"line_end":89,"column_start":1,"column_end":87}},{"value":"/ when testing different branches of an `alt` combinator)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66588,"byte_end":66647,"line_start":90,"line_end":90,"column_start":1,"column_end":60}},{"value":"/ * `Failure` indicates an unrecoverable error. As an example, if you recognize a prefix","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66648,"byte_end":66738,"line_start":91,"line_end":91,"column_start":1,"column_end":91}},{"value":"/ to decide on the next parser to apply, and that parser fails, you know there's no need","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66739,"byte_end":66829,"line_start":92,"line_end":92,"column_start":1,"column_end":91}},{"value":"/ to try other parsers, you were already in the right branch, so the data is invalid","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66830,"byte_end":66916,"line_start":93,"line_end":93,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":66917,"byte_end":66920,"line_start":94,"line_end":94,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67386,"byte_end":67399,"line_start":110,"line_end":110,"column_start":10,"column_end":23},"name":"is_incomplete","qualname":"<Err<E>>::is_incomplete","value":"pub fn is_incomplete(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the result is Incomplete\n","sig":null,"attributes":[{"value":"/ Tests if the result is Incomplete","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67339,"byte_end":67376,"line_start":109,"line_end":109,"column_start":3,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67564,"byte_end":67567,"line_start":119,"line_end":119,"column_start":10,"column_end":13},"name":"map","qualname":"<Err<E>>::map","value":"pub fn map<E2, F>(Self, F) -> Err<E2> where F: FnOnce(E) -> E2","parent":null,"children":[],"decl_id":null,"docs":" Applies the given function to the inner error\n","sig":null,"attributes":[{"value":"/ Applies the given function to the inner error","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67505,"byte_end":67554,"line_start":118,"line_end":118,"column_start":3,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67884,"byte_end":67891,"line_start":131,"line_end":131,"column_start":10,"column_end":17},"name":"convert","qualname":"<Err<E>>::convert","value":"pub fn convert<F>(Err<F>) -> Self where E: From<F>","parent":null,"children":[],"decl_id":null,"docs":" Automatically converts between errors if the underlying type supports it\n","sig":null,"attributes":[{"value":"/ Automatically converts between errors if the underlying type supports it","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67798,"byte_end":67874,"line_start":130,"line_end":130,"column_start":3,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":68121,"byte_end":68130,"line_start":141,"line_end":141,"column_start":10,"column_end":19},"name":"map_input","qualname":"<Err<(T, ErrorKind)>>::map_input","value":"pub fn map_input<U, F>(Self, F) -> Err<(U, ErrorKind)> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps `Err<(T, ErrorKind)>` to `Err<(U, ErrorKind)>` with the given `F: T -> U`\n","sig":null,"attributes":[{"value":"/ Maps `Err<(T, ErrorKind)>` to `Err<(U, ErrorKind)>` with the given `F: T -> U`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":68029,"byte_end":68111,"line_start":140,"line_end":140,"column_start":3,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":68534,"byte_end":68543,"line_start":155,"line_end":155,"column_start":10,"column_end":19},"name":"map_input","qualname":"<Err<error::Error<T>>>::map_input","value":"pub fn map_input<U, F>(Self, F) -> Err<error::Error<U>> where F: FnOnce(T) ->\nU","parent":null,"children":[],"decl_id":null,"docs":" Maps `Err<error::Error<T>>` to `Err<error::Error<U>>` with the given `F: T -> U`\n","sig":null,"attributes":[{"value":"/ Maps `Err<error::Error<T>>` to `Err<error::Error<U>>` with the given `F: T -> U`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":68440,"byte_end":68524,"line_start":154,"line_end":154,"column_start":3,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69200,"byte_end":69208,"line_start":179,"line_end":179,"column_start":10,"column_end":18},"name":"to_owned","qualname":"<Err<(&'_ [u8], ErrorKind)>>::to_owned","value":"pub fn to_owned(Self) -> Err<(Vec<u8>, ErrorKind)>","parent":null,"children":[],"decl_id":null,"docs":" Obtaining ownership\n","sig":null,"attributes":[{"value":"/ Obtaining ownership","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69104,"byte_end":69127,"line_start":177,"line_end":177,"column_start":3,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69445,"byte_end":69453,"line_start":188,"line_end":188,"column_start":10,"column_end":18},"name":"to_owned","qualname":"<Err<(&'_ str, ErrorKind)>>::to_owned","value":"pub fn to_owned(Self) -> Err<(String, ErrorKind)>","parent":null,"children":[],"decl_id":null,"docs":" Obtaining ownership\n","sig":null,"attributes":[{"value":"/ Obtaining ownership","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69349,"byte_end":69372,"line_start":186,"line_end":186,"column_start":3,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69691,"byte_end":69699,"line_start":197,"line_end":197,"column_start":10,"column_end":18},"name":"to_owned","qualname":"<Err<error::Error<&'_ [u8]>>>::to_owned","value":"pub fn to_owned(Self) -> Err<error::Error<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Obtaining ownership\n","sig":null,"attributes":[{"value":"/ Obtaining ownership","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69595,"byte_end":69618,"line_start":195,"line_end":195,"column_start":3,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69938,"byte_end":69946,"line_start":206,"line_end":206,"column_start":10,"column_end":18},"name":"to_owned","qualname":"<Err<error::Error<&'_ str>>>::to_owned","value":"pub fn to_owned(Self) -> Err<error::Error<String>>","parent":null,"children":[],"decl_id":null,"docs":" Obtaining ownership\n","sig":null,"attributes":[{"value":"/ Obtaining ownership","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69842,"byte_end":69865,"line_start":204,"line_end":204,"column_start":3,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":525},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":70772,"byte_end":70778,"line_start":241,"line_end":241,"column_start":11,"column_end":17},"name":"Parser","qualname":"::internal::Parser","value":"Parser<I, O, E>","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":545}],"decl_id":null,"docs":" All nom parsers implement this trait\n","sig":null,"attributes":[{"value":"/ All nom parsers implement this trait","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":70721,"byte_end":70761,"line_start":240,"line_end":240,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":70932,"byte_end":70937,"line_start":244,"line_end":244,"column_start":6,"column_end":11},"name":"parse","qualname":"::internal::Parser::parse","value":"pub fn parse(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" A parser takes in input type, and returns a `Result` containing\n either the remaining input and the output value, or an error\n","sig":null,"attributes":[{"value":"/ A parser takes in input type, and returns a `Result` containing","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":70792,"byte_end":70859,"line_start":242,"line_end":242,"column_start":3,"column_end":70}},{"value":"/ either the remaining input and the output value, or an error","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":70862,"byte_end":70926,"line_start":243,"line_end":243,"column_start":3,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":71036,"byte_end":71039,"line_start":247,"line_end":247,"column_start":6,"column_end":9},"name":"map","qualname":"::internal::Parser::map","value":"pub fn map<G, O2>(Self, G) -> Map<Self, G, O> where G: Fn(O) -> O2,\nSelf: core::marker::Sized","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" Maps a function over the result of a parser\n","sig":null,"attributes":[{"value":"/ Maps a function over the result of a parser","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":70983,"byte_end":71030,"line_start":246,"line_end":246,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":71335,"byte_end":71343,"line_start":260,"line_end":260,"column_start":6,"column_end":14},"name":"flat_map","qualname":"::internal::Parser::flat_map","value":"pub fn flat_map<G, H, O2>(Self, G) -> FlatMap<Self, G, O> where G: FnMut(O) ->\nH, H: Parser<I, O2, E>, Self: core::marker::Sized","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" Creates a second parser from the output of the first one, then apply over the rest of the input\n","sig":null,"attributes":[{"value":"/ Creates a second parser from the output of the first one, then apply over the rest of the input","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":71230,"byte_end":71329,"line_start":259,"line_end":259,"column_start":3,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":71638,"byte_end":71646,"line_start":274,"line_end":274,"column_start":6,"column_end":14},"name":"and_then","qualname":"::internal::Parser::and_then","value":"pub fn and_then<G, O2>(Self, G) -> AndThen<Self, G, O> where\nG: Parser<O, O2, E>, Self: core::marker::Sized","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" Applies a second parser over the output of the first one\n","sig":null,"attributes":[{"value":"/ Applies a second parser over the output of the first one","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":71572,"byte_end":71632,"line_start":273,"line_end":273,"column_start":3,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":71936,"byte_end":71939,"line_start":287,"line_end":287,"column_start":6,"column_end":9},"name":"and","qualname":"::internal::Parser::and","value":"pub fn and<G, O2>(Self, G) -> And<Self, G> where G: Parser<I, O2, E>,\nSelf: core::marker::Sized","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" Applies a second parser after the first one, return their results as a tuple\n","sig":null,"attributes":[{"value":"/ Applies a second parser after the first one, return their results as a tuple","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":71850,"byte_end":71930,"line_start":286,"line_end":286,"column_start":3,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":72145,"byte_end":72147,"line_start":296,"line_end":296,"column_start":6,"column_end":8},"name":"or","qualname":"::internal::Parser::or","value":"pub fn or<G>(Self, G) -> Or<Self, G> where G: Parser<I, O, E>,\nSelf: core::marker::Sized","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" Applies a second parser over the input if the first one failed\n","sig":null,"attributes":[{"value":"/ Applies a second parser over the input if the first one failed","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":72073,"byte_end":72139,"line_start":295,"line_end":295,"column_start":3,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":72409,"byte_end":72413,"line_start":306,"line_end":306,"column_start":6,"column_end":10},"name":"into","qualname":"::internal::Parser::into","value":"pub fn into<O2: From<O>, E2: From<E>>(Self) -> Into<Self, O, O2, E, E2> where\nSelf: core::marker::Sized","parent":{"krate":0,"index":525},"children":[],"decl_id":null,"docs":" automatically converts the parser's output and error values to another type, as long as they\n implement the `From` trait\n","sig":null,"attributes":[{"value":"/ automatically converts the parser's output and error values to another type, as long as they","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":72274,"byte_end":72370,"line_start":304,"line_end":304,"column_start":3,"column_end":99}},{"value":"/ implement the `From` trait","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":72373,"byte_end":72403,"line_start":305,"line_end":305,"column_start":3,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":73247,"byte_end":73250,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"Map","qualname":"::internal::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570}],"decl_id":null,"docs":" Implementation of `Parser::map`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::map`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":73137,"byte_end":73172,"line_start":339,"line_end":339,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":580},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":73695,"byte_end":73702,"line_start":358,"line_end":358,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::internal::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586}],"decl_id":null,"docs":" Implementation of `Parser::flat_map`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::flat_map`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":73580,"byte_end":73620,"line_start":356,"line_end":356,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":597},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":74135,"byte_end":74142,"line_start":375,"line_end":375,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::internal::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603}],"decl_id":null,"docs":" Implementation of `Parser::and_then`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::and_then`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":74020,"byte_end":74060,"line_start":373,"line_end":373,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":613},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":74582,"byte_end":74585,"line_start":393,"line_end":393,"column_start":12,"column_end":15},"name":"And","qualname":"::internal::And","value":"And {  }","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"decl_id":null,"docs":" Implementation of `Parser::and`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::and`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":74472,"byte_end":74507,"line_start":391,"line_end":391,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":627},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":74986,"byte_end":74988,"line_start":410,"line_end":410,"column_start":12,"column_end":14},"name":"Or","qualname":"::internal::Or","value":"Or {  }","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"decl_id":null,"docs":" Implementation of `Parser::or`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::or`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":74877,"byte_end":74911,"line_start":408,"line_end":408,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":640},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":75512,"byte_end":75516,"line_start":431,"line_end":431,"column_start":12,"column_end":16},"name":"Into","qualname":"::internal::Into","value":"Into {  }","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650}],"decl_id":null,"docs":" Implementation of `Parser::into`\n","sig":null,"attributes":[{"value":"/ Implementation of `Parser::into`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":75401,"byte_end":75437,"line_start":429,"line_end":429,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":719},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":77507,"byte_end":77518,"line_start":18,"line_end":18,"column_start":11,"column_end":22},"name":"InputLength","qualname":"::traits::InputLength","value":"InputLength","parent":null,"children":[{"krate":0,"index":720}],"decl_id":null,"docs":" Abstract method to calculate the input length\n","sig":null,"attributes":[{"value":"/ Abstract method to calculate the input length","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":77447,"byte_end":77496,"line_start":17,"line_end":17,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":77626,"byte_end":77635,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"name":"input_len","qualname":"::traits::InputLength::input_len","value":"pub fn input_len(&Self) -> usize","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" Calculates the input length, as indicated by its name,\n and the name of the trait itself\n","sig":null,"attributes":[{"value":"/ Calculates the input length, as indicated by its name,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":77523,"byte_end":77581,"line_start":19,"line_end":19,"column_start":3,"column_end":61}},{"value":"/ and the name of the trait itself","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":77584,"byte_end":77620,"line_start":20,"line_end":20,"column_start":3,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":731},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":78210,"byte_end":78216,"line_start":48,"line_end":48,"column_start":11,"column_end":17},"name":"Offset","qualname":"::traits::Offset","value":"Offset","parent":null,"children":[{"krate":0,"index":732}],"decl_id":null,"docs":" Useful functions to calculate the offset between slices and show a hexdump of a slice\n","sig":null,"attributes":[{"value":"/ Useful functions to calculate the offset between slices and show a hexdump of a slice","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":78110,"byte_end":78199,"line_start":47,"line_end":47,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":78303,"byte_end":78309,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"name":"offset","qualname":"::traits::Offset::offset","value":"pub fn offset(&Self, &Self) -> usize","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" Offset between the first byte of self and the first byte of the argument\n","sig":null,"attributes":[{"value":"/ Offset between the first byte of self and the first byte of the argument","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":78221,"byte_end":78297,"line_start":49,"line_end":49,"column_start":3,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":743},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":79103,"byte_end":79110,"line_start":90,"line_end":90,"column_start":11,"column_end":18},"name":"AsBytes","qualname":"::traits::AsBytes","value":"AsBytes","parent":null,"children":[{"krate":0,"index":744}],"decl_id":null,"docs":" Helper trait for types that can be viewed as a byte slice\n","sig":null,"attributes":[{"value":"/ Helper trait for types that can be viewed as a byte slice","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":79031,"byte_end":79092,"line_start":89,"line_end":89,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":79161,"byte_end":79169,"line_start":92,"line_end":92,"column_start":6,"column_end":14},"name":"as_bytes","qualname":"::traits::AsBytes::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":" Casts the input type to a byte slice\n","sig":null,"attributes":[{"value":"/ Casts the input type to a byte slice","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":79115,"byte_end":79155,"line_start":91,"line_end":91,"column_start":3,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":756},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80161,"byte_end":80167,"line_start":151,"line_end":151,"column_start":11,"column_end":17},"name":"AsChar","qualname":"::traits::AsChar","value":"AsChar","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763}],"decl_id":null,"docs":" Transforms common types to a char for basic token parsing\n","sig":null,"attributes":[{"value":"/ Transforms common types to a char for basic token parsing","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80089,"byte_end":80150,"line_start":150,"line_end":150,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80204,"byte_end":80211,"line_start":153,"line_end":153,"column_start":6,"column_end":13},"name":"as_char","qualname":"::traits::AsChar::as_char","value":"pub fn as_char(Self) -> char","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" makes a char from self\n","sig":null,"attributes":[{"value":"/ makes a char from self","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80172,"byte_end":80198,"line_start":152,"line_end":152,"column_start":3,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80388,"byte_end":80396,"line_start":159,"line_end":159,"column_start":6,"column_end":14},"name":"is_alpha","qualname":"::traits::AsChar::is_alpha","value":"pub fn is_alpha(Self) -> bool","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Tests that self is an alphabetic character","sig":null,"attributes":[{"value":"/ Tests that self is an alphabetic character","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80230,"byte_end":80276,"line_start":155,"line_end":155,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80279,"byte_end":80282,"line_start":156,"line_end":156,"column_start":3,"column_end":6}},{"value":"/ Warning: for `&str` it recognizes alphabetic","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80285,"byte_end":80333,"line_start":157,"line_end":157,"column_start":3,"column_end":51}},{"value":"/ characters outside of the 52 ASCII letters","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80336,"byte_end":80382,"line_start":158,"line_end":158,"column_start":3,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80492,"byte_end":80503,"line_start":163,"line_end":163,"column_start":6,"column_end":17},"name":"is_alphanum","qualname":"::traits::AsChar::is_alphanum","value":"pub fn is_alphanum(Self) -> bool","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Tests that self is an alphabetic character\n or a decimal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an alphabetic character","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80415,"byte_end":80461,"line_start":161,"line_end":161,"column_start":3,"column_end":49}},{"value":"/ or a decimal digit","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80464,"byte_end":80486,"line_start":162,"line_end":162,"column_start":3,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80565,"byte_end":80577,"line_start":165,"line_end":165,"column_start":6,"column_end":18},"name":"is_dec_digit","qualname":"::traits::AsChar::is_dec_digit","value":"pub fn is_dec_digit(Self) -> bool","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Tests that self is a decimal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is a decimal digit","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80521,"byte_end":80559,"line_start":164,"line_end":164,"column_start":3,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80636,"byte_end":80648,"line_start":167,"line_end":167,"column_start":6,"column_end":18},"name":"is_hex_digit","qualname":"::traits::AsChar::is_hex_digit","value":"pub fn is_hex_digit(Self) -> bool","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Tests that self is an hex digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an hex digit","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80595,"byte_end":80630,"line_start":166,"line_end":166,"column_start":3,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80709,"byte_end":80721,"line_start":169,"line_end":169,"column_start":6,"column_end":18},"name":"is_oct_digit","qualname":"::traits::AsChar::is_oct_digit","value":"pub fn is_oct_digit(Self) -> bool","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Tests that self is an octal digit\n","sig":null,"attributes":[{"value":"/ Tests that self is an octal digit","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80666,"byte_end":80703,"line_start":168,"line_end":168,"column_start":3,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80779,"byte_end":80782,"line_start":171,"line_end":171,"column_start":6,"column_end":9},"name":"len","qualname":"::traits::AsChar::len","value":"pub fn len(Self) -> usize","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Gets the len in bytes for self\n","sig":null,"attributes":[{"value":"/ Gets the len in bytes for self","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":80739,"byte_end":80773,"line_start":170,"line_end":170,"column_start":3,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":798},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83321,"byte_end":83330,"line_start":302,"line_end":302,"column_start":11,"column_end":20},"name":"InputIter","qualname":"::traits::InputIter","value":"InputIter","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":806}],"decl_id":null,"docs":" Abstracts common iteration operations on the input type\n","sig":null,"attributes":[{"value":"/ Abstracts common iteration operations on the input type","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83251,"byte_end":83310,"line_start":301,"line_end":301,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":799},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83463,"byte_end":83467,"line_start":306,"line_end":306,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::InputIter::Item","value":"type Item;","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83335,"byte_end":83396,"line_start":303,"line_end":303,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83399,"byte_end":83402,"line_start":304,"line_end":304,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83405,"byte_end":83455,"line_start":305,"line_end":305,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":800},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83677,"byte_end":83681,"line_start":310,"line_end":310,"column_start":8,"column_end":12},"name":"Iter","qualname":"::traits::InputIter::Iter","value":"type Iter: Iterator<Item = (usize, Self::Item)>;","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" An iterator over the input type, producing the item and its position\n for use with [Slice]. If we're iterating over `&str`, the position\n corresponds to the byte index of the character\n","sig":null,"attributes":[{"value":"/ An iterator over the input type, producing the item and its position","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83471,"byte_end":83543,"line_start":307,"line_end":307,"column_start":3,"column_end":75}},{"value":"/ for use with [Slice]. If we're iterating over `&str`, the position","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83546,"byte_end":83616,"line_start":308,"line_end":308,"column_start":3,"column_end":73}},{"value":"/ corresponds to the byte index of the character","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83619,"byte_end":83669,"line_start":309,"line_end":309,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":801},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83787,"byte_end":83795,"line_start":313,"line_end":313,"column_start":8,"column_end":16},"name":"IterElem","qualname":"::traits::InputIter::IterElem","value":"type IterElem: Iterator<Item = Self::Item>;","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" An iterator over the input type, producing the item\n","sig":null,"attributes":[{"value":"/ An iterator over the input type, producing the item","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83724,"byte_end":83779,"line_start":312,"line_end":312,"column_start":3,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83899,"byte_end":83911,"line_start":316,"line_end":316,"column_start":6,"column_end":18},"name":"iter_indices","qualname":"::traits::InputIter::iter_indices","value":"pub fn iter_indices(&Self) -> Self::Iter","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" Returns an iterator over the elements and their byte offsets\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the elements and their byte offsets","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83829,"byte_end":83893,"line_start":315,"line_end":315,"column_start":3,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83983,"byte_end":83996,"line_start":318,"line_end":318,"column_start":6,"column_end":19},"name":"iter_elements","qualname":"::traits::InputIter::iter_elements","value":"pub fn iter_elements(&Self) -> Self::IterElem","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" Returns an iterator over the elements\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the elements","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":83936,"byte_end":83977,"line_start":317,"line_end":317,"column_start":3,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":84073,"byte_end":84081,"line_start":320,"line_end":320,"column_start":6,"column_end":14},"name":"position","qualname":"::traits::InputIter::position","value":"pub fn position<P>(&Self, P) -> Option<usize> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" Finds the byte position of the element\n","sig":null,"attributes":[{"value":"/ Finds the byte position of the element","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":84025,"byte_end":84067,"line_start":319,"line_end":319,"column_start":3,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":84235,"byte_end":84246,"line_start":324,"line_end":324,"column_start":6,"column_end":17},"name":"slice_index","qualname":"::traits::InputIter::slice_index","value":"pub fn slice_index(&Self, usize) -> Result<usize, Needed>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" Get the byte offset from the element's position in the stream\n","sig":null,"attributes":[{"value":"/ Get the byte offset from the element's position in the stream","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":84164,"byte_end":84229,"line_start":323,"line_end":323,"column_start":3,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":807},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":84340,"byte_end":84349,"line_start":328,"line_end":328,"column_start":11,"column_end":20},"name":"InputTake","qualname":"::traits::InputTake","value":"InputTake: Sized","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809}],"decl_id":null,"docs":" Abstracts slicing operations\n","sig":null,"attributes":[{"value":"/ Abstracts slicing operations","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":84297,"byte_end":84329,"line_start":327,"line_end":327,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":84429,"byte_end":84433,"line_start":330,"line_end":330,"column_start":6,"column_end":10},"name":"take","qualname":"::traits::InputTake::take","value":"pub fn take(&Self, usize) -> Self","parent":{"krate":0,"index":807},"children":[],"decl_id":null,"docs":" Returns a slice of `count` bytes. panics if count > length\n","sig":null,"attributes":[{"value":"/ Returns a slice of `count` bytes. panics if count > length","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":84361,"byte_end":84423,"line_start":329,"line_end":329,"column_start":3,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":84545,"byte_end":84555,"line_start":332,"line_end":332,"column_start":6,"column_end":16},"name":"take_split","qualname":"::traits::InputTake::take_split","value":"pub fn take_split(&Self, usize) -> (Self, Self)","parent":{"krate":0,"index":807},"children":[],"decl_id":null,"docs":" Split the stream at the `count` byte offset. panics if count > length\n","sig":null,"attributes":[{"value":"/ Split the stream at the `count` byte offset. panics if count > length","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":84466,"byte_end":84539,"line_start":331,"line_end":331,"column_start":3,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":839},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87155,"byte_end":87173,"line_start":439,"line_end":439,"column_start":11,"column_end":29},"name":"UnspecializedInput","qualname":"::traits::UnspecializedInput","value":"UnspecializedInput","parent":null,"children":[],"decl_id":null,"docs":" Dummy trait used for default implementations (currently only used for `InputTakeAtPosition` and `Compare`).","sig":null,"attributes":[{"value":"/ Dummy trait used for default implementations (currently only used for `InputTakeAtPosition` and `Compare`).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":86590,"byte_end":86701,"line_start":430,"line_end":430,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":86702,"byte_end":86705,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ When implementing a custom input type, it is possible to use directly the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":86706,"byte_end":86783,"line_start":432,"line_end":432,"column_start":1,"column_end":78}},{"value":"/ default implementation: If the input type implements `InputLength`, `InputIter`,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":86784,"byte_end":86868,"line_start":433,"line_end":433,"column_start":1,"column_end":85}},{"value":"/ `InputTake` and `Clone`, you can implement `UnspecializedInput` and get","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":86869,"byte_end":86944,"line_start":434,"line_end":434,"column_start":1,"column_end":76}},{"value":"/ a default version of `InputTakeAtPosition` and `Compare`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":86945,"byte_end":87006,"line_start":435,"line_end":435,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87007,"byte_end":87010,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ For performance reasons, you might want to write a custom implementation of","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87011,"byte_end":87090,"line_start":437,"line_end":437,"column_start":1,"column_end":80}},{"value":"/ `InputTakeAtPosition` (like the one for `&[u8]`).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87091,"byte_end":87144,"line_start":438,"line_end":438,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":840},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87372,"byte_end":87391,"line_start":444,"line_end":444,"column_start":11,"column_end":30},"name":"InputTakeAtPosition","qualname":"::traits::InputTakeAtPosition","value":"InputTakeAtPosition: Sized","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851}],"decl_id":null,"docs":" Methods to take as much input as possible until the provided function returns true for the current element.","sig":null,"attributes":[{"value":"/ Methods to take as much input as possible until the provided function returns true for the current element.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87178,"byte_end":87289,"line_start":441,"line_end":441,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87290,"byte_end":87293,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ A large part of nom's basic parsers are built using this trait.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87294,"byte_end":87361,"line_start":443,"line_end":443,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":841},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87531,"byte_end":87535,"line_start":448,"line_end":448,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::InputTakeAtPosition::Item","value":"type Item;","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87403,"byte_end":87464,"line_start":445,"line_end":445,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87467,"byte_end":87470,"line_start":446,"line_end":446,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87473,"byte_end":87523,"line_start":447,"line_end":447,"column_start":3,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87792,"byte_end":87809,"line_start":454,"line_end":454,"column_start":6,"column_end":23},"name":"split_at_position","qualname":"::traits::InputTakeAtPosition::split_at_position","value":"pub fn split_at_position<P, E: ParseError<Self>>(&Self, P)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true,\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87540,"byte_end":87627,"line_start":450,"line_end":450,"column_start":3,"column_end":90}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87630,"byte_end":87676,"line_start":451,"line_end":451,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87679,"byte_end":87682,"line_start":452,"line_end":452,"column_start":3,"column_end":6}},{"value":"/ *streaming version*: If no element is found matching the condition, this will return `Incomplete`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87685,"byte_end":87786,"line_start":453,"line_end":453,"column_start":3,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88224,"byte_end":88242,"line_start":464,"line_end":464,"column_start":6,"column_end":24},"name":"split_at_position1","qualname":"::traits::InputTakeAtPosition::split_at_position1","value":"pub fn split_at_position1<P, E: ParseError<Self>>(&Self, P, ErrorKind)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87923,"byte_end":88009,"line_start":458,"line_end":458,"column_start":3,"column_end":89}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88012,"byte_end":88058,"line_start":459,"line_end":459,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88061,"byte_end":88064,"line_start":460,"line_end":460,"column_start":3,"column_end":6}},{"value":"/ Fails if the produced slice is empty.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88067,"byte_end":88108,"line_start":461,"line_end":461,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88111,"byte_end":88114,"line_start":462,"line_end":462,"column_start":3,"column_end":6}},{"value":"/ *streaming version*: If no element is found matching the condition, this will return `Incomplete`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88117,"byte_end":88218,"line_start":463,"line_end":463,"column_start":3,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88641,"byte_end":88667,"line_start":476,"line_end":476,"column_start":6,"column_end":32},"name":"split_at_position_complete","qualname":"::traits::InputTakeAtPosition::split_at_position_complete","value":"pub fn split_at_position_complete<P, E: ParseError<Self>>(&Self, P)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true,\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88387,"byte_end":88474,"line_start":472,"line_end":472,"column_start":3,"column_end":90}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88477,"byte_end":88523,"line_start":473,"line_end":473,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88526,"byte_end":88529,"line_start":474,"line_end":474,"column_start":3,"column_end":6}},{"value":"/ *complete version*: If no element is found matching the condition, this will return the whole input","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88532,"byte_end":88635,"line_start":475,"line_end":475,"column_start":3,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":89097,"byte_end":89124,"line_start":489,"line_end":489,"column_start":6,"column_end":33},"name":"split_at_position1_complete","qualname":"::traits::InputTakeAtPosition::split_at_position1_complete","value":"pub fn split_at_position1_complete<P,\n                                   E: ParseError<Self>>(&Self, P, ErrorKind)\n-> IResult<Self, Self, E> where P: Fn(Self::Item) -> bool","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":" Looks for the first element of the input type for which the condition returns true\n and returns the input up to this position.","sig":null,"attributes":[{"value":"/ Looks for the first element of the input type for which the condition returns true","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88794,"byte_end":88880,"line_start":483,"line_end":483,"column_start":3,"column_end":89}},{"value":"/ and returns the input up to this position.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88883,"byte_end":88929,"line_start":484,"line_end":484,"column_start":3,"column_end":49}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88932,"byte_end":88935,"line_start":485,"line_end":485,"column_start":3,"column_end":6}},{"value":"/ Fails if the produced slice is empty.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88938,"byte_end":88979,"line_start":486,"line_end":486,"column_start":3,"column_end":44}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88982,"byte_end":88985,"line_start":487,"line_end":487,"column_start":3,"column_end":6}},{"value":"/ *complete version*: If no element is found matching the condition, this will return the whole input","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":88988,"byte_end":89091,"line_start":488,"line_end":488,"column_start":3,"column_end":106}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3152},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":94944,"byte_end":94946,"line_start":709,"line_end":709,"column_start":3,"column_end":5},"name":"Ok","qualname":"::traits::CompareResult::Ok","value":"CompareResult::Ok","parent":{"krate":0,"index":3151},"children":[],"decl_id":null,"docs":" Comparison was successful\n","sig":null,"attributes":[{"value":"/ Comparison was successful","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":94912,"byte_end":94941,"line_start":708,"line_end":708,"column_start":3,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3154},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":94985,"byte_end":94995,"line_start":711,"line_end":711,"column_start":3,"column_end":13},"name":"Incomplete","qualname":"::traits::CompareResult::Incomplete","value":"CompareResult::Incomplete","parent":{"krate":0,"index":3151},"children":[],"decl_id":null,"docs":" We need more data to be sure\n","sig":null,"attributes":[{"value":"/ We need more data to be sure","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":94950,"byte_end":94982,"line_start":710,"line_end":710,"column_start":3,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3156},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95023,"byte_end":95028,"line_start":713,"line_end":713,"column_start":3,"column_end":8},"name":"Error","qualname":"::traits::CompareResult::Error","value":"CompareResult::Error","parent":{"krate":0,"index":3151},"children":[],"decl_id":null,"docs":" Comparison failed\n","sig":null,"attributes":[{"value":"/ Comparison failed","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":94999,"byte_end":95020,"line_start":712,"line_end":712,"column_start":3,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":3151},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":94894,"byte_end":94907,"line_start":707,"line_end":707,"column_start":10,"column_end":23},"name":"CompareResult","qualname":"::traits::CompareResult","value":"pub enum CompareResult { Ok, Incomplete, Error, }","parent":null,"children":[{"krate":0,"index":3152},{"krate":0,"index":3154},{"krate":0,"index":3156}],"decl_id":null,"docs":" Indicates whether a comparison was successful, an error, or\n if more data was needed\n","sig":null,"attributes":[{"value":"/ Indicates whether a comparison was successful, an error, or","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":94765,"byte_end":94828,"line_start":704,"line_end":704,"column_start":1,"column_end":64}},{"value":"/ if more data was needed","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":94829,"byte_end":94856,"line_start":705,"line_end":705,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":903},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95079,"byte_end":95086,"line_start":717,"line_end":717,"column_start":11,"column_end":18},"name":"Compare","qualname":"::traits::Compare","value":"Compare<T>","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906}],"decl_id":null,"docs":" Abstracts comparison operations\n","sig":null,"attributes":[{"value":"/ Abstracts comparison operations","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95033,"byte_end":95068,"line_start":716,"line_end":716,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95147,"byte_end":95154,"line_start":719,"line_end":719,"column_start":6,"column_end":13},"name":"compare","qualname":"::traits::Compare::compare","value":"pub fn compare(&Self, T) -> CompareResult","parent":{"krate":0,"index":903},"children":[],"decl_id":null,"docs":" Compares self to another value for equality\n","sig":null,"attributes":[{"value":"/ Compares self to another value for equality","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95094,"byte_end":95141,"line_start":718,"line_end":718,"column_start":3,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95458,"byte_end":95473,"line_start":727,"line_end":727,"column_start":6,"column_end":21},"name":"compare_no_case","qualname":"::traits::Compare::compare_no_case","value":"pub fn compare_no_case(&Self, T) -> CompareResult","parent":{"krate":0,"index":903},"children":[],"decl_id":null,"docs":" Compares self to another value for equality\n independently of the case.","sig":null,"attributes":[{"value":"/ Compares self to another value for equality","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95188,"byte_end":95235,"line_start":720,"line_end":720,"column_start":3,"column_end":50}},{"value":"/ independently of the case.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95238,"byte_end":95268,"line_start":721,"line_end":721,"column_start":3,"column_end":33}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95271,"byte_end":95274,"line_start":722,"line_end":722,"column_start":3,"column_end":6}},{"value":"/ Warning: for `&str`, the comparison is done","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95277,"byte_end":95324,"line_start":723,"line_end":723,"column_start":3,"column_end":50}},{"value":"/ by lowercasing both strings and comparing","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95327,"byte_end":95372,"line_start":724,"line_end":724,"column_start":3,"column_end":48}},{"value":"/ the result. This is a temporary solution until","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95375,"byte_end":95425,"line_start":725,"line_end":725,"column_start":3,"column_end":53}},{"value":"/ a better one appears","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":95428,"byte_end":95452,"line_start":726,"line_end":726,"column_start":3,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":938},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":98861,"byte_end":98870,"line_start":876,"line_end":876,"column_start":11,"column_end":20},"name":"FindToken","qualname":"::traits::FindToken","value":"FindToken<T>","parent":null,"children":[{"krate":0,"index":940}],"decl_id":null,"docs":" Look for a token in self\n","sig":null,"attributes":[{"value":"/ Look for a token in self","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":98822,"byte_end":98850,"line_start":875,"line_end":875,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":98927,"byte_end":98937,"line_start":878,"line_end":878,"column_start":6,"column_end":16},"name":"find_token","qualname":"::traits::FindToken::find_token","value":"pub fn find_token(&Self, T) -> bool","parent":{"krate":0,"index":938},"children":[],"decl_id":null,"docs":" Returns true if self contains the token\n","sig":null,"attributes":[{"value":"/ Returns true if self contains the token","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":98878,"byte_end":98921,"line_start":877,"line_end":877,"column_start":3,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":963},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":99793,"byte_end":99806,"line_start":918,"line_end":918,"column_start":11,"column_end":24},"name":"FindSubstring","qualname":"::traits::FindSubstring","value":"FindSubstring<T>","parent":null,"children":[{"krate":0,"index":965}],"decl_id":null,"docs":" Look for a substring in self\n","sig":null,"attributes":[{"value":"/ Look for a substring in self","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":99750,"byte_end":99782,"line_start":917,"line_end":917,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":99881,"byte_end":99895,"line_start":920,"line_end":920,"column_start":6,"column_end":20},"name":"find_substring","qualname":"::traits::FindSubstring::find_substring","value":"pub fn find_substring(&Self, T) -> Option<usize>","parent":{"krate":0,"index":963},"children":[],"decl_id":null,"docs":" Returns the byte position of the substring if it is found\n","sig":null,"attributes":[{"value":"/ Returns the byte position of the substring if it is found","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":99814,"byte_end":99875,"line_start":919,"line_end":919,"column_start":3,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":978},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101218,"byte_end":101225,"line_start":971,"line_end":971,"column_start":11,"column_end":18},"name":"ParseTo","qualname":"::traits::ParseTo","value":"ParseTo<R>","parent":null,"children":[{"krate":0,"index":980}],"decl_id":null,"docs":" Used to integrate `str`'s `parse()` method\n","sig":null,"attributes":[{"value":"/ Used to integrate `str`'s `parse()` method","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101161,"byte_end":101207,"line_start":970,"line_end":970,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101380,"byte_end":101388,"line_start":974,"line_end":974,"column_start":6,"column_end":14},"name":"parse_to","qualname":"::traits::ParseTo::parse_to","value":"pub fn parse_to(&Self) -> Option<R>","parent":{"krate":0,"index":978},"children":[],"decl_id":null,"docs":" Succeeds if `parse()` succeeded. The byte slice implementation\n will first convert it to a `&str`, then apply the `parse()` function\n","sig":null,"attributes":[{"value":"/ Succeeds if `parse()` succeeded. The byte slice implementation","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101233,"byte_end":101299,"line_start":972,"line_end":972,"column_start":3,"column_end":69}},{"value":"/ will first convert it to a `&str`, then apply the `parse()` function","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101302,"byte_end":101374,"line_start":973,"line_end":973,"column_start":3,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":990},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101834,"byte_end":101839,"line_start":994,"line_end":994,"column_start":11,"column_end":16},"name":"Slice","qualname":"::traits::Slice","value":"Slice<R>","parent":null,"children":[{"krate":0,"index":992}],"decl_id":null,"docs":" Slicing operations using ranges.","sig":null,"attributes":[{"value":"/ Slicing operations using ranges.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101668,"byte_end":101704,"line_start":989,"line_end":989,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101705,"byte_end":101708,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ This trait is loosely based on","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101709,"byte_end":101743,"line_start":991,"line_end":991,"column_start":1,"column_end":35}},{"value":"/ `Index`, but can actually return","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101744,"byte_end":101780,"line_start":992,"line_end":992,"column_start":1,"column_end":37}},{"value":"/ something else than a `&[T]` or `&str`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101781,"byte_end":101823,"line_start":993,"line_end":993,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101900,"byte_end":101905,"line_start":996,"line_end":996,"column_start":6,"column_end":11},"name":"slice","qualname":"::traits::Slice::slice","value":"pub fn slice(&Self, R) -> Self","parent":{"krate":0,"index":990},"children":[],"decl_id":null,"docs":" Slices self according to the range argument\n","sig":null,"attributes":[{"value":"/ Slices self according to the range argument","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":101847,"byte_end":101894,"line_start":995,"line_end":995,"column_start":3,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":997},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":105119,"byte_end":105129,"line_start":1126,"line_end":1126,"column_start":11,"column_end":21},"name":"ExtendInto","qualname":"::traits::ExtendInto","value":"ExtendInto","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001}],"decl_id":null,"docs":" Abstracts something which can extend an `Extend`.\n Used to build modified input slices in `escaped_transform`\n","sig":null,"attributes":[{"value":"/ Abstracts something which can extend an `Extend`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":104992,"byte_end":105045,"line_start":1124,"line_end":1124,"column_start":1,"column_end":54}},{"value":"/ Used to build modified input slices in `escaped_transform`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":105046,"byte_end":105108,"line_start":1125,"line_end":1125,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":998},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":105262,"byte_end":105266,"line_start":1130,"line_end":1130,"column_start":8,"column_end":12},"name":"Item","qualname":"::traits::ExtendInto::Item","value":"type Item;","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":" The current input type is a sequence of that `Item` type.","sig":null,"attributes":[{"value":"/ The current input type is a sequence of that `Item` type.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":105134,"byte_end":105195,"line_start":1127,"line_end":1127,"column_start":3,"column_end":64}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":105198,"byte_end":105201,"line_start":1128,"line_end":1128,"column_start":3,"column_end":6}},{"value":"/ Example: `u8` for `&[u8]` or `char` for `&str`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":105204,"byte_end":105254,"line_start":1129,"line_end":1129,"column_start":3,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":999},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":105313,"byte_end":105321,"line_start":1133,"line_end":1133,"column_start":8,"column_end":16},"name":"Extender","qualname":"::traits::ExtendInto::Extender","value":"type Extender;","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":" The type that will be produced\n","sig":null,"attributes":[{"value":"/ The type that will be produced","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":105271,"byte_end":105305,"line_start":1132,"line_end":1132,"column_start":3,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":105377,"byte_end":105388,"line_start":1136,"line_end":1136,"column_start":6,"column_end":17},"name":"new_builder","qualname":"::traits::ExtendInto::new_builder","value":"pub fn new_builder(&Self) -> Self::Extender","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":" Create a new `Extend` of the correct type\n","sig":null,"attributes":[{"value":"/ Create a new `Extend` of the correct type","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":105326,"byte_end":105371,"line_start":1135,"line_end":1135,"column_start":3,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":105467,"byte_end":105478,"line_start":1138,"line_end":1138,"column_start":6,"column_end":17},"name":"extend_into","qualname":"::traits::ExtendInto::extend_into","value":"pub fn extend_into(&Self, &mut Self::Extender)","parent":{"krate":0,"index":997},"children":[],"decl_id":null,"docs":" Accumulate the input into an accumulator\n","sig":null,"attributes":[{"value":"/ Accumulate the input into an accumulator","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":105417,"byte_end":105461,"line_start":1137,"line_end":1137,"column_start":3,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":1027},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":107123,"byte_end":107130,"line_start":1222,"line_end":1222,"column_start":11,"column_end":18},"name":"ToUsize","qualname":"::traits::ToUsize","value":"ToUsize","parent":null,"children":[{"krate":0,"index":1028}],"decl_id":null,"docs":" Helper trait to convert numbers to usize.","sig":null,"attributes":[{"value":"/ Helper trait to convert numbers to usize.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":106817,"byte_end":106862,"line_start":1216,"line_end":1216,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":106863,"byte_end":106866,"line_start":1217,"line_end":1217,"column_start":1,"column_end":4}},{"value":"/ By default, usize implements `From<u8>` and `From<u16>` but not","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":106867,"byte_end":106934,"line_start":1218,"line_end":1218,"column_start":1,"column_end":68}},{"value":"/ `From<u32>` and `From<u64>` because that would be invalid on some","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":106935,"byte_end":107004,"line_start":1219,"line_end":1219,"column_start":1,"column_end":70}},{"value":"/ platforms. This trait implements the conversion for platforms","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":107005,"byte_end":107070,"line_start":1220,"line_end":1220,"column_start":1,"column_end":66}},{"value":"/ with 32 and 64 bits pointer platforms","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":107071,"byte_end":107112,"line_start":1221,"line_end":1221,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":107167,"byte_end":107175,"line_start":1224,"line_end":1224,"column_start":6,"column_end":14},"name":"to_usize","qualname":"::traits::ToUsize::to_usize","value":"pub fn to_usize(&Self) -> usize","parent":{"krate":0,"index":1027},"children":[],"decl_id":null,"docs":" converts self to usize\n","sig":null,"attributes":[{"value":"/ converts self to usize","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":107135,"byte_end":107161,"line_start":1223,"line_end":1223,"column_start":3,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":1039},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":107842,"byte_end":107854,"line_start":1265,"line_end":1265,"column_start":11,"column_end":23},"name":"ErrorConvert","qualname":"::traits::ErrorConvert","value":"ErrorConvert<E>","parent":null,"children":[{"krate":0,"index":1041}],"decl_id":null,"docs":" Equivalent From implementation to avoid orphan rules in bits parsers\n","sig":null,"attributes":[{"value":"/ Equivalent From implementation to avoid orphan rules in bits parsers","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":107759,"byte_end":107831,"line_start":1264,"line_end":1264,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":107903,"byte_end":107910,"line_start":1267,"line_end":1267,"column_start":6,"column_end":13},"name":"convert","qualname":"::traits::ErrorConvert::convert","value":"pub fn convert(Self) -> E","parent":{"krate":0,"index":1039},"children":[],"decl_id":null,"docs":" Transform to another error type\n","sig":null,"attributes":[{"value":"/ Transform to another error type","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":107862,"byte_end":107897,"line_start":1266,"line_end":1266,"column_start":3,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":1065},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":109437,"byte_end":109447,"line_start":1324,"line_end":1324,"column_start":11,"column_end":21},"name":"HexDisplay","qualname":"::traits::HexDisplay","value":"HexDisplay","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"decl_id":null,"docs":" Helper trait to show a byte slice as a hex dump\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":109292,"byte_end":109315,"line_start":1321,"line_end":1321,"column_start":1,"column_end":24}},{"value":"/ Helper trait to show a byte slice as a hex dump","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":109375,"byte_end":109426,"line_start":1323,"line_end":1323,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":109541,"byte_end":109547,"line_start":1327,"line_end":1327,"column_start":6,"column_end":12},"name":"to_hex","qualname":"::traits::HexDisplay::to_hex","value":"pub fn to_hex(&Self, usize) -> String","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump, returning the owned\n `String`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a hex dump, returning the owned","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":109452,"byte_end":109519,"line_start":1325,"line_end":1325,"column_start":3,"column_end":70}},{"value":"/ `String`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":109522,"byte_end":109535,"line_start":1326,"line_end":1326,"column_start":3,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":109705,"byte_end":109716,"line_start":1331,"line_end":1331,"column_start":6,"column_end":17},"name":"to_hex_from","qualname":"::traits::HexDisplay::to_hex_from","value":"pub fn to_hex_from(&Self, usize, usize) -> String","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex dump beginning at `from` address, returning the owned\n `String`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a hex dump beginning at `from` address, returning the owned","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":109588,"byte_end":109683,"line_start":1329,"line_end":1329,"column_start":3,"column_end":98}},{"value":"/ `String`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":109686,"byte_end":109699,"line_start":1330,"line_end":1330,"column_start":3,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":1075},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"branch","qualname":"::branch","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1098},{"krate":0,"index":1105},{"krate":0,"index":1110},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":4511},{"krate":0,"index":4518},{"krate":0,"index":4526},{"krate":0,"index":4535},{"krate":0,"index":4545},{"krate":0,"index":4556},{"krate":0,"index":4568},{"krate":0,"index":4581},{"krate":0,"index":4595},{"krate":0,"index":4610},{"krate":0,"index":4626},{"krate":0,"index":4643},{"krate":0,"index":4661},{"krate":0,"index":4680},{"krate":0,"index":4700},{"krate":0,"index":4721},{"krate":0,"index":4743},{"krate":0,"index":4766},{"krate":0,"index":4790},{"krate":0,"index":4815},{"krate":0,"index":1120},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":4841},{"krate":0,"index":4849},{"krate":0,"index":4859},{"krate":0,"index":4871},{"krate":0,"index":4885},{"krate":0,"index":4901},{"krate":0,"index":4919},{"krate":0,"index":4939},{"krate":0,"index":4961},{"krate":0,"index":4985},{"krate":0,"index":5011},{"krate":0,"index":5039},{"krate":0,"index":5069},{"krate":0,"index":5101},{"krate":0,"index":5135},{"krate":0,"index":5171},{"krate":0,"index":5209},{"krate":0,"index":5249},{"krate":0,"index":5291},{"krate":0,"index":5335}],"decl_id":null,"docs":" Choice combinators\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15520,"byte_end":15532,"line_start":451,"line_end":451,"column_start":1,"column_end":13}},{"value":"/ Choice combinators","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":111831,"byte_end":111853,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":1093},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113560,"byte_end":113563,"line_start":37,"line_end":37,"column_start":11,"column_end":14},"name":"Alt","qualname":"::branch::Alt","value":"Alt<I, O, E>","parent":null,"children":[{"krate":0,"index":1097}],"decl_id":null,"docs":" Helper trait for the [alt()] combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the [alt()] combinator.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113439,"byte_end":113483,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113484,"byte_end":113487,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of up to 21 elements","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113488,"byte_end":113549,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113671,"byte_end":113677,"line_start":39,"line_end":39,"column_start":6,"column_end":12},"name":"choice","qualname":"::branch::Alt::choice","value":"pub fn choice(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" Tests each parser in the tuple and returns the result of the first one that succeeds\n","sig":null,"attributes":[{"value":"/ Tests each parser in the tuple and returns the result of the first one that succeeds","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113577,"byte_end":113665,"line_start":38,"line_end":38,"column_start":3,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":1098},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114862,"byte_end":114865,"line_start":71,"line_end":71,"column_start":8,"column_end":11},"name":"alt","qualname":"::branch::alt","value":"pub fn alt<I: Clone, O, E: ParseError<I>, List: Alt<I, O, E>>(List)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Tests a list of parsers one by one until one succeeds.","sig":null,"attributes":[{"value":"/ Tests a list of parsers one by one until one succeeds.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113723,"byte_end":113781,"line_start":42,"line_end":42,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113782,"byte_end":113785,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ It takes as argument a tuple of parsers. There is a maximum of 21","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113786,"byte_end":113855,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/ parsers. If you need more, it is possible to nest them in other `alt` calls,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113856,"byte_end":113936,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ like this: `alt(parser_a, alt(parser_b, parser_c))`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113937,"byte_end":113992,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113993,"byte_end":113996,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":113997,"byte_end":114008,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # use nom::error_position;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114009,"byte_end":114039,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/ # use nom::{Err,error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114040,"byte_end":114095,"line_start":50,"line_end":50,"column_start":1,"column_end":56}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114096,"byte_end":114147,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114148,"byte_end":114173,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114174,"byte_end":114191,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114192,"byte_end":114243,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/   alt((alpha1, digit1))(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114244,"byte_end":114278,"line_start":55,"line_end":55,"column_start":1,"column_end":35}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114279,"byte_end":114285,"line_start":56,"line_end":56,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114286,"byte_end":114289,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // the first parser, alpha1, recognizes the input","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114290,"byte_end":114343,"line_start":58,"line_end":58,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114344,"byte_end":114391,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114392,"byte_end":114395,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // the first parser returns an error, so alt tries the second one","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114396,"byte_end":114465,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"123456\"), Ok((\"\", \"123456\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114466,"byte_end":114519,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114520,"byte_end":114523,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // both parsers failed, and with the default error type, alt will return the last error","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114524,"byte_end":114615,"line_start":64,"line_end":64,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\" \"), Err(Err::Error(error_position!(\" \", ErrorKind::Digit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114616,"byte_end":114701,"line_start":65,"line_end":65,"column_start":1,"column_end":86}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114702,"byte_end":114709,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114710,"byte_end":114717,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114718,"byte_end":114721,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ With a custom error type, it is possible to have alt return the error of the parser","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114722,"byte_end":114809,"line_start":69,"line_end":69,"column_start":1,"column_end":88}},{"value":"/ that went the farthest in the input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":114810,"byte_end":114854,"line_start":70,"line_end":70,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":1105},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115132,"byte_end":115143,"line_start":80,"line_end":80,"column_start":11,"column_end":22},"name":"Permutation","qualname":"::branch::Permutation","value":"Permutation<I, O, E>","parent":null,"children":[{"krate":0,"index":1109}],"decl_id":null,"docs":" Helper trait for the [permutation()] combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the [permutation()] combinator.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115003,"byte_end":115055,"line_start":77,"line_end":77,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115056,"byte_end":115059,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of up to 21 elements","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115060,"byte_end":115121,"line_start":79,"line_end":79,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115250,"byte_end":115261,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"name":"permutation","qualname":"::branch::Permutation::permutation","value":"pub fn permutation(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1105},"children":[],"decl_id":null,"docs":" Tries to apply all parsers in the tuple in various orders until all of them succeed\n","sig":null,"attributes":[{"value":"/ Tries to apply all parsers in the tuple in various orders until all of them succeed","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115157,"byte_end":115244,"line_start":81,"line_end":81,"column_start":3,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1110},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116941,"byte_end":116952,"line_start":130,"line_end":130,"column_start":8,"column_end":19},"name":"permutation","qualname":"::branch::permutation","value":"pub fn permutation<I: Clone, O, E: ParseError<I>,\n                   List: Permutation<I, O, E>>(List) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Applies a list of parsers in any order.","sig":null,"attributes":[{"value":"/ Applies a list of parsers in any order.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115307,"byte_end":115350,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115351,"byte_end":115354,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Permutation will succeed if all of the child parsers succeeded.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115355,"byte_end":115422,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/ It takes as argument a tuple of parsers, and returns a","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115423,"byte_end":115481,"line_start":88,"line_end":88,"column_start":1,"column_end":59}},{"value":"/ tuple of the parser results.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115482,"byte_end":115514,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115515,"byte_end":115518,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115519,"byte_end":115530,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err,error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115531,"byte_end":115595,"line_start":92,"line_end":92,"column_start":1,"column_end":65}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115596,"byte_end":115647,"line_start":93,"line_end":93,"column_start":1,"column_end":52}},{"value":"/ use nom::branch::permutation;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115648,"byte_end":115681,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115682,"byte_end":115699,"line_start":95,"line_end":95,"column_start":1,"column_end":18}},{"value":"/ fn parser(input: &str) -> IResult<&str, (&str, &str)> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115700,"byte_end":115759,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/   permutation((alpha1, digit1))(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115760,"byte_end":115802,"line_start":97,"line_end":97,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115803,"byte_end":115808,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115809,"byte_end":115812,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // permutation recognizes alphabetic characters then digit","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115813,"byte_end":115875,"line_start":100,"line_end":100,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"\", (\"abc\", \"123\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115876,"byte_end":115935,"line_start":101,"line_end":101,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115936,"byte_end":115939,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ // but also in inverse order","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115940,"byte_end":115972,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(parser(\"123abc\"), Ok((\"\", (\"abc\", \"123\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":115973,"byte_end":116032,"line_start":104,"line_end":104,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116033,"byte_end":116036,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ // it will fail if one of the parsers failed","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116037,"byte_end":116085,"line_start":106,"line_end":106,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(parser(\"abc;\"), Err(Err::Error(Error::new(\";\", ErrorKind::Digit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116086,"byte_end":116169,"line_start":107,"line_end":107,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116170,"byte_end":116177,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116178,"byte_end":116185,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116186,"byte_end":116189,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ The parsers are applied greedily: if there are multiple unapplied parsers","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116190,"byte_end":116267,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ that could parse the next slice of input, the first one is used.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116268,"byte_end":116336,"line_start":112,"line_end":112,"column_start":1,"column_end":69}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116337,"byte_end":116348,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116349,"byte_end":116406,"line_start":114,"line_end":114,"column_start":1,"column_end":58}},{"value":"/ use nom::branch::permutation;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116407,"byte_end":116440,"line_start":115,"line_end":115,"column_start":1,"column_end":34}},{"value":"/ use nom::character::complete::{anychar, char};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116441,"byte_end":116491,"line_start":116,"line_end":116,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116492,"byte_end":116495,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, (char, char)> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116496,"byte_end":116555,"line_start":118,"line_end":118,"column_start":1,"column_end":60}},{"value":"/   permutation((anychar, char('a')))(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116556,"byte_end":116602,"line_start":119,"line_end":119,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116603,"byte_end":116608,"line_start":120,"line_end":120,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116609,"byte_end":116612,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ // anychar parses 'b', then char('a') parses 'a'","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116613,"byte_end":116665,"line_start":122,"line_end":122,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"ba\"), Ok((\"\", ('b', 'a'))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116666,"byte_end":116717,"line_start":123,"line_end":123,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116718,"byte_end":116721,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ // anychar parses 'a', then char('a') fails on 'b',","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116722,"byte_end":116777,"line_start":125,"line_end":125,"column_start":1,"column_end":56}},{"value":"/ // even though char('a') followed by anychar would succeed","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116778,"byte_end":116840,"line_start":126,"line_end":126,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(parser(\"ab\"), Err(Err::Error(Error::new(\"b\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116841,"byte_end":116921,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116922,"byte_end":116929,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/branch/mod.rs","byte_start":116930,"byte_end":116933,"line_start":129,"line_end":129,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1129},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"multi","qualname":"::multi","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1133},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1156},{"krate":0,"index":1159},{"krate":0,"index":1162},{"krate":0,"index":1165},{"krate":0,"index":1172},{"krate":0,"index":1179},{"krate":0,"index":1188},{"krate":0,"index":1197},{"krate":0,"index":1206},{"krate":0,"index":1213},{"krate":0,"index":1220},{"krate":0,"index":1227},{"krate":0,"index":1234},{"krate":0,"index":1242},{"krate":0,"index":1252},{"krate":0,"index":1262},{"krate":0,"index":1272},{"krate":0,"index":1279},{"krate":0,"index":1288}],"decl_id":null,"docs":" Combinators applying their child parser multiple times\n","sig":null,"attributes":[{"value":"/ Combinators applying their child parser multiple times","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":121443,"byte_end":121501,"line_start":1,"line_end":1,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1165},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122653,"byte_end":122658,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"many0","qualname":"::multi::many0","value":"pub fn many0<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone + InputLength,\nF: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the results in a `Vec`.","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":121781,"byte_end":121827,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ and returns the results in a `Vec`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":121828,"byte_end":121867,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":121868,"byte_end":121871,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":121872,"byte_end":121887,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":121888,"byte_end":121918,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":121919,"byte_end":121922,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ *Note*: if the parser passed to `many0` accepts empty inputs","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":121923,"byte_end":121987,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ (like `alpha0` or `digit0`), `many0` will return an error,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":121988,"byte_end":122050,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ to prevent going into an infinite loop","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122051,"byte_end":122093,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122094,"byte_end":122097,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122098,"byte_end":122109,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122110,"byte_end":122166,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122167,"byte_end":122193,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122194,"byte_end":122228,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122229,"byte_end":122232,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122233,"byte_end":122285,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/   many0(tag(\"abc\"))(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122286,"byte_end":122312,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122313,"byte_end":122318,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122319,"byte_end":122322,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122323,"byte_end":122386,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122387,"byte_end":122446,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122447,"byte_end":122504,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122505,"byte_end":122550,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122551,"byte_end":122558,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":122559,"byte_end":122584,"line_start":38,"line_end":38,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1172},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":124346,"byte_end":124351,"line_start":95,"line_end":95,"column_start":8,"column_end":13},"name":"many1","qualname":"::multi::many1","value":"pub fn many1<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone + InputLength,\nF: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser until it fails and\n returns the results in a `Vec`. Fails if\n the embedded parser does not produce at least\n one result.","sig":null,"attributes":[{"value":"/ Runs the embedded parser until it fails and","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123330,"byte_end":123377,"line_start":67,"line_end":67,"column_start":1,"column_end":48}},{"value":"/ returns the results in a `Vec`. Fails if","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123378,"byte_end":123422,"line_start":68,"line_end":68,"column_start":1,"column_end":45}},{"value":"/ the embedded parser does not produce at least","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123423,"byte_end":123472,"line_start":69,"line_end":69,"column_start":1,"column_end":50}},{"value":"/ one result.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123473,"byte_end":123488,"line_start":70,"line_end":70,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123489,"byte_end":123492,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123493,"byte_end":123508,"line_start":72,"line_end":72,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123509,"byte_end":123539,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123540,"byte_end":123543,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ *Note*: If the parser passed to `many1` accepts empty inputs","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123544,"byte_end":123608,"line_start":75,"line_end":75,"column_start":1,"column_end":65}},{"value":"/ (like `alpha0` or `digit0`), `many1` will return an error,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123609,"byte_end":123671,"line_start":76,"line_end":76,"column_start":1,"column_end":63}},{"value":"/ to prevent going into an infinite loop.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123672,"byte_end":123715,"line_start":77,"line_end":77,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123716,"byte_end":123719,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123720,"byte_end":123731,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123732,"byte_end":123797,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123798,"byte_end":123824,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123825,"byte_end":123859,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123860,"byte_end":123863,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123864,"byte_end":123916,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/   many1(tag(\"abc\"))(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123917,"byte_end":123943,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123944,"byte_end":123949,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123950,"byte_end":123953,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":123954,"byte_end":124017,"line_start":88,"line_end":88,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":124018,"byte_end":124077,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":124078,"byte_end":124166,"line_start":90,"line_end":90,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":124167,"byte_end":124243,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":124244,"byte_end":124251,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":124252,"byte_end":124277,"line_start":93,"line_end":93,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1179},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":126179,"byte_end":126188,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"many_till","qualname":"::multi::many_till","value":"pub fn many_till<I, O, P, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone +\nInputLength, F: Parser<I, O, E>, G: Parser<I, P, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Applies the parser `f` until the parser `g` produces\n a result. Returns a pair consisting of the results of\n `f` in a `Vec` and the result of `g`.\n ```rust\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::many_till;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies the parser `f` until the parser `g` produces","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125245,"byte_end":125301,"line_start":129,"line_end":129,"column_start":1,"column_end":57}},{"value":"/ a result. Returns a pair consisting of the results of","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125302,"byte_end":125359,"line_start":130,"line_end":130,"column_start":1,"column_end":58}},{"value":"/ `f` in a `Vec` and the result of `g`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125360,"byte_end":125401,"line_start":131,"line_end":131,"column_start":1,"column_end":42}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125402,"byte_end":125413,"line_start":132,"line_end":132,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125414,"byte_end":125479,"line_start":133,"line_end":133,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many_till;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125480,"byte_end":125510,"line_start":134,"line_end":134,"column_start":1,"column_end":31}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125511,"byte_end":125545,"line_start":135,"line_end":135,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125546,"byte_end":125549,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, (Vec<&str>, &str)> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125550,"byte_end":125610,"line_start":137,"line_end":137,"column_start":1,"column_end":61}},{"value":"/   many_till(tag(\"abc\"), tag(\"end\"))(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125611,"byte_end":125653,"line_start":138,"line_end":138,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125654,"byte_end":125660,"line_start":139,"line_end":139,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125661,"byte_end":125664,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabcend\"), Ok((\"\", (vec![\"abc\", \"abc\"], \"end\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125665,"byte_end":125740,"line_start":141,"line_end":141,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(\"abc123end\"), Err(Err::Error(Error::new(\"123end\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125741,"byte_end":125832,"line_start":142,"line_end":142,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"123123end\"), Err(Err::Error(Error::new(\"123123end\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125833,"byte_end":125927,"line_start":143,"line_end":143,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":125928,"byte_end":126004,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcendefg\"), Ok((\"efg\", (vec![\"abc\"], \"end\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":126005,"byte_end":126076,"line_start":145,"line_end":145,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":126077,"byte_end":126084,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":126085,"byte_end":126110,"line_start":147,"line_end":147,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1188},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":128018,"byte_end":128033,"line_start":209,"line_end":209,"column_start":8,"column_end":23},"name":"separated_list0","qualname":"::multi::separated_list0","value":"pub fn separated_list0<I, O, O2, E, F, G>(G, F) -> /*impl Trait*/ where\nI: Clone + InputLength, F: Parser<I, O, E>, G: Parser<I, O2, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Alternates between two parsers to produce\n a list of elements.\n # Arguments\n * `sep` Parses the separator between list elements.\n * `f` Parses the elements of the list.","sig":null,"attributes":[{"value":"/ Alternates between two parsers to produce","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127162,"byte_end":127207,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ a list of elements.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127208,"byte_end":127231,"line_start":187,"line_end":187,"column_start":1,"column_end":24}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127232,"byte_end":127247,"line_start":188,"line_end":188,"column_start":1,"column_end":16}},{"value":"/ * `sep` Parses the separator between list elements.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127248,"byte_end":127303,"line_start":189,"line_end":189,"column_start":1,"column_end":56}},{"value":"/ * `f` Parses the elements of the list.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127304,"byte_end":127346,"line_start":190,"line_end":190,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127347,"byte_end":127350,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127351,"byte_end":127362,"line_start":192,"line_end":192,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127363,"byte_end":127419,"line_start":193,"line_end":193,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::separated_list0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127420,"byte_end":127456,"line_start":194,"line_end":194,"column_start":1,"column_end":37}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127457,"byte_end":127491,"line_start":195,"line_end":195,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127492,"byte_end":127495,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127496,"byte_end":127548,"line_start":197,"line_end":197,"column_start":1,"column_end":53}},{"value":"/   separated_list0(tag(\"|\"), tag(\"abc\"))(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127549,"byte_end":127595,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127596,"byte_end":127601,"line_start":199,"line_end":199,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127602,"byte_end":127605,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|abc|abc\"), Ok((\"\", vec![\"abc\", \"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127606,"byte_end":127681,"line_start":201,"line_end":201,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(\"abc123abc\"), Ok((\"123abc\", vec![\"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127682,"byte_end":127747,"line_start":202,"line_end":202,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"abc|def\"), Ok((\"|def\", vec![\"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127748,"byte_end":127809,"line_start":203,"line_end":203,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127810,"byte_end":127855,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"def|abc\"), Ok((\"def|abc\", vec![])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127856,"byte_end":127915,"line_start":205,"line_end":205,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127916,"byte_end":127923,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":127924,"byte_end":127949,"line_start":207,"line_end":207,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1197},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":130106,"byte_end":130121,"line_start":279,"line_end":279,"column_start":8,"column_end":23},"name":"separated_list1","qualname":"::multi::separated_list1","value":"pub fn separated_list1<I, O, O2, E, F, G>(G, F) -> /*impl Trait*/ where\nI: Clone + InputLength, F: Parser<I, O, E>, G: Parser<I, O2, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Alternates between two parsers to produce\n a list of elements. Fails if the element\n parser does not produce at least one element.\n # Arguments\n * `sep` Parses the separator between list elements.\n * `f` Parses the elements of the list.\n ```rust\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::separated_list1;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Alternates between two parsers to produce","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129112,"byte_end":129157,"line_start":256,"line_end":256,"column_start":1,"column_end":46}},{"value":"/ a list of elements. Fails if the element","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129158,"byte_end":129202,"line_start":257,"line_end":257,"column_start":1,"column_end":45}},{"value":"/ parser does not produce at least one element.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129203,"byte_end":129252,"line_start":258,"line_end":258,"column_start":1,"column_end":50}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129253,"byte_end":129268,"line_start":259,"line_end":259,"column_start":1,"column_end":16}},{"value":"/ * `sep` Parses the separator between list elements.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129269,"byte_end":129324,"line_start":260,"line_end":260,"column_start":1,"column_end":56}},{"value":"/ * `f` Parses the elements of the list.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129325,"byte_end":129367,"line_start":261,"line_end":261,"column_start":1,"column_end":43}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129368,"byte_end":129379,"line_start":262,"line_end":262,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129380,"byte_end":129445,"line_start":263,"line_end":263,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::separated_list1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129446,"byte_end":129482,"line_start":264,"line_end":264,"column_start":1,"column_end":37}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129483,"byte_end":129517,"line_start":265,"line_end":265,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129518,"byte_end":129521,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129522,"byte_end":129574,"line_start":267,"line_end":267,"column_start":1,"column_end":53}},{"value":"/   separated_list1(tag(\"|\"), tag(\"abc\"))(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129575,"byte_end":129621,"line_start":268,"line_end":268,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129622,"byte_end":129627,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129628,"byte_end":129631,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|abc|abc\"), Ok((\"\", vec![\"abc\", \"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129632,"byte_end":129707,"line_start":271,"line_end":271,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(\"abc123abc\"), Ok((\"123abc\", vec![\"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129708,"byte_end":129773,"line_start":272,"line_end":272,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"abc|def\"), Ok((\"|def\", vec![\"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129774,"byte_end":129835,"line_start":273,"line_end":273,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129836,"byte_end":129912,"line_start":274,"line_end":274,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"def|abc\"), Err(Err::Error(Error::new(\"def|abc\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":129913,"byte_end":130003,"line_start":275,"line_end":275,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":130004,"byte_end":130011,"line_start":276,"line_end":276,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":130012,"byte_end":130037,"line_start":277,"line_end":277,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1206},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":132124,"byte_end":132132,"line_start":350,"line_end":350,"column_start":8,"column_end":16},"name":"many_m_n","qualname":"::multi::many_m_n","value":"pub fn many_m_n<I, O, E, F>(usize, usize, F) -> /*impl Trait*/ where\nI: Clone + InputLength, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser `n` times or until it fails\n and returns the results in a `Vec`. Fails if the\n embedded parser does not succeed at least `m` times.\n # Arguments\n * `m` The minimum number of iterations.\n * `n` The maximum number of iterations.\n * `f` The parser to apply.\n ```rust\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::many_m_n;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser `n` times or until it fails","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131182,"byte_end":131241,"line_start":326,"line_end":326,"column_start":1,"column_end":60}},{"value":"/ and returns the results in a `Vec`. Fails if the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131242,"byte_end":131294,"line_start":327,"line_end":327,"column_start":1,"column_end":53}},{"value":"/ embedded parser does not succeed at least `m` times.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131295,"byte_end":131351,"line_start":328,"line_end":328,"column_start":1,"column_end":57}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131352,"byte_end":131367,"line_start":329,"line_end":329,"column_start":1,"column_end":16}},{"value":"/ * `m` The minimum number of iterations.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131368,"byte_end":131411,"line_start":330,"line_end":330,"column_start":1,"column_end":44}},{"value":"/ * `n` The maximum number of iterations.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131412,"byte_end":131455,"line_start":331,"line_end":331,"column_start":1,"column_end":44}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131456,"byte_end":131486,"line_start":332,"line_end":332,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131487,"byte_end":131498,"line_start":333,"line_end":333,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131499,"byte_end":131555,"line_start":334,"line_end":334,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many_m_n;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131556,"byte_end":131585,"line_start":335,"line_end":335,"column_start":1,"column_end":30}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131586,"byte_end":131620,"line_start":336,"line_end":336,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131621,"byte_end":131624,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131625,"byte_end":131677,"line_start":338,"line_end":338,"column_start":1,"column_end":53}},{"value":"/   many_m_n(0, 2, tag(\"abc\"))(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131678,"byte_end":131713,"line_start":339,"line_end":339,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131714,"byte_end":131719,"line_start":340,"line_end":340,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131720,"byte_end":131723,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131724,"byte_end":131787,"line_start":342,"line_end":342,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131788,"byte_end":131847,"line_start":343,"line_end":343,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131848,"byte_end":131905,"line_start":344,"line_end":344,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131906,"byte_end":131951,"line_start":345,"line_end":345,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":131952,"byte_end":132021,"line_start":346,"line_end":346,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":132022,"byte_end":132029,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":132030,"byte_end":132055,"line_start":348,"line_end":348,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1213},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133793,"byte_end":133804,"line_start":413,"line_end":413,"column_start":8,"column_end":19},"name":"many0_count","qualname":"::multi::many0_count","value":"pub fn many0_count<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone +\nInputLength, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the number of successful iterations.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::many0_count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133207,"byte_end":133253,"line_start":395,"line_end":395,"column_start":1,"column_end":47}},{"value":"/ and returns the number of successful iterations.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133254,"byte_end":133306,"line_start":396,"line_end":396,"column_start":1,"column_end":53}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133307,"byte_end":133322,"line_start":397,"line_end":397,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133323,"byte_end":133353,"line_start":398,"line_end":398,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133354,"byte_end":133365,"line_start":399,"line_end":399,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133366,"byte_end":133422,"line_start":400,"line_end":400,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::many0_count;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133423,"byte_end":133455,"line_start":401,"line_end":401,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133456,"byte_end":133490,"line_start":402,"line_end":402,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133491,"byte_end":133494,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, usize> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133495,"byte_end":133543,"line_start":404,"line_end":404,"column_start":1,"column_end":49}},{"value":"/   many0_count(tag(\"abc\"))(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133544,"byte_end":133576,"line_start":405,"line_end":405,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133577,"byte_end":133582,"line_start":406,"line_end":406,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133583,"byte_end":133586,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", 2)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133587,"byte_end":133633,"line_start":408,"line_end":408,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", 1)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133634,"byte_end":133683,"line_start":409,"line_end":409,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", 0)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133684,"byte_end":133736,"line_start":410,"line_end":410,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", 0)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133737,"byte_end":133777,"line_start":411,"line_end":411,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":133778,"byte_end":133785,"line_start":412,"line_end":412,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1220},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":135257,"byte_end":135268,"line_start":465,"line_end":465,"column_start":8,"column_end":19},"name":"many1_count","qualname":"::multi::many1_count","value":"pub fn many1_count<I, O, E, F>(F) -> /*impl Trait*/ where I: Clone +\nInputLength, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Repeats the embedded parser until it fails\n and returns the number of successful iterations.\n Fails if the embedded parser does not succeed\n at least once.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::many1_count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Repeats the embedded parser until it fails","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134507,"byte_end":134553,"line_start":445,"line_end":445,"column_start":1,"column_end":47}},{"value":"/ and returns the number of successful iterations.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134554,"byte_end":134606,"line_start":446,"line_end":446,"column_start":1,"column_end":53}},{"value":"/ Fails if the embedded parser does not succeed","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134607,"byte_end":134656,"line_start":447,"line_end":447,"column_start":1,"column_end":50}},{"value":"/ at least once.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134657,"byte_end":134675,"line_start":448,"line_end":448,"column_start":1,"column_end":19}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134676,"byte_end":134691,"line_start":449,"line_end":449,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134692,"byte_end":134722,"line_start":450,"line_end":450,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134723,"byte_end":134734,"line_start":451,"line_end":451,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134735,"byte_end":134800,"line_start":452,"line_end":452,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::many1_count;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134801,"byte_end":134833,"line_start":453,"line_end":453,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134834,"byte_end":134868,"line_start":454,"line_end":454,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134869,"byte_end":134872,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, usize> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134873,"byte_end":134921,"line_start":456,"line_end":456,"column_start":1,"column_end":49}},{"value":"/   many1_count(tag(\"abc\"))(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134922,"byte_end":134954,"line_start":457,"line_end":457,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134955,"byte_end":134960,"line_start":458,"line_end":458,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134961,"byte_end":134964,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", 2)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":134965,"byte_end":135011,"line_start":460,"line_end":460,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", 1)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":135012,"byte_end":135061,"line_start":461,"line_end":461,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Many1Count))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":135062,"byte_end":135157,"line_start":462,"line_end":462,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Many1Count))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":135158,"byte_end":135241,"line_start":463,"line_end":463,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":135242,"byte_end":135249,"line_start":464,"line_end":464,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1227},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":137149,"byte_end":137154,"line_start":524,"line_end":524,"column_start":8,"column_end":13},"name":"count","qualname":"::multi::count","value":"pub fn count<I, O, E, F>(F, usize) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser a specified number\n of times. Returns the results in a `Vec`.\n # Arguments\n * `f` The parser to apply.\n * `count` How often to apply the parser.\n ```rust\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::count;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Runs the embedded parser a specified number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136238,"byte_end":136285,"line_start":502,"line_end":502,"column_start":1,"column_end":48}},{"value":"/ of times. Returns the results in a `Vec`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136286,"byte_end":136331,"line_start":503,"line_end":503,"column_start":1,"column_end":46}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136332,"byte_end":136347,"line_start":504,"line_end":504,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136348,"byte_end":136378,"line_start":505,"line_end":505,"column_start":1,"column_end":31}},{"value":"/ * `count` How often to apply the parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136379,"byte_end":136423,"line_start":506,"line_end":506,"column_start":1,"column_end":45}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136424,"byte_end":136435,"line_start":507,"line_end":507,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136436,"byte_end":136501,"line_start":508,"line_end":508,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::count;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136502,"byte_end":136528,"line_start":509,"line_end":509,"column_start":1,"column_end":27}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136529,"byte_end":136563,"line_start":510,"line_end":510,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136564,"byte_end":136567,"line_start":511,"line_end":511,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136568,"byte_end":136620,"line_start":512,"line_end":512,"column_start":1,"column_end":53}},{"value":"/   count(tag(\"abc\"), 2)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136621,"byte_end":136650,"line_start":513,"line_end":513,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136651,"byte_end":136656,"line_start":514,"line_end":514,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136657,"byte_end":136660,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136661,"byte_end":136724,"line_start":516,"line_end":516,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Err(Err::Error(Error::new(\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136725,"byte_end":136810,"line_start":517,"line_end":517,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136811,"byte_end":136899,"line_start":518,"line_end":518,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136900,"byte_end":136976,"line_start":519,"line_end":519,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":136977,"byte_end":137046,"line_start":520,"line_end":520,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":137047,"byte_end":137054,"line_start":521,"line_end":521,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":137055,"byte_end":137080,"line_start":522,"line_end":522,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1234},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138735,"byte_end":138739,"line_start":576,"line_end":576,"column_start":8,"column_end":12},"name":"fill","qualname":"::multi::fill","value":"pub fn fill<'a, I, O, E, F>(F, &'a mut [O]) -> /*impl Trait*/ where I: Clone +\nPartialEq, F: Fn(I) -> IResult<I, O, E> + 'a, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Runs the embedded parser repeatedly, filling the given slice with results. This parser fails if\n the input runs out before the given slice is full.\n # Arguments\n * `f` The parser to apply.\n * `buf` The slice to fill\n ```rust\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::fill;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Runs the embedded parser repeatedly, filling the given slice with results. This parser fails if","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":137797,"byte_end":137896,"line_start":554,"line_end":554,"column_start":1,"column_end":100}},{"value":"/ the input runs out before the given slice is full.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":137897,"byte_end":137951,"line_start":555,"line_end":555,"column_start":1,"column_end":55}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":137952,"byte_end":137967,"line_start":556,"line_end":556,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":137968,"byte_end":137998,"line_start":557,"line_end":557,"column_start":1,"column_end":31}},{"value":"/ * `buf` The slice to fill","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":137999,"byte_end":138028,"line_start":558,"line_end":558,"column_start":1,"column_end":30}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138029,"byte_end":138040,"line_start":559,"line_end":559,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138041,"byte_end":138106,"line_start":560,"line_end":560,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::fill;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138107,"byte_end":138132,"line_start":561,"line_end":561,"column_start":1,"column_end":26}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138133,"byte_end":138167,"line_start":562,"line_end":562,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138168,"byte_end":138171,"line_start":563,"line_end":563,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, [&str; 2]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138172,"byte_end":138224,"line_start":564,"line_end":564,"column_start":1,"column_end":53}},{"value":"/   let mut buf = [\"\", \"\"];","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138225,"byte_end":138254,"line_start":565,"line_end":565,"column_start":1,"column_end":30}},{"value":"/   let (rest, ()) = fill(tag(\"abc\"), &mut buf)(s)?;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138255,"byte_end":138309,"line_start":566,"line_end":566,"column_start":1,"column_end":55}},{"value":"/   Ok((rest, buf))","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138310,"byte_end":138331,"line_start":567,"line_end":567,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138332,"byte_end":138337,"line_start":568,"line_end":568,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138338,"byte_end":138341,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", [\"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138342,"byte_end":138401,"line_start":570,"line_end":570,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abc123\"), Err(Err::Error(Error::new(\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138402,"byte_end":138487,"line_start":571,"line_end":571,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138488,"byte_end":138576,"line_start":572,"line_end":572,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138577,"byte_end":138653,"line_start":573,"line_end":573,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", [\"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138654,"byte_end":138719,"line_start":574,"line_end":574,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":138720,"byte_end":138727,"line_start":575,"line_end":575,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1242},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":140235,"byte_end":140245,"line_start":633,"line_end":633,"column_start":8,"column_end":18},"name":"fold_many0","qualname":"::multi::fold_many0","value":"pub fn fold_many0<I, O, E, F, G, H, R>(F, H, G) -> /*impl Trait*/ where\nI: Clone + InputLength, F: Parser<I, O, E>, G: FnMut(R, O) -> R, H: FnMut() ->\nR, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser until it fails and accumulates\n the results using a given function and initial value.\n # Arguments\n * `f` The parser to apply.\n * `init` A function returning the initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::fold_many0;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser until it fails and accumulates","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139335,"byte_end":139386,"line_start":605,"line_end":605,"column_start":1,"column_end":52}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139387,"byte_end":139444,"line_start":606,"line_end":606,"column_start":1,"column_end":58}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139445,"byte_end":139460,"line_start":607,"line_end":607,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139461,"byte_end":139491,"line_start":608,"line_end":608,"column_start":1,"column_end":31}},{"value":"/ * `init` A function returning the initial value.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139492,"byte_end":139544,"line_start":609,"line_end":609,"column_start":1,"column_end":53}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139545,"byte_end":139602,"line_start":610,"line_end":610,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139603,"byte_end":139637,"line_start":611,"line_end":611,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139638,"byte_end":139649,"line_start":612,"line_end":612,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139650,"byte_end":139706,"line_start":613,"line_end":613,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::fold_many0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139707,"byte_end":139738,"line_start":614,"line_end":614,"column_start":1,"column_end":32}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139739,"byte_end":139773,"line_start":615,"line_end":615,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139774,"byte_end":139777,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139778,"byte_end":139830,"line_start":617,"line_end":617,"column_start":1,"column_end":53}},{"value":"/   fold_many0(","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139831,"byte_end":139848,"line_start":618,"line_end":618,"column_start":1,"column_end":18}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139849,"byte_end":139868,"line_start":619,"line_end":619,"column_start":1,"column_end":20}},{"value":"/     Vec::new,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139869,"byte_end":139886,"line_start":620,"line_end":620,"column_start":1,"column_end":18}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139887,"byte_end":139920,"line_start":621,"line_end":621,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139921,"byte_end":139946,"line_start":622,"line_end":622,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139947,"byte_end":139960,"line_start":623,"line_end":623,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139961,"byte_end":139970,"line_start":624,"line_end":624,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139971,"byte_end":139981,"line_start":625,"line_end":625,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139982,"byte_end":139987,"line_start":626,"line_end":626,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139988,"byte_end":139991,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":139992,"byte_end":140055,"line_start":628,"line_end":628,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":140056,"byte_end":140115,"line_start":629,"line_end":629,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":140116,"byte_end":140173,"line_start":630,"line_end":630,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":140174,"byte_end":140219,"line_start":631,"line_end":631,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":140220,"byte_end":140227,"line_start":632,"line_end":632,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":142106,"byte_end":142116,"line_start":703,"line_end":703,"column_start":8,"column_end":18},"name":"fold_many1","qualname":"::multi::fold_many1","value":"pub fn fold_many1<I, O, E, F, G, H, R>(F, H, G) -> /*impl Trait*/ where\nI: Clone + InputLength, F: Parser<I, O, E>, G: FnMut(R, O) -> R, H: FnMut() ->\nR, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser until it fails and accumulates\n the results using a given function and initial value.\n Fails if the embedded parser does not succeed at least\n once.\n # Arguments\n * `f` The parser to apply.\n * `init` A function returning the initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::multi::fold_many1;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser until it fails and accumulates","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141062,"byte_end":141113,"line_start":673,"line_end":673,"column_start":1,"column_end":52}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141114,"byte_end":141171,"line_start":674,"line_end":674,"column_start":1,"column_end":58}},{"value":"/ Fails if the embedded parser does not succeed at least","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141172,"byte_end":141230,"line_start":675,"line_end":675,"column_start":1,"column_end":59}},{"value":"/ once.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141231,"byte_end":141240,"line_start":676,"line_end":676,"column_start":1,"column_end":10}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141241,"byte_end":141256,"line_start":677,"line_end":677,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141257,"byte_end":141287,"line_start":678,"line_end":678,"column_start":1,"column_end":31}},{"value":"/ * `init` A function returning the initial value.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141288,"byte_end":141340,"line_start":679,"line_end":679,"column_start":1,"column_end":53}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141341,"byte_end":141398,"line_start":680,"line_end":680,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141399,"byte_end":141433,"line_start":681,"line_end":681,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141434,"byte_end":141445,"line_start":682,"line_end":682,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141446,"byte_end":141511,"line_start":683,"line_end":683,"column_start":1,"column_end":66}},{"value":"/ use nom::multi::fold_many1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141512,"byte_end":141543,"line_start":684,"line_end":684,"column_start":1,"column_end":32}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141544,"byte_end":141578,"line_start":685,"line_end":685,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141579,"byte_end":141582,"line_start":686,"line_end":686,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141583,"byte_end":141635,"line_start":687,"line_end":687,"column_start":1,"column_end":53}},{"value":"/   fold_many1(","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141636,"byte_end":141653,"line_start":688,"line_end":688,"column_start":1,"column_end":18}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141654,"byte_end":141673,"line_start":689,"line_end":689,"column_start":1,"column_end":20}},{"value":"/     Vec::new,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141674,"byte_end":141691,"line_start":690,"line_end":690,"column_start":1,"column_end":18}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141692,"byte_end":141725,"line_start":691,"line_end":691,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141726,"byte_end":141751,"line_start":692,"line_end":692,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141752,"byte_end":141765,"line_start":693,"line_end":693,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141766,"byte_end":141775,"line_start":694,"line_end":694,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141776,"byte_end":141786,"line_start":695,"line_end":695,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141787,"byte_end":141792,"line_start":696,"line_end":696,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141793,"byte_end":141796,"line_start":697,"line_end":697,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141797,"byte_end":141860,"line_start":698,"line_end":698,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141861,"byte_end":141920,"line_start":699,"line_end":699,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Err(Err::Error(Error::new(\"123123\", ErrorKind::Many1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":141921,"byte_end":142011,"line_start":700,"line_end":700,"column_start":1,"column_end":91}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Many1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":142012,"byte_end":142090,"line_start":701,"line_end":701,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":142091,"byte_end":142098,"line_start":702,"line_end":702,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1262},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144403,"byte_end":144416,"line_start":786,"line_end":786,"column_start":8,"column_end":21},"name":"fold_many_m_n","qualname":"::multi::fold_many_m_n","value":"pub fn fold_many_m_n<I, O, E, F, G, H, R>(usize, usize, F, H, G)\n-> /*impl Trait*/ where I: Clone + InputLength, F: Parser<I, O, E>,\nG: FnMut(R, O) -> R, H: FnMut() -> R, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Applies a parser `n` times or until it fails and accumulates\n the results using a given function and initial value.\n Fails if the embedded parser does not succeed at least `m`\n times.\n # Arguments\n * `m` The minimum number of iterations.\n * `n` The maximum number of iterations.\n * `f` The parser to apply.\n * `init` A function returning the initial value.\n * `g` The function that combines a result of `f` with\n       the current accumulator.\n ```rust\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::multi::fold_many_m_n;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Applies a parser `n` times or until it fails and accumulates","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143230,"byte_end":143294,"line_start":751,"line_end":751,"column_start":1,"column_end":65}},{"value":"/ the results using a given function and initial value.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143295,"byte_end":143352,"line_start":752,"line_end":752,"column_start":1,"column_end":58}},{"value":"/ Fails if the embedded parser does not succeed at least `m`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143353,"byte_end":143415,"line_start":753,"line_end":753,"column_start":1,"column_end":63}},{"value":"/ times.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143416,"byte_end":143426,"line_start":754,"line_end":754,"column_start":1,"column_end":11}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143427,"byte_end":143442,"line_start":755,"line_end":755,"column_start":1,"column_end":16}},{"value":"/ * `m` The minimum number of iterations.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143443,"byte_end":143486,"line_start":756,"line_end":756,"column_start":1,"column_end":44}},{"value":"/ * `n` The maximum number of iterations.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143487,"byte_end":143530,"line_start":757,"line_end":757,"column_start":1,"column_end":44}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143531,"byte_end":143561,"line_start":758,"line_end":758,"column_start":1,"column_end":31}},{"value":"/ * `init` A function returning the initial value.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143562,"byte_end":143614,"line_start":759,"line_end":759,"column_start":1,"column_end":53}},{"value":"/ * `g` The function that combines a result of `f` with","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143615,"byte_end":143672,"line_start":760,"line_end":760,"column_start":1,"column_end":58}},{"value":"/       the current accumulator.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143673,"byte_end":143707,"line_start":761,"line_end":761,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143708,"byte_end":143719,"line_start":762,"line_end":762,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143720,"byte_end":143776,"line_start":763,"line_end":763,"column_start":1,"column_end":57}},{"value":"/ use nom::multi::fold_many_m_n;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143777,"byte_end":143811,"line_start":764,"line_end":764,"column_start":1,"column_end":35}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143812,"byte_end":143846,"line_start":765,"line_end":765,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143847,"byte_end":143850,"line_start":766,"line_end":766,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, Vec<&str>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143851,"byte_end":143903,"line_start":767,"line_end":767,"column_start":1,"column_end":53}},{"value":"/   fold_many_m_n(","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143904,"byte_end":143924,"line_start":768,"line_end":768,"column_start":1,"column_end":21}},{"value":"/     0,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143925,"byte_end":143935,"line_start":769,"line_end":769,"column_start":1,"column_end":11}},{"value":"/     2,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143936,"byte_end":143946,"line_start":770,"line_end":770,"column_start":1,"column_end":11}},{"value":"/     tag(\"abc\"),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143947,"byte_end":143966,"line_start":771,"line_end":771,"column_start":1,"column_end":20}},{"value":"/     Vec::new,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143967,"byte_end":143984,"line_start":772,"line_end":772,"column_start":1,"column_end":18}},{"value":"/     |mut acc: Vec<_>, item| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":143985,"byte_end":144018,"line_start":773,"line_end":773,"column_start":1,"column_end":34}},{"value":"/       acc.push(item);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144019,"byte_end":144044,"line_start":774,"line_end":774,"column_start":1,"column_end":26}},{"value":"/       acc","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144045,"byte_end":144058,"line_start":775,"line_end":775,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144059,"byte_end":144068,"line_start":776,"line_end":776,"column_start":1,"column_end":10}},{"value":"/   )(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144069,"byte_end":144079,"line_start":777,"line_end":777,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144080,"byte_end":144085,"line_start":778,"line_end":778,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144086,"byte_end":144089,"line_start":779,"line_end":779,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcabc\"), Ok((\"\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144090,"byte_end":144153,"line_start":780,"line_end":780,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser(\"abc123\"), Ok((\"123\", vec![\"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144154,"byte_end":144213,"line_start":781,"line_end":781,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"123123\"), Ok((\"123123\", vec![])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144214,"byte_end":144271,"line_start":782,"line_end":782,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", vec![])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144272,"byte_end":144317,"line_start":783,"line_end":783,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"abcabcabc\"), Ok((\"abc\", vec![\"abc\", \"abc\"])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144318,"byte_end":144387,"line_start":784,"line_end":784,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":144388,"byte_end":144395,"line_start":785,"line_end":785,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1272},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146198,"byte_end":146209,"line_start":853,"line_end":853,"column_start":8,"column_end":19},"name":"length_data","qualname":"::multi::length_data","value":"pub fn length_data<I, N, E, F>(F) -> /*impl Trait*/ where I: InputLength +\nInputTake, N: ToUsize, F: Parser<I, N, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the parser and returns a\n subslice of the input of that size.\n If the parser returns `Incomplete`,\n `length_data` will return an error.\n # Arguments\n * `f` The parser to apply.\n ```rust\n # use nom::{Err, error::ErrorKind, Needed, IResult};\n use nom::number::complete::be_u16;\n use nom::multi::length_data;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Gets a number from the parser and returns a","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145547,"byte_end":145594,"line_start":834,"line_end":834,"column_start":1,"column_end":48}},{"value":"/ subslice of the input of that size.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145595,"byte_end":145634,"line_start":835,"line_end":835,"column_start":1,"column_end":40}},{"value":"/ If the parser returns `Incomplete`,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145635,"byte_end":145674,"line_start":836,"line_end":836,"column_start":1,"column_end":40}},{"value":"/ `length_data` will return an error.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145675,"byte_end":145714,"line_start":837,"line_end":837,"column_start":1,"column_end":40}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145715,"byte_end":145730,"line_start":838,"line_end":838,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145731,"byte_end":145761,"line_start":839,"line_end":839,"column_start":1,"column_end":31}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145762,"byte_end":145773,"line_start":840,"line_end":840,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145774,"byte_end":145830,"line_start":841,"line_end":841,"column_start":1,"column_end":57}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145831,"byte_end":145869,"line_start":842,"line_end":842,"column_start":1,"column_end":39}},{"value":"/ use nom::multi::length_data;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145870,"byte_end":145902,"line_start":843,"line_end":843,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145903,"byte_end":145937,"line_start":844,"line_end":844,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145938,"byte_end":145941,"line_start":845,"line_end":845,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145942,"byte_end":145992,"line_start":846,"line_end":846,"column_start":1,"column_end":51}},{"value":"/   length_data(be_u16)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":145993,"byte_end":146021,"line_start":847,"line_end":847,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146022,"byte_end":146027,"line_start":848,"line_end":848,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146028,"byte_end":146031,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03abcefg\"), Ok((&b\"efg\"[..], &b\"abc\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146032,"byte_end":146106,"line_start":850,"line_end":850,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03a\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146107,"byte_end":146182,"line_start":851,"line_end":851,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146183,"byte_end":146190,"line_start":852,"line_end":852,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1279},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147557,"byte_end":147569,"line_start":898,"line_end":898,"column_start":8,"column_end":20},"name":"length_value","qualname":"::multi::length_value","value":"pub fn length_value<I, O, N, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone +\nInputLength + InputTake, N: ToUsize, F: Parser<I, N, E>, G: Parser<I, O, E>,\nE: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the first parser,\n takes a subslice of the input of that size,\n then applies the second parser on that subslice.\n If the second parser returns `Incomplete`,\n `length_value` will return an error.\n # Arguments\n * `f` The parser to apply.\n * `g` The parser to apply on the subslice.\n ```rust\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::number::complete::be_u16;\n use nom::multi::length_value;\n use nom::bytes::complete::tag;","sig":null,"attributes":[{"value":"/ Gets a number from the first parser,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146673,"byte_end":146713,"line_start":876,"line_end":876,"column_start":1,"column_end":41}},{"value":"/ takes a subslice of the input of that size,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146714,"byte_end":146761,"line_start":877,"line_end":877,"column_start":1,"column_end":48}},{"value":"/ then applies the second parser on that subslice.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146762,"byte_end":146814,"line_start":878,"line_end":878,"column_start":1,"column_end":53}},{"value":"/ If the second parser returns `Incomplete`,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146815,"byte_end":146861,"line_start":879,"line_end":879,"column_start":1,"column_end":47}},{"value":"/ `length_value` will return an error.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146862,"byte_end":146902,"line_start":880,"line_end":880,"column_start":1,"column_end":41}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146903,"byte_end":146918,"line_start":881,"line_end":881,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146919,"byte_end":146949,"line_start":882,"line_end":882,"column_start":1,"column_end":31}},{"value":"/ * `g` The parser to apply on the subslice.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146950,"byte_end":146996,"line_start":883,"line_end":883,"column_start":1,"column_end":47}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":146997,"byte_end":147008,"line_start":884,"line_end":884,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147009,"byte_end":147074,"line_start":885,"line_end":885,"column_start":1,"column_end":66}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147075,"byte_end":147113,"line_start":886,"line_end":886,"column_start":1,"column_end":39}},{"value":"/ use nom::multi::length_value;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147114,"byte_end":147147,"line_start":887,"line_end":887,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147148,"byte_end":147182,"line_start":888,"line_end":888,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147183,"byte_end":147186,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147187,"byte_end":147237,"line_start":890,"line_end":890,"column_start":1,"column_end":51}},{"value":"/   length_value(be_u16, tag(\"abc\"))(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147238,"byte_end":147279,"line_start":891,"line_end":891,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147280,"byte_end":147285,"line_start":892,"line_end":892,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147286,"byte_end":147289,"line_start":893,"line_end":893,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03abcefg\"), Ok((&b\"efg\"[..], &b\"abc\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147290,"byte_end":147364,"line_start":894,"line_end":894,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03123123\"), Err(Err::Error(Error::new(&b\"123\"[..], ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147365,"byte_end":147465,"line_start":895,"line_end":895,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(b\"\\x00\\x03a\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147466,"byte_end":147541,"line_start":896,"line_end":896,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":147542,"byte_end":147549,"line_start":897,"line_end":897,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1288},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":149132,"byte_end":149144,"line_start":950,"line_end":950,"column_start":8,"column_end":20},"name":"length_count","qualname":"::multi::length_count","value":"pub fn length_count<I, O, N, E, F, G>(F, G) -> /*impl Trait*/ where I: Clone,\nN: ToUsize, F: Parser<I, N, E>, G: Parser<I, O, E>, E: ParseError<I>","parent":null,"children":[],"decl_id":null,"docs":" Gets a number from the first parser,\n then applies the second parser that many times.\n # Arguments\n * `f` The parser to apply to obtain the count.\n * `g` The parser to apply repeatedly.\n ```rust\n # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};\n use nom::number::complete::u8;\n use nom::multi::length_count;\n use nom::bytes::complete::tag;\n use nom::combinator::map;","sig":null,"attributes":[{"value":"/ Gets a number from the first parser,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148292,"byte_end":148332,"line_start":927,"line_end":927,"column_start":1,"column_end":41}},{"value":"/ then applies the second parser that many times.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148333,"byte_end":148384,"line_start":928,"line_end":928,"column_start":1,"column_end":52}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148385,"byte_end":148400,"line_start":929,"line_end":929,"column_start":1,"column_end":16}},{"value":"/ * `f` The parser to apply to obtain the count.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148401,"byte_end":148451,"line_start":930,"line_end":930,"column_start":1,"column_end":51}},{"value":"/ * `g` The parser to apply repeatedly.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148452,"byte_end":148493,"line_start":931,"line_end":931,"column_start":1,"column_end":42}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148494,"byte_end":148505,"line_start":932,"line_end":932,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148506,"byte_end":148571,"line_start":933,"line_end":933,"column_start":1,"column_end":66}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148572,"byte_end":148606,"line_start":934,"line_end":934,"column_start":1,"column_end":35}},{"value":"/ use nom::multi::length_count;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148607,"byte_end":148640,"line_start":935,"line_end":935,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148641,"byte_end":148675,"line_start":936,"line_end":936,"column_start":1,"column_end":35}},{"value":"/ use nom::combinator::map;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148676,"byte_end":148705,"line_start":937,"line_end":937,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148706,"byte_end":148709,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &[u8]) -> IResult<&[u8], Vec<&[u8]>> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148710,"byte_end":148765,"line_start":939,"line_end":939,"column_start":1,"column_end":56}},{"value":"/   length_count(map(u8, |i| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148766,"byte_end":148798,"line_start":940,"line_end":940,"column_start":1,"column_end":33}},{"value":"/      println!(\"got number: {}\", i);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148799,"byte_end":148838,"line_start":941,"line_end":941,"column_start":1,"column_end":40}},{"value":"/      i","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148839,"byte_end":148849,"line_start":942,"line_end":942,"column_start":1,"column_end":11}},{"value":"/   }), tag(\"abc\"))(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148850,"byte_end":148874,"line_start":943,"line_end":943,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148875,"byte_end":148880,"line_start":944,"line_end":944,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148881,"byte_end":148884,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x02abcabcabc\"[..]), Ok(((&b\"abc\"[..], vec![&b\"abc\"[..], &b\"abc\"[..]]))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148885,"byte_end":148984,"line_start":946,"line_end":946,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(parser(b\"\\x03123123123\"), Err(Err::Error(Error::new(&b\"123123123\"[..], ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":148985,"byte_end":149090,"line_start":947,"line_end":947,"column_start":1,"column_end":106}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":149091,"byte_end":149098,"line_start":948,"line_end":948,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/multi/mod.rs","byte_start":149099,"byte_end":149124,"line_start":949,"line_end":949,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1297},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::sequence","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1318},{"krate":0,"index":1327},{"krate":0,"index":1337},{"krate":0,"index":1349},{"krate":0,"index":1361},{"krate":0,"index":1366},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":5381},{"krate":0,"index":5389},{"krate":0,"index":5399},{"krate":0,"index":5411},{"krate":0,"index":5425},{"krate":0,"index":5441},{"krate":0,"index":5459},{"krate":0,"index":5479},{"krate":0,"index":5501},{"krate":0,"index":5525},{"krate":0,"index":5551},{"krate":0,"index":5579},{"krate":0,"index":5609},{"krate":0,"index":5641},{"krate":0,"index":5675},{"krate":0,"index":5711},{"krate":0,"index":5749},{"krate":0,"index":5789},{"krate":0,"index":5831},{"krate":0,"index":5875},{"krate":0,"index":1376}],"decl_id":null,"docs":" Combinators applying parsers in sequence\n","sig":null,"attributes":[{"value":"/ Combinators applying parsers in sequence","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":149821,"byte_end":149865,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1308},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150659,"byte_end":150663,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"pair","qualname":"::sequence::pair","value":"pub fn pair<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/ where\nF: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then gets another object from the second parser.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":149963,"byte_end":150004,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/ then gets another object from the second parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150005,"byte_end":150057,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150058,"byte_end":150061,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150062,"byte_end":150077,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150078,"byte_end":150118,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150119,"byte_end":150161,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150162,"byte_end":150165,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150166,"byte_end":150177,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150178,"byte_end":150225,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150226,"byte_end":150254,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::pair;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150255,"byte_end":150283,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150284,"byte_end":150318,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150319,"byte_end":150322,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut parser = pair(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150323,"byte_end":150373,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150374,"byte_end":150377,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", (\"abc\", \"efg\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150378,"byte_end":150437,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", (\"abc\", \"efg\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150438,"byte_end":150503,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150504,"byte_end":150570,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150571,"byte_end":150643,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150644,"byte_end":150651,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1318},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151654,"byte_end":151662,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"preceded","qualname":"::sequence::preceded","value":"pub fn preceded<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Matches an object from the first parser and discards it,\n then gets an object from the second parser.","sig":null,"attributes":[{"value":"/ Matches an object from the first parser and discards it,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":150956,"byte_end":151016,"line_start":43,"line_end":43,"column_start":1,"column_end":61}},{"value":"/ then gets an object from the second parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151017,"byte_end":151064,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151065,"byte_end":151068,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151069,"byte_end":151084,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/ * `first` The opening parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151085,"byte_end":151118,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/ * `second` The second parser to get object.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151119,"byte_end":151166,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151167,"byte_end":151170,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151171,"byte_end":151182,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151183,"byte_end":151230,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151231,"byte_end":151259,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::preceded;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151260,"byte_end":151292,"line_start":53,"line_end":53,"column_start":1,"column_end":33}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151293,"byte_end":151327,"line_start":54,"line_end":54,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151328,"byte_end":151331,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ let mut parser = preceded(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151332,"byte_end":151386,"line_start":56,"line_end":56,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151387,"byte_end":151390,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", \"efg\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151391,"byte_end":151441,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", \"efg\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151442,"byte_end":151498,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151499,"byte_end":151565,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151566,"byte_end":151638,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151639,"byte_end":151646,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1327},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152633,"byte_end":152643,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"terminated","qualname":"::sequence::terminated","value":"pub fn terminated<I, O1, O2, E: ParseError<I>, F, G>(F, G) -> /*impl Trait*/\nwhere F: Parser<I, O1, E>, G: Parser<I, O2, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then matches an object from the second parser and discards it.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151919,"byte_end":151960,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ then matches an object from the second parser and discards it.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":151961,"byte_end":152027,"line_start":78,"line_end":78,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152028,"byte_end":152031,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152032,"byte_end":152047,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152048,"byte_end":152088,"line_start":81,"line_end":81,"column_start":1,"column_end":41}},{"value":"/ * `second` The second parser to match an object.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152089,"byte_end":152141,"line_start":82,"line_end":82,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152142,"byte_end":152145,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152146,"byte_end":152157,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152158,"byte_end":152205,"line_start":85,"line_end":85,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152206,"byte_end":152234,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::terminated;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152235,"byte_end":152269,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152270,"byte_end":152304,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152305,"byte_end":152308,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ let mut parser = terminated(tag(\"abc\"), tag(\"efg\"));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152309,"byte_end":152365,"line_start":90,"line_end":90,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152366,"byte_end":152369,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abcefg\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152370,"byte_end":152420,"line_start":92,"line_end":92,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"abcefghij\"), Ok((\"hij\", \"abc\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152421,"byte_end":152477,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152478,"byte_end":152544,"line_start":94,"line_end":94,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152545,"byte_end":152617,"line_start":95,"line_end":95,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152618,"byte_end":152625,"line_start":96,"line_end":96,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1337},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153758,"byte_end":153772,"line_start":133,"line_end":133,"column_start":8,"column_end":22},"name":"separated_pair","qualname":"::sequence::separated_pair","value":"pub fn separated_pair<I, O1, O2, O3, E: ParseError<I>, F, G, H>(F, G, H)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Parser<I, O2, E>,\nH: Parser<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets an object from the first parser,\n then matches an object from the sep_parser and discards it,\n then gets another object from the second parser.","sig":null,"attributes":[{"value":"/ Gets an object from the first parser,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152923,"byte_end":152964,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/ then matches an object from the sep_parser and discards it,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":152965,"byte_end":153028,"line_start":112,"line_end":112,"column_start":1,"column_end":64}},{"value":"/ then gets another object from the second parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153029,"byte_end":153081,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153082,"byte_end":153085,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153086,"byte_end":153101,"line_start":115,"line_end":115,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153102,"byte_end":153142,"line_start":116,"line_end":116,"column_start":1,"column_end":41}},{"value":"/ * `sep` The separator parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153143,"byte_end":153185,"line_start":117,"line_end":117,"column_start":1,"column_end":43}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153186,"byte_end":153228,"line_start":118,"line_end":118,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153229,"byte_end":153232,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153233,"byte_end":153244,"line_start":120,"line_end":120,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153245,"byte_end":153292,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153293,"byte_end":153321,"line_start":122,"line_end":122,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::separated_pair;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153322,"byte_end":153360,"line_start":123,"line_end":123,"column_start":1,"column_end":39}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153361,"byte_end":153395,"line_start":124,"line_end":124,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153396,"byte_end":153399,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let mut parser = separated_pair(tag(\"abc\"), tag(\"|\"), tag(\"efg\"));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153400,"byte_end":153470,"line_start":126,"line_end":126,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153471,"byte_end":153474,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc|efg\"), Ok((\"\", (\"abc\", \"efg\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153475,"byte_end":153535,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(\"abc|efghij\"), Ok((\"hij\", (\"abc\", \"efg\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153536,"byte_end":153602,"line_start":129,"line_end":129,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153603,"byte_end":153669,"line_start":130,"line_end":130,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153670,"byte_end":153742,"line_start":131,"line_end":131,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":153743,"byte_end":153750,"line_start":132,"line_end":132,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1349},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154995,"byte_end":155004,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"delimited","qualname":"::sequence::delimited","value":"pub fn delimited<I, O1, O2, O3, E: ParseError<I>, F, G, H>(F, G, H)\n-> /*impl Trait*/ where F: Parser<I, O1, E>, G: Parser<I, O2, E>,\nH: Parser<I, O3, E>","parent":null,"children":[],"decl_id":null,"docs":" Matches an object from the first parser and discards it,\n then gets an object from the second parser,\n and finally matches an object from the third parser and discards it.","sig":null,"attributes":[{"value":"/ Matches an object from the first parser and discards it,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154149,"byte_end":154209,"line_start":150,"line_end":150,"column_start":1,"column_end":61}},{"value":"/ then gets an object from the second parser,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154210,"byte_end":154257,"line_start":151,"line_end":151,"column_start":1,"column_end":48}},{"value":"/ and finally matches an object from the third parser and discards it.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154258,"byte_end":154330,"line_start":152,"line_end":152,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154331,"byte_end":154334,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154335,"byte_end":154350,"line_start":154,"line_end":154,"column_start":1,"column_end":16}},{"value":"/ * `first` The first parser to apply and discard.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154351,"byte_end":154403,"line_start":155,"line_end":155,"column_start":1,"column_end":53}},{"value":"/ * `second` The second parser to apply.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154404,"byte_end":154446,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ * `third` The third parser to apply and discard.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154447,"byte_end":154499,"line_start":157,"line_end":157,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154500,"byte_end":154503,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154504,"byte_end":154515,"line_start":159,"line_end":159,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154516,"byte_end":154563,"line_start":160,"line_end":160,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154564,"byte_end":154592,"line_start":161,"line_end":161,"column_start":1,"column_end":29}},{"value":"/ use nom::sequence::delimited;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154593,"byte_end":154626,"line_start":162,"line_end":162,"column_start":1,"column_end":34}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154627,"byte_end":154661,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154662,"byte_end":154665,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ let mut parser = delimited(tag(\"(\"), tag(\"abc\"), tag(\")\"));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154666,"byte_end":154729,"line_start":165,"line_end":165,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154730,"byte_end":154733,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"(abc)\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154734,"byte_end":154783,"line_start":167,"line_end":167,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"(abc)def\"), Ok((\"def\", \"abc\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154784,"byte_end":154839,"line_start":168,"line_end":168,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error((\"\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154840,"byte_end":154906,"line_start":169,"line_end":169,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser(\"123\"), Err(Err::Error((\"123\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154907,"byte_end":154979,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":154980,"byte_end":154987,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1361},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":155503,"byte_end":155508,"line_start":192,"line_end":192,"column_start":11,"column_end":16},"name":"Tuple","qualname":"::sequence::Tuple","value":"Tuple<I, O, E>","parent":null,"children":[{"krate":0,"index":1365}],"decl_id":null,"docs":" Helper trait for the tuple combinator.","sig":null,"attributes":[{"value":"/ Helper trait for the tuple combinator.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":155372,"byte_end":155414,"line_start":189,"line_end":189,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":155415,"byte_end":155418,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for tuples of parsers of up to 21 elements.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":155419,"byte_end":155492,"line_start":191,"line_end":191,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":155595,"byte_end":155600,"line_start":194,"line_end":194,"column_start":6,"column_end":11},"name":"parse","qualname":"::sequence::Tuple::parse","value":"pub fn parse(&mut Self, I) -> IResult<I, O, E>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Parses the input and returns a tuple of results of each parser.\n","sig":null,"attributes":[{"value":"/ Parses the input and returns a tuple of results of each parser.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":155522,"byte_end":155589,"line_start":193,"line_end":193,"column_start":3,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":1376},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":158085,"byte_end":158090,"line_start":266,"line_end":266,"column_start":8,"column_end":13},"name":"tuple","qualname":"::sequence::tuple","value":"pub fn tuple<I, O, E: ParseError<I>, List: Tuple<I, O, E>>(List)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"Applies a tuple of parsers one by one and returns their results as a tuple.","sig":null,"attributes":[{"value":"/Applies a tuple of parsers one by one and returns their results as a tuple.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":157644,"byte_end":157722,"line_start":255,"line_end":255,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":157723,"byte_end":157726,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":157727,"byte_end":157738,"line_start":257,"line_end":257,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":157739,"byte_end":157778,"line_start":258,"line_end":258,"column_start":1,"column_end":40}},{"value":"/ use nom::sequence::tuple;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":157779,"byte_end":157808,"line_start":259,"line_end":259,"column_start":1,"column_end":30}},{"value":"/ use nom::character::complete::{alpha1, digit1};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":157809,"byte_end":157860,"line_start":260,"line_end":260,"column_start":1,"column_end":52}},{"value":"/ let mut parser = tuple((alpha1, digit1, alpha1));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":157861,"byte_end":157914,"line_start":261,"line_end":261,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":157915,"byte_end":157918,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc123def\"), Ok((\"\", (\"abc\", \"123\", \"def\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":157919,"byte_end":157988,"line_start":263,"line_end":263,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"123def\"), Err(Err::Error((\"123def\", ErrorKind::Alpha))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":157989,"byte_end":158069,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/sequence/mod.rs","byte_start":158070,"byte_end":158077,"line_start":265,"line_end":265,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1383},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bits","qualname":"::bits","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1443},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1532},{"krate":0,"index":1541}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"/ Bit level parsers","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158222,"byte_end":158243,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158244,"byte_end":158247,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1384},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::bits::complete","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1435}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"/ Bit level parsers","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164332,"byte_end":164353,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164354,"byte_end":164357,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1428},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":165627,"byte_end":165631,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"take","qualname":"::bits::complete::take","value":"pub fn take<I, O, C, E: ParseError<(I, usize)>>(C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength, C: ToUsize,\nO: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize, Output = O>","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164566,"byte_end":164608,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164609,"byte_end":164612,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164613,"byte_end":164626,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164627,"byte_end":164638,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ # use nom::bits::complete::take;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164639,"byte_end":164675,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/ # use nom::IResult;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164676,"byte_end":164699,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/ # use nom::error::{Error, ErrorKind};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164700,"byte_end":164741,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ // Input is a tuple of (input: I, bit_offset: usize)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164742,"byte_end":164798,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ fn parser(input: (&[u8], usize), count: usize)-> IResult<(&[u8], usize), u8> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164799,"byte_end":164881,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/  take(count)(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164882,"byte_end":164905,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164906,"byte_end":164911,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164912,"byte_end":164915,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // Consumes 0 bits, returns 0","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164916,"byte_end":164949,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(parser(([0b00010010].as_ref(), 0), 0), Ok((([0b00010010].as_ref(), 0), 0)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":164950,"byte_end":165041,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":165042,"byte_end":165045,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Consumes 4 bits, returns their values and increase offset to 4","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":165046,"byte_end":165115,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(([0b00010010].as_ref(), 0), 4), Ok((([0b00010010].as_ref(), 4), 0b00000001)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":165116,"byte_end":165216,"line_start":25,"line_end":25,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":165217,"byte_end":165220,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Consumes 4 bits, offset is 4, returns their values and increase offset to 0 of next byte","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":165221,"byte_end":165316,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(parser(([0b00010010].as_ref(), 4), 4), Ok((([].as_ref(), 0), 0b00000010)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":165317,"byte_end":165407,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":165408,"byte_end":165411,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Tries to consume 12 bits but only 8 are available","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":165412,"byte_end":165468,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser(([0b00010010].as_ref(), 0), 12), Err(nom::Err::Error(Error{input: ([0b00010010].as_ref(), 0), code: ErrorKind::Eof })));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":165469,"byte_end":165611,"line_start":31,"line_end":31,"column_start":1,"column_end":143}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":165612,"byte_end":165619,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1435},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":167178,"byte_end":167181,"line_start":85,"line_end":85,"column_start":8,"column_end":11},"name":"tag","qualname":"::bits::complete::tag","value":"pub fn tag<I, O, C, E: ParseError<(I, usize)>>(O, C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength + Clone,\nC: ToUsize, O: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize,\nOutput = O> + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits and comparing them to `pattern`\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits and comparing them to `pattern`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/complete.rs","byte_start":167096,"byte_end":167170,"line_start":84,"line_end":84,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":1443},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::bits::streaming","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/streaming.rs","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1455},{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1490},{"krate":0,"index":1497}],"decl_id":null,"docs":" Bit level parsers","sig":null,"attributes":[{"value":"/ Bit level parsers","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/streaming.rs","byte_start":168735,"byte_end":168756,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/streaming.rs","byte_start":168757,"byte_end":168760,"line_start":2,"line_end":2,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1490},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/streaming.rs","byte_start":169027,"byte_end":169031,"line_start":10,"line_end":10,"column_start":8,"column_end":12},"name":"take","qualname":"::bits::streaming::take","value":"pub fn take<I, O, C, E: ParseError<(I, usize)>>(C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength, C: ToUsize,\nO: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize, Output = O>","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/streaming.rs","byte_start":168977,"byte_end":169019,"line_start":9,"line_end":9,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1497},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/streaming.rs","byte_start":170524,"byte_end":170527,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"tag","qualname":"::bits::streaming::tag","value":"pub fn tag<I, O, C, E: ParseError<(I, usize)>>(O, C) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength + Clone,\nC: ToUsize, O: From<u8> + AddAssign + Shl<usize, Output = O> + Shr<usize,\nOutput = O> + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Generates a parser taking `count` bits and comparing them to `pattern`\n","sig":null,"attributes":[{"value":"/ Generates a parser taking `count` bits and comparing them to `pattern`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/streaming.rs","byte_start":170442,"byte_end":170516,"line_start":58,"line_end":58,"column_start":1,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":1532},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":159394,"byte_end":159398,"line_start":40,"line_end":40,"column_start":8,"column_end":12},"name":"bits","qualname":"::bits::bits","value":"pub fn bits<I, O, E1, E2, P>(P) -> /*impl Trait*/ where\nE1: ParseError<(I, usize)> + ErrorConvert<E2>, E2: ParseError<I>,\nI: Slice<RangeFrom<usize>>, P: FnMut((I, usize)) -> IResult<(I, usize), O, E1>","parent":null,"children":[],"decl_id":null,"docs":" Converts a byte-level input to a bit-level input, for consumption by a parser that uses bits.","sig":null,"attributes":[{"value":"/ Converts a byte-level input to a bit-level input, for consumption by a parser that uses bits.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158455,"byte_end":158552,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158553,"byte_end":158556,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Afterwards, the input is converted back to a byte-level parser, with any remaining bits thrown","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158557,"byte_end":158655,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/ away.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158656,"byte_end":158665,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158666,"byte_end":158669,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158670,"byte_end":158683,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158684,"byte_end":158691,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use nom::bits::{bits, streaming::take};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158692,"byte_end":158735,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/ use nom::error::Error;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158736,"byte_end":158762,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ use nom::sequence::tuple;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158763,"byte_end":158792,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/ use nom::IResult;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158793,"byte_end":158814,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158815,"byte_end":158818,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ fn parse(input: &[u8]) -> IResult<&[u8], (u8, u8)> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158819,"byte_end":158875,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/     bits::<_, _, Error<(&[u8], usize)>, _, _>(tuple((take(4usize), take(8usize))))(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158876,"byte_end":158969,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158970,"byte_end":158975,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158976,"byte_end":158979,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let input = &[0x12, 0x34, 0xff, 0xff];","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158980,"byte_end":159022,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":159023,"byte_end":159026,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let output = parse(input).expect(\"We take 1.5 bytes and the input is longer than 2 bytes\");","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":159027,"byte_end":159122,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":159123,"byte_end":159126,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // The first byte is consumed, the second byte is partially consumed and dropped.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":159127,"byte_end":159212,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"/ let remaining = output.0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":159213,"byte_end":159242,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(remaining, [0xff, 0xff]);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":159243,"byte_end":159283,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":159284,"byte_end":159287,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let parsed = output.1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":159288,"byte_end":159314,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(parsed.0, 0x01);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":159315,"byte_end":159346,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parsed.1, 0x23);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":159347,"byte_end":159378,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":159379,"byte_end":159386,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1541},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":161153,"byte_end":161158,"line_start":86,"line_end":86,"column_start":8,"column_end":13},"name":"bytes","qualname":"::bits::bytes","value":"pub fn bytes<I, O, E1, E2, P>(P) -> /*impl Trait*/ where E1: ParseError<I> +\nErrorConvert<E2>, E2: ParseError<(I, usize)>, I: Slice<RangeFrom<usize>> +\nClone, P: FnMut(I) -> IResult<I, O, E1>","parent":null,"children":[],"decl_id":null,"docs":" Counterpart to `bits`, `bytes` transforms its bit stream input into a byte slice for the underlying\n parser, allowing byte-slice parsers to work on bit streams.","sig":null,"attributes":[{"value":"/ Counterpart to `bits`, `bytes` transforms its bit stream input into a byte slice for the underlying","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160296,"byte_end":160399,"line_start":61,"line_end":61,"column_start":1,"column_end":104}},{"value":"/ parser, allowing byte-slice parsers to work on bit streams.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160400,"byte_end":160463,"line_start":62,"line_end":62,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160464,"byte_end":160467,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ A partial byte remaining in the input will be ignored and the given parser will start parsing","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160468,"byte_end":160565,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ at the next full byte.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160566,"byte_end":160592,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160593,"byte_end":160596,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160597,"byte_end":160604,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use nom::bits::{bits, bytes, streaming::take};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160605,"byte_end":160655,"line_start":68,"line_end":68,"column_start":1,"column_end":51}},{"value":"/ use nom::combinator::rest;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160656,"byte_end":160686,"line_start":69,"line_end":69,"column_start":1,"column_end":31}},{"value":"/ use nom::error::Error;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160687,"byte_end":160713,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/ use nom::sequence::tuple;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160714,"byte_end":160743,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/ use nom::IResult;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160744,"byte_end":160765,"line_start":72,"line_end":72,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160766,"byte_end":160769,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ fn parse(input: &[u8]) -> IResult<&[u8], (u8, u8, &[u8])> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160770,"byte_end":160833,"line_start":74,"line_end":74,"column_start":1,"column_end":64}},{"value":"/   bits::<_, _, Error<(&[u8], usize)>, _, _>(tuple((","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160834,"byte_end":160889,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"/     take(4usize),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160890,"byte_end":160911,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     take(8usize),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160912,"byte_end":160933,"line_start":77,"line_end":77,"column_start":1,"column_end":22}},{"value":"/     bytes::<_, _, Error<&[u8]>, _, _>(rest)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160934,"byte_end":160981,"line_start":78,"line_end":78,"column_start":1,"column_end":48}},{"value":"/   )))(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160982,"byte_end":160998,"line_start":79,"line_end":79,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":160999,"byte_end":161004,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":161005,"byte_end":161008,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let input = &[0x12, 0x34, 0xff, 0xff];","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":161009,"byte_end":161051,"line_start":82,"line_end":82,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":161052,"byte_end":161055,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parse( input ), Ok(( &[][..], (0x01, 0x23, &[0xff, 0xff][..]) )));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":161056,"byte_end":161137,"line_start":84,"line_end":84,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":161138,"byte_end":161145,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1549},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bytes","qualname":"::bytes","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/mod.rs","parent":null,"children":[{"krate":0,"index":1550},{"krate":0,"index":1708}],"decl_id":null,"docs":" Parsers recognizing bytes streams\n","sig":null,"attributes":[{"value":"/ Parsers recognizing bytes streams","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/mod.rs","byte_start":172219,"byte_end":172256,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1550},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::bytes::complete","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1581},{"krate":0,"index":1584},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1608},{"krate":0,"index":1614},{"krate":0,"index":1621},{"krate":0,"index":1628},{"krate":0,"index":1635},{"krate":0,"index":1642},{"krate":0,"index":1649},{"krate":0,"index":1656},{"krate":0,"index":1663},{"krate":0,"index":1669},{"krate":0,"index":1675},{"krate":0,"index":1681},{"krate":0,"index":1694}],"decl_id":null,"docs":" Parsers recognizing bytes streams, complete input version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing bytes streams, complete input version","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":172320,"byte_end":172381,"line_start":1,"line_end":1,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":1602},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173448,"byte_end":173451,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"tag","qualname":"::bytes::complete::tag","value":"pub fn tag<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTake + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a pattern","sig":null,"attributes":[{"value":"/ Recognizes a pattern","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":172715,"byte_end":172739,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":172740,"byte_end":172743,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":172744,"byte_end":172840,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":172841,"byte_end":172880,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":172881,"byte_end":172884,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Tag)))` if the input doesn't match the pattern","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":172885,"byte_end":172981,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":172982,"byte_end":172995,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":172996,"byte_end":173007,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173008,"byte_end":173073,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173074,"byte_end":173108,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173109,"byte_end":173112,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173113,"byte_end":173160,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/   tag(\"Hello\")(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173161,"byte_end":173182,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173183,"byte_end":173188,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173189,"byte_end":173192,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173193,"byte_end":173260,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173261,"byte_end":173355,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173356,"byte_end":173432,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173433,"byte_end":173440,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1608},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174877,"byte_end":174888,"line_start":74,"line_end":74,"column_start":8,"column_end":19},"name":"tag_no_case","qualname":"::bytes::complete::tag_no_case","value":"pub fn tag_no_case<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a case insensitive pattern.","sig":null,"attributes":[{"value":"/ Recognizes a case insensitive pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173949,"byte_end":173991,"line_start":53,"line_end":53,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173992,"byte_end":173995,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":173996,"byte_end":174092,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument with no regard to case.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174093,"byte_end":174156,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174157,"byte_end":174160,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Tag)))` if the input doesn't match the pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174161,"byte_end":174258,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174259,"byte_end":174272,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174273,"byte_end":174284,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174285,"byte_end":174350,"line_start":61,"line_end":61,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::tag_no_case;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174351,"byte_end":174393,"line_start":62,"line_end":62,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174394,"byte_end":174397,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174398,"byte_end":174445,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/   tag_no_case(\"hello\")(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174446,"byte_end":174475,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174476,"byte_end":174481,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174482,"byte_end":174485,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174486,"byte_end":174553,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"hello, World!\"), Ok((\", World!\", \"hello\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174554,"byte_end":174621,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"HeLlO, World!\"), Ok((\", World!\", \"HeLlO\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174622,"byte_end":174689,"line_start":70,"line_end":70,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174690,"byte_end":174784,"line_start":71,"line_end":71,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174785,"byte_end":174861,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":174862,"byte_end":174869,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1614},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176209,"byte_end":176215,"line_start":117,"line_end":117,"column_start":8,"column_end":14},"name":"is_not","qualname":"::bytes::complete::is_not","value":"pub fn is_not<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Parse till certain characters are met.","sig":null,"attributes":[{"value":"/ Parse till certain characters are met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175397,"byte_end":175439,"line_start":96,"line_end":96,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175440,"byte_end":175443,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till one of the characters of the combinator's argument are met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175444,"byte_end":175553,"line_start":98,"line_end":98,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175554,"byte_end":175557,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the matched character.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175558,"byte_end":175603,"line_start":100,"line_end":100,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175604,"byte_end":175607,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err::Error((\"\", ErrorKind::IsNot))` if the pattern wasn't met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175608,"byte_end":175692,"line_start":102,"line_end":102,"column_start":1,"column_end":85}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175693,"byte_end":175706,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175707,"byte_end":175718,"line_start":104,"line_end":104,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175719,"byte_end":175784,"line_start":105,"line_end":105,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::is_not;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175785,"byte_end":175822,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175823,"byte_end":175826,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ fn not_space(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175827,"byte_end":175877,"line_start":108,"line_end":108,"column_start":1,"column_end":51}},{"value":"/   is_not(\" \\t\\r\\n\")(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175878,"byte_end":175904,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175905,"byte_end":175910,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175911,"byte_end":175914,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(not_space(\"Hello, World!\"), Ok((\" World!\", \"Hello,\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175915,"byte_end":175985,"line_start":112,"line_end":112,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(not_space(\"Sometimes\\t\"), Ok((\"\\t\", \"Sometimes\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":175986,"byte_end":176052,"line_start":113,"line_end":113,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(not_space(\"Nospace\"), Ok((\"\", \"Nospace\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176053,"byte_end":176111,"line_start":114,"line_end":114,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(not_space(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::IsNot))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176112,"byte_end":176193,"line_start":115,"line_end":115,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176194,"byte_end":176201,"line_start":116,"line_end":116,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1621},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177384,"byte_end":177388,"line_start":151,"line_end":151,"column_start":8,"column_end":12},"name":"is_a","qualname":"::bytes::complete::is_a","value":"pub fn is_a<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest slice of the matches the pattern.","sig":null,"attributes":[{"value":"/ Returns the longest slice of the matches the pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176535,"byte_end":176592,"line_start":130,"line_end":130,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176593,"byte_end":176596,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice consisting of the characters in provided in the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176597,"byte_end":176689,"line_start":132,"line_end":132,"column_start":1,"column_end":93}},{"value":"/ combinator's argument.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176690,"byte_end":176716,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176717,"byte_end":176720,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err(Err::Error((_, ErrorKind::IsA)))` if the pattern wasn't met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176721,"byte_end":176807,"line_start":135,"line_end":135,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176808,"byte_end":176821,"line_start":136,"line_end":136,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176822,"byte_end":176833,"line_start":137,"line_end":137,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176834,"byte_end":176899,"line_start":138,"line_end":138,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::is_a;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176900,"byte_end":176935,"line_start":139,"line_end":139,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176936,"byte_end":176939,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ fn hex(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176940,"byte_end":176984,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/   is_a(\"1234567890ABCDEF\")(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":176985,"byte_end":177018,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177019,"byte_end":177024,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177025,"byte_end":177028,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(hex(\"123 and voila\"), Ok((\" and voila\", \"123\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177029,"byte_end":177093,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(hex(\"DEADBEEF and others\"), Ok((\" and others\", \"DEADBEEF\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177094,"byte_end":177170,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(hex(\"BADBABEsomething\"), Ok((\"something\", \"BADBABE\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177171,"byte_end":177241,"line_start":147,"line_end":147,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(hex(\"D15EA5E\"), Ok((\"\", \"D15EA5E\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177242,"byte_end":177294,"line_start":148,"line_end":148,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(hex(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::IsA))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177295,"byte_end":177368,"line_start":149,"line_end":149,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177369,"byte_end":177376,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1628},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178452,"byte_end":178462,"line_start":183,"line_end":183,"column_start":8,"column_end":18},"name":"take_while","qualname":"::bytes::complete::take_while","value":"pub fn take_while<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) that matches the predicate.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177707,"byte_end":177779,"line_start":164,"line_end":164,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177780,"byte_end":177783,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177784,"byte_end":177879,"line_start":166,"line_end":166,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177880,"byte_end":177921,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177922,"byte_end":177935,"line_start":168,"line_end":168,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177936,"byte_end":177947,"line_start":169,"line_end":169,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":177948,"byte_end":178004,"line_start":170,"line_end":170,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::complete::take_while;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178005,"byte_end":178046,"line_start":171,"line_end":171,"column_start":1,"column_end":42}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178047,"byte_end":178085,"line_start":172,"line_end":172,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178086,"byte_end":178089,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178090,"byte_end":178139,"line_start":174,"line_end":174,"column_start":1,"column_end":50}},{"value":"/   take_while(is_alphabetic)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178140,"byte_end":178174,"line_start":175,"line_end":175,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178175,"byte_end":178180,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178181,"byte_end":178184,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178185,"byte_end":178254,"line_start":178,"line_end":178,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"12345\"), Ok((&b\"12345\"[..], &b\"\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178255,"byte_end":178318,"line_start":179,"line_end":179,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178319,"byte_end":178382,"line_start":180,"line_end":180,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"\"), Ok((&b\"\"[..], &b\"\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178383,"byte_end":178436,"line_start":181,"line_end":181,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178437,"byte_end":178444,"line_start":182,"line_end":182,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1635},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179561,"byte_end":179572,"line_start":213,"line_end":213,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::bytes::complete::take_while1","value":"pub fn take_while1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice that matches the predicate.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178720,"byte_end":178796,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178797,"byte_end":178800,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178801,"byte_end":178896,"line_start":195,"line_end":195,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178897,"byte_end":178938,"line_start":196,"line_end":196,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178939,"byte_end":178942,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err(Err::Error((_, ErrorKind::TakeWhile1)))` if the pattern wasn't met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":178943,"byte_end":179037,"line_start":198,"line_end":198,"column_start":1,"column_end":95}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179038,"byte_end":179051,"line_start":199,"line_end":199,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179052,"byte_end":179063,"line_start":200,"line_end":200,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179064,"byte_end":179129,"line_start":201,"line_end":201,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_while1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179130,"byte_end":179172,"line_start":202,"line_end":202,"column_start":1,"column_end":43}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179173,"byte_end":179211,"line_start":203,"line_end":203,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179212,"byte_end":179215,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179216,"byte_end":179265,"line_start":205,"line_end":205,"column_start":1,"column_end":50}},{"value":"/   take_while1(is_alphabetic)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179266,"byte_end":179301,"line_start":206,"line_end":206,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179302,"byte_end":179307,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179308,"byte_end":179311,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179312,"byte_end":179381,"line_start":209,"line_end":209,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179382,"byte_end":179445,"line_start":210,"line_end":210,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhile1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179446,"byte_end":179545,"line_start":211,"line_end":211,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179546,"byte_end":179553,"line_start":212,"line_end":212,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1642},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180982,"byte_end":180996,"line_start":249,"line_end":249,"column_start":8,"column_end":22},"name":"take_while_m_n","qualname":"::bytes::complete::take_while_m_n","value":"pub fn take_while_m_n<F, Input, Error: ParseError<Input>>(usize, usize, F)\n-> /*impl Trait*/ where Input: InputTake + InputIter + InputLength +\nSlice<RangeFrom<usize>>, F: Fn(<Input as InputIter>::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (m <= len <= n) input slice  that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (m <= len <= n) input slice  that matches the predicate.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179890,"byte_end":179970,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179971,"byte_end":179974,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":179975,"byte_end":180070,"line_start":228,"line_end":228,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180071,"byte_end":180112,"line_start":229,"line_end":229,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180113,"byte_end":180116,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err::Error((_, ErrorKind::TakeWhileMN))` if the pattern wasn't met or is out","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180117,"byte_end":180216,"line_start":231,"line_end":231,"column_start":1,"column_end":100}},{"value":"/ of range (m <= len <= n).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180217,"byte_end":180246,"line_start":232,"line_end":232,"column_start":1,"column_end":30}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180247,"byte_end":180260,"line_start":233,"line_end":233,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180261,"byte_end":180272,"line_start":234,"line_end":234,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180273,"byte_end":180338,"line_start":235,"line_end":235,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_while_m_n;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180339,"byte_end":180384,"line_start":236,"line_end":236,"column_start":1,"column_end":46}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180385,"byte_end":180423,"line_start":237,"line_end":237,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180424,"byte_end":180427,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ fn short_alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180428,"byte_end":180483,"line_start":239,"line_end":239,"column_start":1,"column_end":56}},{"value":"/   take_while_m_n(3, 6, is_alphabetic)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180484,"byte_end":180528,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180529,"byte_end":180534,"line_start":241,"line_end":241,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180535,"byte_end":180538,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(short_alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180539,"byte_end":180614,"line_start":243,"line_end":243,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(short_alpha(b\"lengthy\"), Ok((&b\"y\"[..], &b\"length\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180615,"byte_end":180688,"line_start":244,"line_end":244,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"latin\"), Ok((&b\"\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180689,"byte_end":180758,"line_start":245,"line_end":245,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(short_alpha(b\"ed\"), Err(Err::Error(Error::new(&b\"ed\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180759,"byte_end":180859,"line_start":246,"line_end":246,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(short_alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180860,"byte_end":180966,"line_start":247,"line_end":247,"column_start":1,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":180967,"byte_end":180974,"line_start":248,"line_end":248,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1649},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183487,"byte_end":183496,"line_start":330,"line_end":330,"column_start":8,"column_end":17},"name":"take_till","qualname":"::bytes::complete::take_till","value":"pub fn take_till<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) till a predicate is met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":182795,"byte_end":182864,"line_start":312,"line_end":312,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":182865,"byte_end":182868,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":182869,"byte_end":182956,"line_start":314,"line_end":314,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":182957,"byte_end":182998,"line_start":315,"line_end":315,"column_start":1,"column_end":42}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":182999,"byte_end":183012,"line_start":316,"line_end":316,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183013,"byte_end":183024,"line_start":317,"line_end":317,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183025,"byte_end":183081,"line_start":318,"line_end":318,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::complete::take_till;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183082,"byte_end":183122,"line_start":319,"line_end":319,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183123,"byte_end":183126,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183127,"byte_end":183178,"line_start":321,"line_end":321,"column_start":1,"column_end":52}},{"value":"/   take_till(|c| c == ':')(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183179,"byte_end":183211,"line_start":322,"line_end":322,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183212,"byte_end":183217,"line_start":323,"line_end":323,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183218,"byte_end":183221,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183222,"byte_end":183285,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Ok((\":empty matched\", \"\"))); //allowed","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183286,"byte_end":183369,"line_start":326,"line_end":326,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(till_colon(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183370,"byte_end":183425,"line_start":327,"line_end":327,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(till_colon(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183426,"byte_end":183471,"line_start":328,"line_end":328,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183472,"byte_end":183479,"line_start":329,"line_end":329,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1656},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184668,"byte_end":184678,"line_start":361,"line_end":361,"column_start":8,"column_end":18},"name":"take_till1","qualname":"::bytes::complete::take_till1","value":"pub fn take_till1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice till a predicate is met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183753,"byte_end":183826,"line_start":340,"line_end":340,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183827,"byte_end":183830,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183831,"byte_end":183918,"line_start":342,"line_end":342,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183919,"byte_end":183960,"line_start":343,"line_end":343,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183961,"byte_end":183964,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::TakeTill1)))` if the input is empty or the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":183965,"byte_end":184057,"line_start":345,"line_end":345,"column_start":1,"column_end":93}},{"value":"/ predicate matches the first input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184058,"byte_end":184096,"line_start":346,"line_end":346,"column_start":1,"column_end":39}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184097,"byte_end":184110,"line_start":347,"line_end":347,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184111,"byte_end":184122,"line_start":348,"line_end":348,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184123,"byte_end":184188,"line_start":349,"line_end":349,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_till1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184189,"byte_end":184230,"line_start":350,"line_end":350,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184231,"byte_end":184234,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184235,"byte_end":184286,"line_start":352,"line_end":352,"column_start":1,"column_end":52}},{"value":"/   take_till1(|c| c == ':')(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184287,"byte_end":184320,"line_start":353,"line_end":353,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184321,"byte_end":184326,"line_start":354,"line_end":354,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184327,"byte_end":184330,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184331,"byte_end":184394,"line_start":356,"line_end":356,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Err(Err::Error(Error::new(\":empty matched\", ErrorKind::TakeTill1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184395,"byte_end":184509,"line_start":357,"line_end":357,"column_start":1,"column_end":115}},{"value":"/ assert_eq!(till_colon(\"12345\"), Ok((\"\", \"12345\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184510,"byte_end":184565,"line_start":358,"line_end":358,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeTill1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184566,"byte_end":184652,"line_start":359,"line_end":359,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184653,"byte_end":184660,"line_start":360,"line_end":360,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1663},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185674,"byte_end":185678,"line_start":391,"line_end":391,"column_start":8,"column_end":12},"name":"take","qualname":"::bytes::complete::take","value":"pub fn take<C, Input, Error: ParseError<Input>>(C) -> /*impl Trait*/ where\nInput: InputIter + InputTake, C: ToUsize","parent":null,"children":[],"decl_id":null,"docs":" Returns an input slice containing the first N input elements (Input[..N]).","sig":null,"attributes":[{"value":"/ Returns an input slice containing the first N input elements (Input[..N]).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":184994,"byte_end":185072,"line_start":374,"line_end":374,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185073,"byte_end":185076,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ It will return `Err(Err::Error((_, ErrorKind::Eof)))` if the input is shorter than the argument.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185077,"byte_end":185177,"line_start":376,"line_end":376,"column_start":1,"column_end":101}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185178,"byte_end":185191,"line_start":377,"line_end":377,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185192,"byte_end":185203,"line_start":378,"line_end":378,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185204,"byte_end":185269,"line_start":379,"line_end":379,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185270,"byte_end":185305,"line_start":380,"line_end":380,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185306,"byte_end":185309,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ fn take6(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185310,"byte_end":185356,"line_start":382,"line_end":382,"column_start":1,"column_end":47}},{"value":"/   take(6usize)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185357,"byte_end":185378,"line_start":383,"line_end":383,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185379,"byte_end":185384,"line_start":384,"line_end":384,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185385,"byte_end":185388,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(take6(\"1234567\"), Ok((\"7\", \"123456\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185389,"byte_end":185443,"line_start":386,"line_end":386,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(take6(\"things\"), Ok((\"\", \"things\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185444,"byte_end":185496,"line_start":387,"line_end":387,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(take6(\"short\"), Err(Err::Error(Error::new(\"short\", ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185497,"byte_end":185582,"line_start":388,"line_end":388,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(take6(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185583,"byte_end":185658,"line_start":389,"line_end":389,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":185659,"byte_end":185666,"line_start":390,"line_end":390,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1669},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186809,"byte_end":186819,"line_start":423,"line_end":423,"column_start":8,"column_end":18},"name":"take_until","qualname":"::bytes::complete::take_until","value":"pub fn take_until<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + FindSubstring<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the input slice up to the first occurrence of the pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186034,"byte_end":186104,"line_start":405,"line_end":405,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186105,"byte_end":186108,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern. It will return `Err(Err::Error((_, ErrorKind::TakeUntil)))`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186109,"byte_end":186204,"line_start":407,"line_end":407,"column_start":1,"column_end":96}},{"value":"/ if the pattern wasn't met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186205,"byte_end":186235,"line_start":408,"line_end":408,"column_start":1,"column_end":31}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186236,"byte_end":186249,"line_start":409,"line_end":409,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186250,"byte_end":186261,"line_start":410,"line_end":410,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186262,"byte_end":186327,"line_start":411,"line_end":411,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_until;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186328,"byte_end":186369,"line_start":412,"line_end":412,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186370,"byte_end":186373,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186374,"byte_end":186424,"line_start":414,"line_end":414,"column_start":1,"column_end":51}},{"value":"/   take_until(\"eof\")(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186425,"byte_end":186451,"line_start":415,"line_end":415,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186452,"byte_end":186457,"line_start":416,"line_end":416,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186458,"byte_end":186461,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186462,"byte_end":186536,"line_start":418,"line_end":418,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Error(Error::new(\"hello, world\", ErrorKind::TakeUntil))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186537,"byte_end":186646,"line_start":419,"line_end":419,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(until_eof(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeUntil))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186647,"byte_end":186732,"line_start":420,"line_end":420,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186733,"byte_end":186793,"line_start":421,"line_end":421,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":186794,"byte_end":186801,"line_start":422,"line_end":422,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1675},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":188128,"byte_end":188139,"line_start":459,"line_end":459,"column_start":8,"column_end":19},"name":"take_until1","qualname":"::bytes::complete::take_until1","value":"pub fn take_until1<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + FindSubstring<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the non empty input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the non empty input slice up to the first occurrence of the pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187249,"byte_end":187329,"line_start":440,"line_end":440,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187330,"byte_end":187333,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern. It will return `Err(Err::Error((_, ErrorKind::TakeUntil)))`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187334,"byte_end":187429,"line_start":442,"line_end":442,"column_start":1,"column_end":96}},{"value":"/ if the pattern wasn't met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187430,"byte_end":187460,"line_start":443,"line_end":443,"column_start":1,"column_end":31}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187461,"byte_end":187474,"line_start":444,"line_end":444,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187475,"byte_end":187486,"line_start":445,"line_end":445,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187487,"byte_end":187552,"line_start":446,"line_end":446,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::complete::take_until1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187553,"byte_end":187595,"line_start":447,"line_end":447,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187596,"byte_end":187599,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187600,"byte_end":187650,"line_start":449,"line_end":449,"column_start":1,"column_end":51}},{"value":"/   take_until1(\"eof\")(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187651,"byte_end":187678,"line_start":450,"line_end":450,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187679,"byte_end":187684,"line_start":451,"line_end":451,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187685,"byte_end":187688,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187689,"byte_end":187763,"line_start":453,"line_end":453,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Error(Error::new(\"hello, world\", ErrorKind::TakeUntil))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187764,"byte_end":187873,"line_start":454,"line_end":454,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(until_eof(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::TakeUntil))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187874,"byte_end":187959,"line_start":455,"line_end":455,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":187960,"byte_end":188020,"line_start":456,"line_end":456,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(until_eof(\"eof\"), Err(Err::Error(Error::new(\"eof\", ErrorKind::TakeUntil))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":188021,"byte_end":188112,"line_start":457,"line_end":457,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":188113,"byte_end":188120,"line_start":458,"line_end":458,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1681},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189378,"byte_end":189385,"line_start":497,"line_end":497,"column_start":8,"column_end":15},"name":"escaped","qualname":"::bytes::complete::escaped","value":"pub fn escaped<'a, Input: 'a, Error, F, G, O1, O2>(F, char, G)\n-> /*impl Trait*/ where Input: Clone + crate::traits::Offset + InputLength +\nInputTake + InputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":188652,"byte_end":188702,"line_start":477,"line_end":477,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":188703,"byte_end":188706,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not accept the control character)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":188707,"byte_end":188804,"line_start":479,"line_end":479,"column_start":1,"column_end":98}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":188805,"byte_end":188884,"line_start":480,"line_end":480,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":188885,"byte_end":188940,"line_start":481,"line_end":481,"column_start":1,"column_end":56}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":188941,"byte_end":188954,"line_start":482,"line_end":482,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":188955,"byte_end":188962,"line_start":483,"line_end":483,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":188963,"byte_end":189019,"line_start":484,"line_end":484,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189020,"byte_end":189063,"line_start":485,"line_end":485,"column_start":1,"column_end":44}},{"value":"/ use nom::bytes::complete::escaped;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189064,"byte_end":189102,"line_start":486,"line_end":486,"column_start":1,"column_end":39}},{"value":"/ use nom::character::complete::one_of;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189103,"byte_end":189144,"line_start":487,"line_end":487,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189145,"byte_end":189148,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ fn esc(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189149,"byte_end":189193,"line_start":489,"line_end":489,"column_start":1,"column_end":45}},{"value":"/   escaped(digit1, '\\\\', one_of(r#\"\"n\\\"#))(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189194,"byte_end":189242,"line_start":490,"line_end":490,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189243,"byte_end":189248,"line_start":491,"line_end":491,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189249,"byte_end":189252,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(esc(\"123;\"), Ok((\";\", \"123\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189253,"byte_end":189299,"line_start":493,"line_end":493,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(esc(r#\"12\\\"34;\"#), Ok((\";\", r#\"12\\\"34\"#)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189300,"byte_end":189358,"line_start":494,"line_end":494,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189359,"byte_end":189366,"line_start":495,"line_end":495,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":189367,"byte_end":189370,"line_start":496,"line_end":496,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1694},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192878,"byte_end":192895,"line_start":611,"line_end":611,"column_start":8,"column_end":25},"name":"escaped_transform","qualname":"::bytes::complete::escaped_transform","value":"pub fn escaped_transform<Input, Error, F, G, O1, O2, ExtendItem,\n                         Output>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\nInput: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO1: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO2: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":191702,"byte_end":191752,"line_start":578,"line_end":578,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":191753,"byte_end":191756,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not match the control character)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":191757,"byte_end":191853,"line_start":580,"line_end":580,"column_start":1,"column_end":97}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":191854,"byte_end":191933,"line_start":581,"line_end":581,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters and transforms them","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":191934,"byte_end":192009,"line_start":582,"line_end":582,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192010,"byte_end":192013,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ As an example, the chain `abc\\tdef` could be `abc    def` (it also consumes the control character)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192014,"byte_end":192116,"line_start":584,"line_end":584,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192117,"byte_end":192120,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192121,"byte_end":192128,"line_start":586,"line_end":586,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192129,"byte_end":192185,"line_start":587,"line_end":587,"column_start":1,"column_end":57}},{"value":"/ # use std::str::from_utf8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192186,"byte_end":192216,"line_start":588,"line_end":588,"column_start":1,"column_end":31}},{"value":"/ use nom::bytes::complete::{escaped_transform, tag};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192217,"byte_end":192272,"line_start":589,"line_end":589,"column_start":1,"column_end":56}},{"value":"/ use nom::character::complete::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192273,"byte_end":192314,"line_start":590,"line_end":590,"column_start":1,"column_end":42}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192315,"byte_end":192340,"line_start":591,"line_end":591,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192341,"byte_end":192372,"line_start":592,"line_end":592,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192373,"byte_end":192376,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, String> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192377,"byte_end":192430,"line_start":594,"line_end":594,"column_start":1,"column_end":54}},{"value":"/   escaped_transform(","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192431,"byte_end":192455,"line_start":595,"line_end":595,"column_start":1,"column_end":25}},{"value":"/     alpha1,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192456,"byte_end":192471,"line_start":596,"line_end":596,"column_start":1,"column_end":16}},{"value":"/     '\\\\',","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192472,"byte_end":192485,"line_start":597,"line_end":597,"column_start":1,"column_end":14}},{"value":"/     alt((","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192486,"byte_end":192499,"line_start":598,"line_end":598,"column_start":1,"column_end":14}},{"value":"/       value(\"\\\\\", tag(\"\\\\\")),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192500,"byte_end":192533,"line_start":599,"line_end":599,"column_start":1,"column_end":34}},{"value":"/       value(\"\\\"\", tag(\"\\\"\")),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192534,"byte_end":192567,"line_start":600,"line_end":600,"column_start":1,"column_end":34}},{"value":"/       value(\"\\n\", tag(\"n\")),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192568,"byte_end":192600,"line_start":601,"line_end":601,"column_start":1,"column_end":33}},{"value":"/     ))","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192601,"byte_end":192611,"line_start":602,"line_end":602,"column_start":1,"column_end":11}},{"value":"/   )(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192612,"byte_end":192626,"line_start":603,"line_end":603,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192627,"byte_end":192632,"line_start":604,"line_end":604,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192633,"byte_end":192636,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\\\\\\"cd\"), Ok((\"\", String::from(\"ab\\\"cd\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192637,"byte_end":192706,"line_start":606,"line_end":606,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(\"ab\\\\ncd\"), Ok((\"\", String::from(\"ab\\ncd\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192707,"byte_end":192775,"line_start":607,"line_end":607,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192776,"byte_end":192783,"line_start":608,"line_end":608,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/complete.rs","byte_start":192784,"byte_end":192809,"line_start":609,"line_end":609,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1708},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::bytes::streaming","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1712},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1742},{"krate":0,"index":1745},{"krate":0,"index":1748},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1769},{"krate":0,"index":1775},{"krate":0,"index":1782},{"krate":0,"index":1789},{"krate":0,"index":1796},{"krate":0,"index":1803},{"krate":0,"index":1810},{"krate":0,"index":1817},{"krate":0,"index":1824},{"krate":0,"index":1830},{"krate":0,"index":1836},{"krate":0,"index":1842},{"krate":0,"index":1854}],"decl_id":null,"docs":" Parsers recognizing bytes streams, streaming version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing bytes streams, streaming version","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":196857,"byte_end":196913,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1763},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197959,"byte_end":197962,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"tag","qualname":"::bytes::streaming::tag","value":"pub fn tag<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTake + InputLength + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a pattern.","sig":null,"attributes":[{"value":"/ Recognizes a pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197255,"byte_end":197280,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197281,"byte_end":197284,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197285,"byte_end":197381,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197382,"byte_end":197422,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197423,"byte_end":197436,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197437,"byte_end":197448,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197449,"byte_end":197514,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::tag;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197515,"byte_end":197550,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197551,"byte_end":197554,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197555,"byte_end":197602,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/   tag(\"Hello\")(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197603,"byte_end":197624,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197625,"byte_end":197630,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197631,"byte_end":197634,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197635,"byte_end":197702,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197703,"byte_end":197797,"line_start":27,"line_end":27,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"S\"), Err(Err::Error(Error::new(\"S\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197798,"byte_end":197876,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(parser(\"H\"), Err(Err::Incomplete(Needed::new(4))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197877,"byte_end":197943,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":197944,"byte_end":197951,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1769},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":199405,"byte_end":199416,"line_start":73,"line_end":73,"column_start":8,"column_end":19},"name":"tag_no_case","qualname":"::bytes::streaming::tag_no_case","value":"pub fn tag_no_case<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + InputLength + Compare<T>, T: InputLength + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a case insensitive pattern.","sig":null,"attributes":[{"value":"/ Recognizes a case insensitive pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":198589,"byte_end":198631,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":198632,"byte_end":198635,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The input data will be compared to the tag combinator's argument and will return the part of","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":198636,"byte_end":198732,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ the input that matches the argument with no regard to case.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":198733,"byte_end":198796,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":198797,"byte_end":198810,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":198811,"byte_end":198822,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":198823,"byte_end":198888,"line_start":60,"line_end":60,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::tag_no_case;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":198889,"byte_end":198932,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":198933,"byte_end":198936,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn parser(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":198937,"byte_end":198984,"line_start":63,"line_end":63,"column_start":1,"column_end":48}},{"value":"/   tag_no_case(\"hello\")(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":198985,"byte_end":199014,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":199015,"byte_end":199020,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":199021,"byte_end":199024,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"Hello, World!\"), Ok((\", World!\", \"Hello\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":199025,"byte_end":199092,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"hello, World!\"), Ok((\", World!\", \"hello\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":199093,"byte_end":199160,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"HeLlO, World!\"), Ok((\", World!\", \"HeLlO\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":199161,"byte_end":199228,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser(\"Something\"), Err(Err::Error(Error::new(\"Something\", ErrorKind::Tag))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":199229,"byte_end":199323,"line_start":70,"line_end":70,"column_start":1,"column_end":95}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":199324,"byte_end":199389,"line_start":71,"line_end":71,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":199390,"byte_end":199397,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1775},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200858,"byte_end":200864,"line_start":117,"line_end":117,"column_start":8,"column_end":14},"name":"is_not","qualname":"::bytes::streaming::is_not","value":"pub fn is_not<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Parse till certain characters are met.","sig":null,"attributes":[{"value":"/ Parse till certain characters are met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200053,"byte_end":200095,"line_start":96,"line_end":96,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200096,"byte_end":200099,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till one of the characters of the combinator's argument are met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200100,"byte_end":200209,"line_start":98,"line_end":98,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200210,"byte_end":200213,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the matched character.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200214,"byte_end":200259,"line_start":100,"line_end":100,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200260,"byte_end":200263,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It will return a `Err::Incomplete(Needed::new(1))` if the pattern wasn't met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200264,"byte_end":200345,"line_start":102,"line_end":102,"column_start":1,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200346,"byte_end":200359,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200360,"byte_end":200371,"line_start":104,"line_end":104,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200372,"byte_end":200428,"line_start":105,"line_end":105,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::is_not;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200429,"byte_end":200467,"line_start":106,"line_end":106,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200468,"byte_end":200471,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ fn not_space(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200472,"byte_end":200522,"line_start":108,"line_end":108,"column_start":1,"column_end":51}},{"value":"/   is_not(\" \\t\\r\\n\")(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200523,"byte_end":200549,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200550,"byte_end":200555,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200556,"byte_end":200559,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(not_space(\"Hello, World!\"), Ok((\" World!\", \"Hello,\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200560,"byte_end":200630,"line_start":112,"line_end":112,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(not_space(\"Sometimes\\t\"), Ok((\"\\t\", \"Sometimes\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200631,"byte_end":200697,"line_start":113,"line_end":113,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(not_space(\"Nospace\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200698,"byte_end":200773,"line_start":114,"line_end":114,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(not_space(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200774,"byte_end":200842,"line_start":115,"line_end":115,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":200843,"byte_end":200850,"line_start":116,"line_end":116,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1782},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202110,"byte_end":202114,"line_start":153,"line_end":153,"column_start":8,"column_end":12},"name":"is_a","qualname":"::bytes::streaming::is_a","value":"pub fn is_a<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/ where\nInput: InputTakeAtPosition, T: FindToken<<Input as InputTakeAtPosition>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest slice of the matches the pattern.","sig":null,"attributes":[{"value":"/ Returns the longest slice of the matches the pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201175,"byte_end":201232,"line_start":130,"line_end":130,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201233,"byte_end":201236,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice consisting of the characters in provided in the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201237,"byte_end":201329,"line_start":132,"line_end":132,"column_start":1,"column_end":93}},{"value":"/ combinator's argument.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201330,"byte_end":201356,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201357,"byte_end":201360,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Streaming specific","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201361,"byte_end":201385,"line_start":135,"line_end":135,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the pattern wasn't met","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201386,"byte_end":201483,"line_start":136,"line_end":136,"column_start":1,"column_end":98}},{"value":"/ or if the pattern reaches the end of the input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201484,"byte_end":201535,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201536,"byte_end":201549,"line_start":138,"line_end":138,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201550,"byte_end":201561,"line_start":139,"line_end":139,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201562,"byte_end":201618,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::is_a;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201619,"byte_end":201655,"line_start":141,"line_end":141,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201656,"byte_end":201659,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ fn hex(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201660,"byte_end":201704,"line_start":143,"line_end":143,"column_start":1,"column_end":45}},{"value":"/   is_a(\"1234567890ABCDEF\")(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201705,"byte_end":201738,"line_start":144,"line_end":144,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201739,"byte_end":201744,"line_start":145,"line_end":145,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201745,"byte_end":201748,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(hex(\"123 and voila\"), Ok((\" and voila\", \"123\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201749,"byte_end":201813,"line_start":147,"line_end":147,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(hex(\"DEADBEEF and others\"), Ok((\" and others\", \"DEADBEEF\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201814,"byte_end":201890,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(hex(\"BADBABEsomething\"), Ok((\"something\", \"BADBABE\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201891,"byte_end":201961,"line_start":149,"line_end":149,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(hex(\"D15EA5E\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":201962,"byte_end":202031,"line_start":150,"line_end":150,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(hex(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202032,"byte_end":202094,"line_start":151,"line_end":151,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202095,"byte_end":202102,"line_start":152,"line_end":152,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1789},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203335,"byte_end":203345,"line_start":188,"line_end":188,"column_start":8,"column_end":18},"name":"take_while","qualname":"::bytes::streaming::take_while","value":"pub fn take_while<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) that matches the predicate.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202424,"byte_end":202496,"line_start":166,"line_end":166,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202497,"byte_end":202500,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202501,"byte_end":202596,"line_start":168,"line_end":168,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202597,"byte_end":202638,"line_start":169,"line_end":169,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202639,"byte_end":202642,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202643,"byte_end":202667,"line_start":171,"line_end":171,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the pattern reaches the end of the input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202668,"byte_end":202784,"line_start":172,"line_end":172,"column_start":1,"column_end":117}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202785,"byte_end":202798,"line_start":173,"line_end":173,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202799,"byte_end":202810,"line_start":174,"line_end":174,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202811,"byte_end":202867,"line_start":175,"line_end":175,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_while;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202868,"byte_end":202910,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202911,"byte_end":202949,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202950,"byte_end":202953,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":202954,"byte_end":203003,"line_start":179,"line_end":179,"column_start":1,"column_end":50}},{"value":"/   take_while(is_alphabetic)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203004,"byte_end":203038,"line_start":180,"line_end":180,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203039,"byte_end":203044,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203045,"byte_end":203048,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203049,"byte_end":203118,"line_start":183,"line_end":183,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"12345\"), Ok((&b\"12345\"[..], &b\"\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203119,"byte_end":203182,"line_start":184,"line_end":184,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203183,"byte_end":203253,"line_start":185,"line_end":185,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha(b\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203254,"byte_end":203319,"line_start":186,"line_end":186,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203320,"byte_end":203327,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1796},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204596,"byte_end":204607,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::bytes::streaming::take_while1","value":"pub fn take_while1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice that matches the predicate.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203594,"byte_end":203670,"line_start":198,"line_end":198,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203671,"byte_end":203674,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203675,"byte_end":203770,"line_start":200,"line_end":200,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203771,"byte_end":203812,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203813,"byte_end":203816,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err(Err::Error((_, ErrorKind::TakeWhile1)))` if the pattern wasn't met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203817,"byte_end":203911,"line_start":203,"line_end":203,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203912,"byte_end":203915,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203916,"byte_end":203940,"line_start":205,"line_end":205,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` or if the pattern reaches the end of the input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":203941,"byte_end":204060,"line_start":206,"line_end":206,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204061,"byte_end":204064,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204065,"byte_end":204078,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204079,"byte_end":204090,"line_start":209,"line_end":209,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204091,"byte_end":204156,"line_start":210,"line_end":210,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_while1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204157,"byte_end":204200,"line_start":211,"line_end":211,"column_start":1,"column_end":44}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204201,"byte_end":204239,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204240,"byte_end":204243,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ fn alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204244,"byte_end":204293,"line_start":214,"line_end":214,"column_start":1,"column_end":50}},{"value":"/   take_while1(is_alphabetic)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204294,"byte_end":204329,"line_start":215,"line_end":215,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204330,"byte_end":204335,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204336,"byte_end":204339,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204340,"byte_end":204409,"line_start":218,"line_end":218,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204410,"byte_end":204480,"line_start":219,"line_end":219,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhile1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204481,"byte_end":204580,"line_start":220,"line_end":220,"column_start":1,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204581,"byte_end":204588,"line_start":221,"line_end":221,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1803},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":206113,"byte_end":206127,"line_start":260,"line_end":260,"column_start":8,"column_end":22},"name":"take_while_m_n","qualname":"::bytes::streaming::take_while_m_n","value":"pub fn take_while_m_n<F, Input, Error: ParseError<Input>>(usize, usize, F)\n-> /*impl Trait*/ where Input: InputTake + InputIter + InputLength,\nF: Fn(<Input as InputIter>::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (m <= len <= n) input slice  that matches the predicate.","sig":null,"attributes":[{"value":"/ Returns the longest (m <= len <= n) input slice  that matches the predicate.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204916,"byte_end":204996,"line_start":235,"line_end":235,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":204997,"byte_end":205000,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice that matches the given predicate *(a function that","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205001,"byte_end":205096,"line_start":237,"line_end":237,"column_start":1,"column_end":96}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205097,"byte_end":205138,"line_start":238,"line_end":238,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205139,"byte_end":205142,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ It will return an `Err::Error((_, ErrorKind::TakeWhileMN))` if the pattern wasn't met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205143,"byte_end":205233,"line_start":240,"line_end":240,"column_start":1,"column_end":91}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205234,"byte_end":205258,"line_start":241,"line_end":241,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))`  if the pattern reaches the end of the input or is too short.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205259,"byte_end":205392,"line_start":242,"line_end":242,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205393,"byte_end":205396,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205397,"byte_end":205410,"line_start":244,"line_end":244,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205411,"byte_end":205422,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205423,"byte_end":205488,"line_start":246,"line_end":246,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_while_m_n;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205489,"byte_end":205535,"line_start":247,"line_end":247,"column_start":1,"column_end":47}},{"value":"/ use nom::character::is_alphabetic;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205536,"byte_end":205574,"line_start":248,"line_end":248,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205575,"byte_end":205578,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ fn short_alpha(s: &[u8]) -> IResult<&[u8], &[u8]> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205579,"byte_end":205634,"line_start":250,"line_end":250,"column_start":1,"column_end":56}},{"value":"/   take_while_m_n(3, 6, is_alphabetic)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205635,"byte_end":205679,"line_start":251,"line_end":251,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205680,"byte_end":205685,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205686,"byte_end":205689,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(short_alpha(b\"latin123\"), Ok((&b\"123\"[..], &b\"latin\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205690,"byte_end":205765,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(short_alpha(b\"lengthy\"), Ok((&b\"y\"[..], &b\"length\"[..])));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205766,"byte_end":205839,"line_start":255,"line_end":255,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"latin\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205840,"byte_end":205916,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(short_alpha(b\"ed\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205917,"byte_end":205990,"line_start":257,"line_end":257,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(short_alpha(b\"12345\"), Err(Err::Error(Error::new(&b\"12345\"[..], ErrorKind::TakeWhileMN))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":205991,"byte_end":206097,"line_start":258,"line_end":258,"column_start":1,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":206098,"byte_end":206105,"line_start":259,"line_end":259,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1810},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208688,"byte_end":208697,"line_start":343,"line_end":343,"column_start":8,"column_end":17},"name":"take_till","qualname":"::bytes::streaming::take_till","value":"pub fn take_till<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest input slice (if any) till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest input slice (if any) till a predicate is met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":207778,"byte_end":207847,"line_start":320,"line_end":320,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":207848,"byte_end":207851,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":207852,"byte_end":207939,"line_start":322,"line_end":322,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":207940,"byte_end":207981,"line_start":323,"line_end":323,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":207982,"byte_end":207985,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":207986,"byte_end":208010,"line_start":325,"line_end":325,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the match reaches the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208011,"byte_end":208107,"line_start":326,"line_end":326,"column_start":1,"column_end":97}},{"value":"/ end of input or if there was not match.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208108,"byte_end":208151,"line_start":327,"line_end":327,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208152,"byte_end":208155,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208156,"byte_end":208169,"line_start":329,"line_end":329,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208170,"byte_end":208181,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208182,"byte_end":208238,"line_start":331,"line_end":331,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_till;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208239,"byte_end":208280,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208281,"byte_end":208284,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208285,"byte_end":208336,"line_start":334,"line_end":334,"column_start":1,"column_end":52}},{"value":"/   take_till(|c| c == ':')(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208337,"byte_end":208369,"line_start":335,"line_end":335,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208370,"byte_end":208375,"line_start":336,"line_end":336,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208376,"byte_end":208379,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208380,"byte_end":208443,"line_start":338,"line_end":338,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Ok((\":empty matched\", \"\"))); //allowed","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208444,"byte_end":208527,"line_start":339,"line_end":339,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(till_colon(\"12345\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208528,"byte_end":208602,"line_start":340,"line_end":340,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208603,"byte_end":208672,"line_start":341,"line_end":341,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208673,"byte_end":208680,"line_start":342,"line_end":342,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1817},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209897,"byte_end":209907,"line_start":375,"line_end":375,"column_start":8,"column_end":18},"name":"take_till1","qualname":"::bytes::streaming::take_till1","value":"pub fn take_till1<F, Input, Error: ParseError<Input>>(F) -> /*impl Trait*/\nwhere Input: InputTakeAtPosition, F: Fn(<Input as InputTakeAtPosition>::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest (at least 1) input slice till a predicate is met.","sig":null,"attributes":[{"value":"/ Returns the longest (at least 1) input slice till a predicate is met.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":208945,"byte_end":209018,"line_start":353,"line_end":353,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209019,"byte_end":209022,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ The parser will return the longest slice till the given predicate *(a function that","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209023,"byte_end":209110,"line_start":355,"line_end":355,"column_start":1,"column_end":88}},{"value":"/ takes the input and returns a bool)*.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209111,"byte_end":209152,"line_start":356,"line_end":356,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209153,"byte_end":209156,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209157,"byte_end":209181,"line_start":358,"line_end":358,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(1))` if the match reaches the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209182,"byte_end":209278,"line_start":359,"line_end":359,"column_start":1,"column_end":97}},{"value":"/ end of input or if there was not match.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209279,"byte_end":209322,"line_start":360,"line_end":360,"column_start":1,"column_end":44}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209323,"byte_end":209336,"line_start":361,"line_end":361,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209337,"byte_end":209348,"line_start":362,"line_end":362,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209349,"byte_end":209414,"line_start":363,"line_end":363,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_till1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209415,"byte_end":209457,"line_start":364,"line_end":364,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209458,"byte_end":209461,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ fn till_colon(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209462,"byte_end":209513,"line_start":366,"line_end":366,"column_start":1,"column_end":52}},{"value":"/   take_till1(|c| c == ':')(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209514,"byte_end":209547,"line_start":367,"line_end":367,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209548,"byte_end":209553,"line_start":368,"line_end":368,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209554,"byte_end":209557,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(till_colon(\"latin:123\"), Ok((\":123\", \"latin\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209558,"byte_end":209621,"line_start":370,"line_end":370,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(till_colon(\":empty matched\"), Err(Err::Error(Error::new(\":empty matched\", ErrorKind::TakeTill1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209622,"byte_end":209736,"line_start":371,"line_end":371,"column_start":1,"column_end":115}},{"value":"/ assert_eq!(till_colon(\"12345\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209737,"byte_end":209811,"line_start":372,"line_end":372,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(till_colon(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209812,"byte_end":209881,"line_start":373,"line_end":373,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":209882,"byte_end":209889,"line_start":374,"line_end":374,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1824},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211161,"byte_end":211165,"line_start":411,"line_end":411,"column_start":8,"column_end":12},"name":"take","qualname":"::bytes::streaming::take","value":"pub fn take<C, Input, Error: ParseError<Input>>(C) -> /*impl Trait*/ where\nInput: InputIter + InputTake + InputLength, C: ToUsize","parent":null,"children":[],"decl_id":null,"docs":" Returns an input slice containing the first N input elements (Input[..N]).","sig":null,"attributes":[{"value":"/ Returns an input slice containing the first N input elements (Input[..N]).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210214,"byte_end":210292,"line_start":388,"line_end":388,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210293,"byte_end":210296,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210297,"byte_end":210321,"line_start":390,"line_end":390,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* if the input has less than N elements, `take` will","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210322,"byte_end":210396,"line_start":391,"line_end":391,"column_start":1,"column_end":75}},{"value":"/ return a `Err::Incomplete(Needed::new(M))` where M is the number of","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210397,"byte_end":210468,"line_start":392,"line_end":392,"column_start":1,"column_end":72}},{"value":"/ additional bytes the parser would need to succeed.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210469,"byte_end":210523,"line_start":393,"line_end":393,"column_start":1,"column_end":55}},{"value":"/ It is well defined for `&[u8]` as the number of elements is the byte size,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210524,"byte_end":210602,"line_start":394,"line_end":394,"column_start":1,"column_end":79}},{"value":"/ but for types like `&str`, we cannot know how many bytes correspond for","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210603,"byte_end":210678,"line_start":395,"line_end":395,"column_start":1,"column_end":76}},{"value":"/ the next few chars, so the result will be `Err::Incomplete(Needed::Unknown)`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210679,"byte_end":210759,"line_start":396,"line_end":396,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210760,"byte_end":210763,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210764,"byte_end":210777,"line_start":398,"line_end":398,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210778,"byte_end":210789,"line_start":399,"line_end":399,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210790,"byte_end":210846,"line_start":400,"line_end":400,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210847,"byte_end":210883,"line_start":401,"line_end":401,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210884,"byte_end":210887,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ fn take6(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210888,"byte_end":210934,"line_start":403,"line_end":403,"column_start":1,"column_end":47}},{"value":"/   take(6usize)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210935,"byte_end":210956,"line_start":404,"line_end":404,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210957,"byte_end":210962,"line_start":405,"line_end":405,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210963,"byte_end":210966,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(take6(\"1234567\"), Ok((\"7\", \"123456\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":210967,"byte_end":211021,"line_start":407,"line_end":407,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(take6(\"things\"), Ok((\"\", \"things\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211022,"byte_end":211074,"line_start":408,"line_end":408,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(take6(\"short\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211075,"byte_end":211145,"line_start":409,"line_end":409,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211146,"byte_end":211153,"line_start":410,"line_end":410,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1830},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212331,"byte_end":212341,"line_start":446,"line_end":446,"column_start":8,"column_end":18},"name":"take_until","qualname":"::bytes::streaming::take_until","value":"pub fn take_until<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + InputLength + FindSubstring<T>, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the input slice up to the first occurrence of the pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211494,"byte_end":211564,"line_start":425,"line_end":425,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211565,"byte_end":211568,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211569,"byte_end":211604,"line_start":427,"line_end":427,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211605,"byte_end":211608,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211609,"byte_end":211633,"line_start":429,"line_end":429,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(N))` if the input doesn't","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211634,"byte_end":211726,"line_start":430,"line_end":430,"column_start":1,"column_end":93}},{"value":"/ contain the pattern or if the input is smaller than the pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211727,"byte_end":211795,"line_start":431,"line_end":431,"column_start":1,"column_end":69}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211796,"byte_end":211809,"line_start":432,"line_end":432,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211810,"byte_end":211821,"line_start":433,"line_end":433,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211822,"byte_end":211878,"line_start":434,"line_end":434,"column_start":1,"column_end":57}},{"value":"/ use nom::bytes::streaming::take_until;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211879,"byte_end":211921,"line_start":435,"line_end":435,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211922,"byte_end":211925,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211926,"byte_end":211976,"line_start":437,"line_end":437,"column_start":1,"column_end":51}},{"value":"/   take_until(\"eof\")(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":211977,"byte_end":212003,"line_start":438,"line_end":438,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212004,"byte_end":212009,"line_start":439,"line_end":439,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212010,"byte_end":212013,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212014,"byte_end":212088,"line_start":441,"line_end":441,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212089,"byte_end":212170,"line_start":442,"line_end":442,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(until_eof(\"hello, worldeo\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212171,"byte_end":212254,"line_start":443,"line_end":443,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212255,"byte_end":212315,"line_start":444,"line_end":444,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212316,"byte_end":212323,"line_start":445,"line_end":445,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1836},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213696,"byte_end":213707,"line_start":486,"line_end":486,"column_start":8,"column_end":19},"name":"take_until1","qualname":"::bytes::streaming::take_until1","value":"pub fn take_until1<T, Input, Error: ParseError<Input>>(T) -> /*impl Trait*/\nwhere Input: InputTake + InputLength + FindSubstring<T>, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the non empty input slice up to the first occurrence of the pattern.","sig":null,"attributes":[{"value":"/ Returns the non empty input slice up to the first occurrence of the pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212745,"byte_end":212825,"line_start":464,"line_end":464,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212826,"byte_end":212829,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ It doesn't consume the pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212830,"byte_end":212865,"line_start":466,"line_end":466,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212866,"byte_end":212869,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ # Streaming Specific","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212870,"byte_end":212894,"line_start":468,"line_end":468,"column_start":1,"column_end":25}},{"value":"/ *Streaming version* will return a `Err::Incomplete(Needed::new(N))` if the input doesn't","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212895,"byte_end":212987,"line_start":469,"line_end":469,"column_start":1,"column_end":93}},{"value":"/ contain the pattern or if the input is smaller than the pattern.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":212988,"byte_end":213056,"line_start":470,"line_end":470,"column_start":1,"column_end":69}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213057,"byte_end":213070,"line_start":471,"line_end":471,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213071,"byte_end":213082,"line_start":472,"line_end":472,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213083,"byte_end":213148,"line_start":473,"line_end":473,"column_start":1,"column_end":66}},{"value":"/ use nom::bytes::streaming::take_until1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213149,"byte_end":213192,"line_start":474,"line_end":474,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213193,"byte_end":213196,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ fn until_eof(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213197,"byte_end":213247,"line_start":476,"line_end":476,"column_start":1,"column_end":51}},{"value":"/   take_until1(\"eof\")(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213248,"byte_end":213275,"line_start":477,"line_end":477,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213276,"byte_end":213281,"line_start":478,"line_end":478,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213282,"byte_end":213285,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(until_eof(\"hello, worldeof\"), Ok((\"eof\", \"hello, world\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213286,"byte_end":213360,"line_start":480,"line_end":480,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(until_eof(\"hello, world\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213361,"byte_end":213442,"line_start":481,"line_end":481,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(until_eof(\"hello, worldeo\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213443,"byte_end":213526,"line_start":482,"line_end":482,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(until_eof(\"1eof2eof\"), Ok((\"eof2eof\", \"1\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213527,"byte_end":213587,"line_start":483,"line_end":483,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(until_eof(\"eof\"),  Err(Err::Error(Error::new(\"eof\", ErrorKind::TakeUntil))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213588,"byte_end":213680,"line_start":484,"line_end":484,"column_start":1,"column_end":93}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":213681,"byte_end":213688,"line_start":485,"line_end":485,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1842},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214919,"byte_end":214926,"line_start":525,"line_end":525,"column_start":8,"column_end":15},"name":"escaped","qualname":"::bytes::streaming::escaped","value":"pub fn escaped<Input, Error, F, G, O1, O2>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214194,"byte_end":214244,"line_start":505,"line_end":505,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214245,"byte_end":214248,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not accept the control character)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214249,"byte_end":214346,"line_start":507,"line_end":507,"column_start":1,"column_end":98}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214347,"byte_end":214426,"line_start":508,"line_end":508,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214427,"byte_end":214482,"line_start":509,"line_end":509,"column_start":1,"column_end":56}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214483,"byte_end":214496,"line_start":510,"line_end":510,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214497,"byte_end":214504,"line_start":511,"line_end":511,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214505,"byte_end":214561,"line_start":512,"line_end":512,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214562,"byte_end":214605,"line_start":513,"line_end":513,"column_start":1,"column_end":44}},{"value":"/ use nom::bytes::streaming::escaped;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214606,"byte_end":214645,"line_start":514,"line_end":514,"column_start":1,"column_end":40}},{"value":"/ use nom::character::streaming::one_of;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214646,"byte_end":214688,"line_start":515,"line_end":515,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214689,"byte_end":214692,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ fn esc(s: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214693,"byte_end":214737,"line_start":517,"line_end":517,"column_start":1,"column_end":45}},{"value":"/   escaped(digit1, '\\\\', one_of(\"\\\"n\\\\\"))(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214738,"byte_end":214785,"line_start":518,"line_end":518,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214786,"byte_end":214791,"line_start":519,"line_end":519,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214792,"byte_end":214795,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(esc(\"123;\"), Ok((\";\", \"123\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214796,"byte_end":214842,"line_start":521,"line_end":521,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(esc(\"12\\\\\\\"34;\"), Ok((\";\", \"12\\\\\\\"34\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214843,"byte_end":214899,"line_start":522,"line_end":522,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214900,"byte_end":214907,"line_start":523,"line_end":523,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":214908,"byte_end":214911,"line_start":524,"line_end":524,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1854},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217956,"byte_end":217973,"line_start":627,"line_end":627,"column_start":8,"column_end":25},"name":"escaped_transform","qualname":"::bytes::streaming::escaped_transform","value":"pub fn escaped_transform<Input, Error, F, G, O1, O2, ExtendItem,\n                         Output>(F, char, G) -> /*impl Trait*/ where\nInput: Clone + crate::traits::Offset + InputLength + InputTake +\nInputTakeAtPosition + Slice<RangeFrom<usize>> + InputIter,\nInput: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO1: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\nO2: crate::traits::ExtendInto<Item = ExtendItem, Extender = ExtendItem>,\n<Input as InputIter>::Item: crate::traits::AsChar,\nF: Parser<Input, O1, Error>, G: Parser<Input, O2, Error>,\nError: ParseError<Input>","parent":null,"children":[],"decl_id":null,"docs":" Matches a byte string with escaped characters.","sig":null,"attributes":[{"value":"/ Matches a byte string with escaped characters.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":216843,"byte_end":216893,"line_start":595,"line_end":595,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":216894,"byte_end":216897,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ * The first argument matches the normal characters (it must not match the control character)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":216898,"byte_end":216994,"line_start":597,"line_end":597,"column_start":1,"column_end":97}},{"value":"/ * The second argument is the control character (like `\\` in most languages)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":216995,"byte_end":217074,"line_start":598,"line_end":598,"column_start":1,"column_end":80}},{"value":"/ * The third argument matches the escaped characters and transforms them","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217075,"byte_end":217150,"line_start":599,"line_end":599,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217151,"byte_end":217154,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ As an example, the chain `abc\\tdef` could be `abc    def` (it also consumes the control character)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217155,"byte_end":217257,"line_start":601,"line_end":601,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217258,"byte_end":217261,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217262,"byte_end":217269,"line_start":603,"line_end":603,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217270,"byte_end":217326,"line_start":604,"line_end":604,"column_start":1,"column_end":57}},{"value":"/ # use std::str::from_utf8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217327,"byte_end":217357,"line_start":605,"line_end":605,"column_start":1,"column_end":31}},{"value":"/ use nom::bytes::streaming::{escaped_transform, tag};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217358,"byte_end":217414,"line_start":606,"line_end":606,"column_start":1,"column_end":57}},{"value":"/ use nom::character::streaming::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217415,"byte_end":217457,"line_start":607,"line_end":607,"column_start":1,"column_end":43}},{"value":"/ use nom::branch::alt;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217458,"byte_end":217483,"line_start":608,"line_end":608,"column_start":1,"column_end":26}},{"value":"/ use nom::combinator::value;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217484,"byte_end":217515,"line_start":609,"line_end":609,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217516,"byte_end":217519,"line_start":610,"line_end":610,"column_start":1,"column_end":4}},{"value":"/ fn parser(input: &str) -> IResult<&str, String> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217520,"byte_end":217573,"line_start":611,"line_end":611,"column_start":1,"column_end":54}},{"value":"/   escaped_transform(","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217574,"byte_end":217598,"line_start":612,"line_end":612,"column_start":1,"column_end":25}},{"value":"/     alpha1,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217599,"byte_end":217614,"line_start":613,"line_end":613,"column_start":1,"column_end":16}},{"value":"/     '\\\\',","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217615,"byte_end":217628,"line_start":614,"line_end":614,"column_start":1,"column_end":14}},{"value":"/     alt((","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217629,"byte_end":217642,"line_start":615,"line_end":615,"column_start":1,"column_end":14}},{"value":"/       value(\"\\\\\", tag(\"\\\\\")),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217643,"byte_end":217676,"line_start":616,"line_end":616,"column_start":1,"column_end":34}},{"value":"/       value(\"\\\"\", tag(\"\\\"\")),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217677,"byte_end":217710,"line_start":617,"line_end":617,"column_start":1,"column_end":34}},{"value":"/       value(\"\\n\", tag(\"n\")),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217711,"byte_end":217743,"line_start":618,"line_end":618,"column_start":1,"column_end":33}},{"value":"/     ))","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217744,"byte_end":217754,"line_start":619,"line_end":619,"column_start":1,"column_end":11}},{"value":"/   )(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217755,"byte_end":217769,"line_start":620,"line_end":620,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217770,"byte_end":217775,"line_start":621,"line_end":621,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217776,"byte_end":217779,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\\\\\\"cd\\\"\"), Ok((\"\\\"\", String::from(\"ab\\\"cd\"))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217780,"byte_end":217853,"line_start":623,"line_end":623,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217854,"byte_end":217861,"line_start":624,"line_end":624,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/streaming.rs","byte_start":217862,"byte_end":217887,"line_start":625,"line_end":625,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1868},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"character","qualname":"::character","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":2042},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224}],"decl_id":null,"docs":" Character specific parsers and combinators","sig":null,"attributes":[{"value":"/ Character specific parsers and combinators","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220292,"byte_end":220338,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220339,"byte_end":220342,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Functions recognizing specific characters","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220343,"byte_end":220388,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":1869},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::character::complete","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1886},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1896},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1925},{"krate":0,"index":1928},{"krate":0,"index":1934},{"krate":0,"index":1941},{"krate":0,"index":1948},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1978},{"krate":0,"index":1982},{"krate":0,"index":1986},{"krate":0,"index":1990},{"krate":0,"index":1994},{"krate":0,"index":1998},{"krate":0,"index":2002},{"krate":0,"index":2006},{"krate":0,"index":2010},{"krate":0,"index":2014},{"krate":0,"index":2018},{"krate":0,"index":2022},{"krate":0,"index":2026},{"krate":0,"index":2030},{"krate":0,"index":2040},{"krate":0,"index":5921},{"krate":0,"index":5927},{"krate":0,"index":5933},{"krate":0,"index":5939},{"krate":0,"index":5945},{"krate":0,"index":2041},{"krate":0,"index":5951},{"krate":0,"index":5955},{"krate":0,"index":5959},{"krate":0,"index":5963},{"krate":0,"index":5967}],"decl_id":null,"docs":" Character specific parsers and combinators, complete input version.","sig":null,"attributes":[{"value":"/ Character specific parsers and combinators, complete input version.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":222931,"byte_end":223002,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223003,"byte_end":223006,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Functions recognizing specific characters.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223007,"byte_end":223053,"line_start":3,"line_end":3,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1928},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224035,"byte_end":224039,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"char","qualname":"::character::complete::char","value":"pub fn char<I, Error: ParseError<I>>(char) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character.","sig":null,"attributes":[{"value":"/ Recognizes one character.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223412,"byte_end":223441,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223442,"byte_end":223445,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223446,"byte_end":223524,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223525,"byte_end":223538,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223539,"byte_end":223542,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223543,"byte_end":223550,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223551,"byte_end":223608,"line_start":22,"line_end":22,"column_start":1,"column_end":58}},{"value":"/ # use nom::character::complete::char;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223609,"byte_end":223650,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223651,"byte_end":223698,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/     char('a')(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223699,"byte_end":223719,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223720,"byte_end":223725,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223726,"byte_end":223773,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\" abc\"), Err(Err::Error(Error::new(\" abc\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223774,"byte_end":223859,"line_start":28,"line_end":28,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"bc\"), Err(Err::Error(Error::new(\"bc\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223860,"byte_end":223941,"line_start":29,"line_end":29,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":223942,"byte_end":224019,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224020,"byte_end":224027,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1934},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225042,"byte_end":225049,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::character::complete::satisfy","value":"pub fn satisfy<F, I, Error: ParseError<I>>(F) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar,\nF: Fn(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character and checks that it satisfies a predicate","sig":null,"attributes":[{"value":"/ Recognizes one character and checks that it satisfies a predicate","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224424,"byte_end":224493,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224494,"byte_end":224497,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224498,"byte_end":224576,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224577,"byte_end":224590,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224591,"byte_end":224594,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224595,"byte_end":224602,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224603,"byte_end":224668,"line_start":52,"line_end":52,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::satisfy;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224669,"byte_end":224713,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224714,"byte_end":224761,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/     satisfy(|c| c == 'a' || c == 'b')(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224762,"byte_end":224806,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224807,"byte_end":224812,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224813,"byte_end":224860,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"cd\"), Err(Err::Error(Error::new(\"cd\", ErrorKind::Satisfy))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224861,"byte_end":224945,"line_start":58,"line_end":58,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Satisfy))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":224946,"byte_end":225026,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225027,"byte_end":225034,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1941},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226027,"byte_end":226033,"line_start":89,"line_end":89,"column_start":8,"column_end":14},"name":"one_of","qualname":"::character::complete::one_of","value":"pub fn one_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one of the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes one of the provided characters.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225488,"byte_end":225534,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225535,"byte_end":225538,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225539,"byte_end":225617,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225618,"byte_end":225631,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225632,"byte_end":225635,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225636,"byte_end":225643,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225644,"byte_end":225683,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # use nom::character::complete::one_of;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225684,"byte_end":225727,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"abc\")(\"b\"), Ok((\"\", 'b')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225728,"byte_end":225805,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"a\")(\"bc\"), Err(Err::Error((\"bc\", ErrorKind::OneOf))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225806,"byte_end":225910,"line_start":86,"line_end":86,"column_start":1,"column_end":105}},{"value":"/ assert_eq!(one_of::<_, _, (&str, ErrorKind)>(\"a\")(\"\"), Err(Err::Error((\"\", ErrorKind::OneOf))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":225911,"byte_end":226011,"line_start":87,"line_end":87,"column_start":1,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226012,"byte_end":226019,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1948},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227029,"byte_end":227036,"line_start":113,"line_end":113,"column_start":8,"column_end":15},"name":"none_of","qualname":"::character::complete::none_of","value":"pub fn none_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a character that is not in the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes a character that is not in the provided characters.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226465,"byte_end":226531,"line_start":101,"line_end":101,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226532,"byte_end":226535,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226536,"byte_end":226614,"line_start":103,"line_end":103,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226615,"byte_end":226628,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226629,"byte_end":226632,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226633,"byte_end":226640,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226641,"byte_end":226680,"line_start":107,"line_end":107,"column_start":1,"column_end":40}},{"value":"/ # use nom::character::complete::none_of;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226681,"byte_end":226725,"line_start":108,"line_end":108,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"abc\")(\"z\"), Ok((\"\", 'z')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226726,"byte_end":226804,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"ab\")(\"a\"), Err(Err::Error((\"a\", ErrorKind::NoneOf))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226805,"byte_end":226910,"line_start":110,"line_end":110,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(none_of::<_, _, (&str, ErrorKind)>(\"a\")(\"\"), Err(Err::Error((\"\", ErrorKind::NoneOf))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":226911,"byte_end":227013,"line_start":111,"line_end":111,"column_start":1,"column_end":103}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227014,"byte_end":227021,"line_start":112,"line_end":112,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1955},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228032,"byte_end":228036,"line_start":141,"line_end":141,"column_start":8,"column_end":12},"name":"crlf","qualname":"::character::complete::crlf","value":"pub fn crlf<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>>, T: InputIter,\nT: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes the string \"\\r\\n\".","sig":null,"attributes":[{"value":"/ Recognizes the string \"\\r\\n\".","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227470,"byte_end":227503,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227504,"byte_end":227507,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227508,"byte_end":227586,"line_start":127,"line_end":127,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227587,"byte_end":227600,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227601,"byte_end":227604,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227605,"byte_end":227612,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227613,"byte_end":227670,"line_start":131,"line_end":131,"column_start":1,"column_end":58}},{"value":"/ # use nom::character::complete::crlf;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227671,"byte_end":227712,"line_start":132,"line_end":132,"column_start":1,"column_end":42}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227713,"byte_end":227764,"line_start":133,"line_end":133,"column_start":1,"column_end":52}},{"value":"/     crlf(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227765,"byte_end":227784,"line_start":134,"line_end":134,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227785,"byte_end":227790,"line_start":135,"line_end":135,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227791,"byte_end":227794,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227795,"byte_end":227846,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Err(Err::Error(Error::new(\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227847,"byte_end":227938,"line_start":138,"line_end":138,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::CrLf))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":227939,"byte_end":228016,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228017,"byte_end":228024,"line_start":140,"line_end":140,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1958},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":229278,"byte_end":229293,"line_start":177,"line_end":177,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::character::complete::not_line_ending","value":"pub fn not_line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>,\n<T as InputIter>::Item: AsChar, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a string of any char except '\\r\\n' or '\\n'.","sig":null,"attributes":[{"value":"/ Recognizes a string of any char except '\\r\\n' or '\\n'.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228485,"byte_end":228543,"line_start":158,"line_end":158,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228544,"byte_end":228547,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228548,"byte_end":228626,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228627,"byte_end":228640,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228641,"byte_end":228644,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228645,"byte_end":228652,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228653,"byte_end":228718,"line_start":164,"line_end":164,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::not_line_ending;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228719,"byte_end":228771,"line_start":165,"line_end":165,"column_start":1,"column_end":53}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228772,"byte_end":228823,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/     not_line_ending(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228824,"byte_end":228854,"line_start":167,"line_end":167,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228855,"byte_end":228860,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228861,"byte_end":228864,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Ok((\"\\r\\nc\", \"ab\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228865,"byte_end":228920,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"ab\\nc\"), Ok((\"\\nc\", \"ab\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228921,"byte_end":228972,"line_start":171,"line_end":171,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"\", \"abc\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":228973,"byte_end":229020,"line_start":172,"line_end":172,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":229021,"byte_end":229062,"line_start":173,"line_end":173,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(parser(\"a\\rb\\nc\"), Err(Err::Error(Error { input: \"a\\rb\\nc\", code: ErrorKind::Tag })));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":229063,"byte_end":229164,"line_start":174,"line_end":174,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(parser(\"a\\rbc\"), Err(Err::Error(Error { input: \"a\\rbc\", code: ErrorKind::Tag })));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":229165,"byte_end":229262,"line_start":175,"line_end":175,"column_start":1,"column_end":98}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":229263,"byte_end":229270,"line_start":176,"line_end":176,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1962},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230929,"byte_end":230940,"line_start":227,"line_end":227,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::character::complete::line_ending","value":"pub fn line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an end of line (both '\\n' and '\\r\\n').","sig":null,"attributes":[{"value":"/ Recognizes an end of line (both '\\n' and '\\r\\n').","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230325,"byte_end":230378,"line_start":211,"line_end":211,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230379,"byte_end":230382,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230383,"byte_end":230461,"line_start":213,"line_end":213,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230462,"byte_end":230475,"line_start":214,"line_end":214,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230476,"byte_end":230479,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230480,"byte_end":230487,"line_start":216,"line_end":216,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230488,"byte_end":230553,"line_start":217,"line_end":217,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::line_ending;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230554,"byte_end":230602,"line_start":218,"line_end":218,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230603,"byte_end":230654,"line_start":219,"line_end":219,"column_start":1,"column_end":52}},{"value":"/     line_ending(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230655,"byte_end":230681,"line_start":220,"line_end":220,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230682,"byte_end":230687,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230688,"byte_end":230691,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230692,"byte_end":230743,"line_start":223,"line_end":223,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"ab\\r\\nc\"), Err(Err::Error(Error::new(\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230744,"byte_end":230835,"line_start":224,"line_end":224,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::CrLf))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230836,"byte_end":230913,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":230914,"byte_end":230921,"line_start":226,"line_end":226,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1965},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232173,"byte_end":232180,"line_start":262,"line_end":262,"column_start":8,"column_end":15},"name":"newline","qualname":"::character::complete::newline","value":"pub fn newline<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a newline character '\\n'.","sig":null,"attributes":[{"value":"/ Matches a newline character '\\n'.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231601,"byte_end":231638,"line_start":246,"line_end":246,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231639,"byte_end":231642,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231643,"byte_end":231721,"line_start":248,"line_end":248,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231722,"byte_end":231735,"line_start":249,"line_end":249,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231736,"byte_end":231739,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231740,"byte_end":231747,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231748,"byte_end":231813,"line_start":252,"line_end":252,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::newline;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231814,"byte_end":231858,"line_start":253,"line_end":253,"column_start":1,"column_end":45}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231859,"byte_end":231910,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     newline(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231911,"byte_end":231933,"line_start":255,"line_end":255,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231934,"byte_end":231939,"line_start":256,"line_end":256,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231940,"byte_end":231943,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\nc\"), Ok((\"c\", '\\n')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231944,"byte_end":231991,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Err(Err::Error(Error::new(\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":231992,"byte_end":232079,"line_start":259,"line_end":259,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232080,"byte_end":232157,"line_start":260,"line_end":260,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232158,"byte_end":232165,"line_start":261,"line_end":261,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1968},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232910,"byte_end":232913,"line_start":286,"line_end":286,"column_start":8,"column_end":11},"name":"tab","qualname":"::character::complete::tab","value":"pub fn tab<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a tab character '\\t'.","sig":null,"attributes":[{"value":"/ Matches a tab character '\\t'.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232350,"byte_end":232383,"line_start":270,"line_end":270,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232384,"byte_end":232387,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232388,"byte_end":232466,"line_start":272,"line_end":272,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232467,"byte_end":232480,"line_start":273,"line_end":273,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232481,"byte_end":232484,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232485,"byte_end":232492,"line_start":275,"line_end":275,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232493,"byte_end":232558,"line_start":276,"line_end":276,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::tab;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232559,"byte_end":232599,"line_start":277,"line_end":277,"column_start":1,"column_end":41}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232600,"byte_end":232651,"line_start":278,"line_end":278,"column_start":1,"column_end":52}},{"value":"/     tab(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232652,"byte_end":232670,"line_start":279,"line_end":279,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232671,"byte_end":232676,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232677,"byte_end":232680,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"\\tc\"), Ok((\"c\", '\\t')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232681,"byte_end":232728,"line_start":282,"line_end":282,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"\\r\\nc\"), Err(Err::Error(Error::new(\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232729,"byte_end":232816,"line_start":283,"line_end":283,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232817,"byte_end":232894,"line_start":284,"line_end":284,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":232895,"byte_end":232902,"line_start":285,"line_end":285,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1971},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233641,"byte_end":233648,"line_start":309,"line_end":309,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::complete::anychar","value":"pub fn anychar<T, E: ParseError<T>>(T) -> IResult<T, char, E> where\nT: InputIter + InputLength + Slice<RangeFrom<usize>>,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches one byte as a character. Note that the input type will\n accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","sig":null,"attributes":[{"value":"/ Matches one byte as a character. Note that the input type will","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233083,"byte_end":233149,"line_start":294,"line_end":294,"column_start":1,"column_end":67}},{"value":"/ accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233150,"byte_end":233219,"line_start":295,"line_end":295,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233220,"byte_end":233223,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233224,"byte_end":233302,"line_start":297,"line_end":297,"column_start":1,"column_end":79}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233303,"byte_end":233316,"line_start":298,"line_end":298,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233317,"byte_end":233320,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233321,"byte_end":233328,"line_start":300,"line_end":300,"column_start":1,"column_end":8}},{"value":"/ # use nom::{character::complete::anychar, Err, error::{Error, ErrorKind}, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233329,"byte_end":233416,"line_start":301,"line_end":301,"column_start":1,"column_end":88}},{"value":"/ fn parser(input: &str) -> IResult<&str, char> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233417,"byte_end":233468,"line_start":302,"line_end":302,"column_start":1,"column_end":52}},{"value":"/     anychar(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233469,"byte_end":233491,"line_start":303,"line_end":303,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233492,"byte_end":233497,"line_start":304,"line_end":304,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233498,"byte_end":233501,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\",'a')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233502,"byte_end":233548,"line_start":306,"line_end":306,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233549,"byte_end":233625,"line_start":307,"line_end":307,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":233626,"byte_end":233633,"line_start":308,"line_end":308,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1974},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234689,"byte_end":234695,"line_start":341,"line_end":341,"column_start":8,"column_end":14},"name":"alpha0","qualname":"::character::complete::alpha0","value":"pub fn alpha0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234112,"byte_end":234201,"line_start":324,"line_end":324,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234202,"byte_end":234205,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234206,"byte_end":234297,"line_start":326,"line_end":326,"column_start":1,"column_end":92}},{"value":"/ alphabetic character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234298,"byte_end":234324,"line_start":327,"line_end":327,"column_start":1,"column_end":27}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234325,"byte_end":234338,"line_start":328,"line_end":328,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234339,"byte_end":234342,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234343,"byte_end":234350,"line_start":330,"line_end":330,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234351,"byte_end":234407,"line_start":331,"line_end":331,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::alpha0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234408,"byte_end":234451,"line_start":332,"line_end":332,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234452,"byte_end":234503,"line_start":333,"line_end":333,"column_start":1,"column_end":52}},{"value":"/     alpha0(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234504,"byte_end":234525,"line_start":334,"line_end":334,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234526,"byte_end":234531,"line_start":335,"line_end":335,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234532,"byte_end":234535,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"ab1c\"), Ok((\"1c\", \"ab\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234536,"byte_end":234585,"line_start":337,"line_end":337,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"1c\"), Ok((\"1c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234586,"byte_end":234631,"line_start":338,"line_end":338,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234632,"byte_end":234673,"line_start":339,"line_end":339,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234674,"byte_end":234681,"line_start":340,"line_end":340,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1978},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235594,"byte_end":235600,"line_start":366,"line_end":366,"column_start":8,"column_end":14},"name":"alpha1","qualname":"::character::complete::alpha1","value":"pub fn alpha1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234888,"byte_end":234976,"line_start":349,"line_end":349,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234977,"byte_end":234980,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":234981,"byte_end":235059,"line_start":351,"line_end":351,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found  (a non alphabetic character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235060,"byte_end":235146,"line_start":352,"line_end":352,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235147,"byte_end":235160,"line_start":353,"line_end":353,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235161,"byte_end":235164,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235165,"byte_end":235172,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235173,"byte_end":235238,"line_start":356,"line_end":356,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235239,"byte_end":235282,"line_start":357,"line_end":357,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235283,"byte_end":235334,"line_start":358,"line_end":358,"column_start":1,"column_end":52}},{"value":"/     alpha1(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235335,"byte_end":235356,"line_start":359,"line_end":359,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235357,"byte_end":235362,"line_start":360,"line_end":360,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235363,"byte_end":235366,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"aB1c\"), Ok((\"1c\", \"aB\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235367,"byte_end":235416,"line_start":362,"line_end":362,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"1c\"), Err(Err::Error(Error::new(\"1c\", ErrorKind::Alpha))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235417,"byte_end":235499,"line_start":363,"line_end":363,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Alpha))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235500,"byte_end":235578,"line_start":364,"line_end":364,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235579,"byte_end":235586,"line_start":365,"line_end":365,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1982},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236448,"byte_end":236454,"line_start":392,"line_end":392,"column_start":8,"column_end":14},"name":"digit0","qualname":"::character::complete::digit0","value":"pub fn digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical characters: 0-9","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235812,"byte_end":235871,"line_start":374,"line_end":374,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235872,"byte_end":235875,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235876,"byte_end":235954,"line_start":376,"line_end":376,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non digit character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":235955,"byte_end":236035,"line_start":377,"line_end":377,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236036,"byte_end":236049,"line_start":378,"line_end":378,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236050,"byte_end":236053,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236054,"byte_end":236061,"line_start":380,"line_end":380,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236062,"byte_end":236118,"line_start":381,"line_end":381,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::digit0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236119,"byte_end":236162,"line_start":382,"line_end":382,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236163,"byte_end":236214,"line_start":383,"line_end":383,"column_start":1,"column_end":52}},{"value":"/     digit0(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236215,"byte_end":236236,"line_start":384,"line_end":384,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236237,"byte_end":236242,"line_start":385,"line_end":385,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236243,"byte_end":236246,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236247,"byte_end":236294,"line_start":387,"line_end":387,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"21\"), Ok((\"\", \"21\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236295,"byte_end":236340,"line_start":388,"line_end":388,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(parser(\"a21c\"), Ok((\"a21c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236341,"byte_end":236390,"line_start":389,"line_end":389,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236391,"byte_end":236432,"line_start":390,"line_end":390,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236433,"byte_end":236440,"line_start":391,"line_end":391,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1986},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237319,"byte_end":237325,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"digit1","qualname":"::character::complete::digit1","value":"pub fn digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical characters: 0-9","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236651,"byte_end":236709,"line_start":400,"line_end":400,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236710,"byte_end":236713,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236714,"byte_end":236792,"line_start":402,"line_end":402,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non digit character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236793,"byte_end":236873,"line_start":403,"line_end":403,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236874,"byte_end":236887,"line_start":404,"line_end":404,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236888,"byte_end":236891,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236892,"byte_end":236899,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236900,"byte_end":236965,"line_start":407,"line_end":407,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::digit1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":236966,"byte_end":237009,"line_start":408,"line_end":408,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237010,"byte_end":237061,"line_start":409,"line_end":409,"column_start":1,"column_end":52}},{"value":"/     digit1(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237062,"byte_end":237083,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237084,"byte_end":237089,"line_start":411,"line_end":411,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237090,"byte_end":237093,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237094,"byte_end":237141,"line_start":413,"line_end":413,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"c1\"), Err(Err::Error(Error::new(\"c1\", ErrorKind::Digit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237142,"byte_end":237224,"line_start":414,"line_end":414,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Digit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237225,"byte_end":237303,"line_start":415,"line_end":415,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237304,"byte_end":237311,"line_start":416,"line_end":416,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1990},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238125,"byte_end":238135,"line_start":441,"line_end":441,"column_start":8,"column_end":18},"name":"hex_digit0","qualname":"::character::complete::hex_digit0","value":"pub fn hex_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237541,"byte_end":237622,"line_start":425,"line_end":425,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237623,"byte_end":237626,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237627,"byte_end":237748,"line_start":427,"line_end":427,"column_start":1,"column_end":122}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237749,"byte_end":237762,"line_start":428,"line_end":428,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237763,"byte_end":237766,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237767,"byte_end":237774,"line_start":430,"line_end":430,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237775,"byte_end":237831,"line_start":431,"line_end":431,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::hex_digit0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237832,"byte_end":237879,"line_start":432,"line_end":432,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237880,"byte_end":237931,"line_start":433,"line_end":433,"column_start":1,"column_end":52}},{"value":"/     hex_digit0(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237932,"byte_end":237957,"line_start":434,"line_end":434,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237958,"byte_end":237963,"line_start":435,"line_end":435,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237964,"byte_end":237967,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":237968,"byte_end":238017,"line_start":437,"line_end":437,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238018,"byte_end":238067,"line_start":438,"line_end":438,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238068,"byte_end":238109,"line_start":439,"line_end":439,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238110,"byte_end":238117,"line_start":440,"line_end":440,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1994},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239049,"byte_end":239059,"line_start":465,"line_end":465,"column_start":8,"column_end":18},"name":"hex_digit1","qualname":"::character::complete::hex_digit1","value":"pub fn hex_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238331,"byte_end":238411,"line_start":448,"line_end":448,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238412,"byte_end":238415,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238416,"byte_end":238494,"line_start":450,"line_end":450,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238495,"byte_end":238587,"line_start":451,"line_end":451,"column_start":1,"column_end":93}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238588,"byte_end":238601,"line_start":452,"line_end":452,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238602,"byte_end":238605,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238606,"byte_end":238613,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238614,"byte_end":238679,"line_start":455,"line_end":455,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::hex_digit1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238680,"byte_end":238727,"line_start":456,"line_end":456,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238728,"byte_end":238779,"line_start":457,"line_end":457,"column_start":1,"column_end":52}},{"value":"/     hex_digit1(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238780,"byte_end":238805,"line_start":458,"line_end":458,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238806,"byte_end":238811,"line_start":459,"line_end":459,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238812,"byte_end":238815,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238816,"byte_end":238865,"line_start":461,"line_end":461,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::HexDigit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238866,"byte_end":238951,"line_start":462,"line_end":462,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::HexDigit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":238952,"byte_end":239033,"line_start":463,"line_end":463,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239034,"byte_end":239041,"line_start":464,"line_end":464,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1998},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239828,"byte_end":239838,"line_start":490,"line_end":490,"column_start":8,"column_end":18},"name":"oct_digit0","qualname":"::character::complete::oct_digit0","value":"pub fn oct_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes zero or more octal characters: 0-7","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239278,"byte_end":239327,"line_start":473,"line_end":473,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239328,"byte_end":239331,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non octal","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239332,"byte_end":239429,"line_start":475,"line_end":475,"column_start":1,"column_end":98}},{"value":"/ digit character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239430,"byte_end":239451,"line_start":476,"line_end":476,"column_start":1,"column_end":22}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239452,"byte_end":239465,"line_start":477,"line_end":477,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239466,"byte_end":239469,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239470,"byte_end":239477,"line_start":479,"line_end":479,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239478,"byte_end":239534,"line_start":480,"line_end":480,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::oct_digit0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239535,"byte_end":239582,"line_start":481,"line_end":481,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239583,"byte_end":239634,"line_start":482,"line_end":482,"column_start":1,"column_end":52}},{"value":"/     oct_digit0(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239635,"byte_end":239660,"line_start":483,"line_end":483,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239661,"byte_end":239666,"line_start":484,"line_end":484,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239667,"byte_end":239670,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239671,"byte_end":239720,"line_start":486,"line_end":486,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239721,"byte_end":239770,"line_start":487,"line_end":487,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239771,"byte_end":239812,"line_start":488,"line_end":488,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":239813,"byte_end":239820,"line_start":489,"line_end":489,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2002},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240715,"byte_end":240725,"line_start":515,"line_end":515,"column_start":8,"column_end":18},"name":"oct_digit1","qualname":"::character::complete::oct_digit1","value":"pub fn oct_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes one or more octal characters: 0-7","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240035,"byte_end":240083,"line_start":498,"line_end":498,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240084,"byte_end":240087,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240088,"byte_end":240166,"line_start":500,"line_end":500,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non octal digit character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240167,"byte_end":240253,"line_start":501,"line_end":501,"column_start":1,"column_end":87}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240254,"byte_end":240267,"line_start":502,"line_end":502,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240268,"byte_end":240271,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240272,"byte_end":240279,"line_start":504,"line_end":504,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240280,"byte_end":240345,"line_start":505,"line_end":505,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::oct_digit1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240346,"byte_end":240393,"line_start":506,"line_end":506,"column_start":1,"column_end":48}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240394,"byte_end":240445,"line_start":507,"line_end":507,"column_start":1,"column_end":52}},{"value":"/     oct_digit1(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240446,"byte_end":240471,"line_start":508,"line_end":508,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240472,"byte_end":240477,"line_start":509,"line_end":509,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240478,"byte_end":240481,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240482,"byte_end":240531,"line_start":511,"line_end":511,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::OctDigit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240532,"byte_end":240617,"line_start":512,"line_end":512,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::OctDigit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240618,"byte_end":240699,"line_start":513,"line_end":513,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240700,"byte_end":240707,"line_start":514,"line_end":514,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2006},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241544,"byte_end":241557,"line_start":540,"line_end":540,"column_start":8,"column_end":21},"name":"alphanumeric0","qualname":"::character::complete::alphanumeric0","value":"pub fn alphanumeric0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":240944,"byte_end":241028,"line_start":523,"line_end":523,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241029,"byte_end":241032,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241033,"byte_end":241124,"line_start":525,"line_end":525,"column_start":1,"column_end":92}},{"value":"/ alphanumerical character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241125,"byte_end":241155,"line_start":526,"line_end":526,"column_start":1,"column_end":31}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241156,"byte_end":241169,"line_start":527,"line_end":527,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241170,"byte_end":241173,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241174,"byte_end":241181,"line_start":529,"line_end":529,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241182,"byte_end":241238,"line_start":530,"line_end":530,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::alphanumeric0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241239,"byte_end":241289,"line_start":531,"line_end":531,"column_start":1,"column_end":51}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241290,"byte_end":241341,"line_start":532,"line_end":532,"column_start":1,"column_end":52}},{"value":"/     alphanumeric0(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241342,"byte_end":241370,"line_start":533,"line_end":533,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241371,"byte_end":241376,"line_start":534,"line_end":534,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241377,"byte_end":241380,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241381,"byte_end":241434,"line_start":536,"line_end":536,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"&Z21c\"), Ok((\"&Z21c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241435,"byte_end":241486,"line_start":537,"line_end":537,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241487,"byte_end":241528,"line_start":538,"line_end":538,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241529,"byte_end":241536,"line_start":539,"line_end":539,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2010},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242491,"byte_end":242504,"line_start":565,"line_end":565,"column_start":8,"column_end":21},"name":"alphanumeric1","qualname":"::character::complete::alphanumeric1","value":"pub fn alphanumeric1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241753,"byte_end":241836,"line_start":548,"line_end":548,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241837,"byte_end":241840,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241841,"byte_end":241919,"line_start":550,"line_end":550,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":241920,"byte_end":242009,"line_start":551,"line_end":551,"column_start":1,"column_end":90}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242010,"byte_end":242023,"line_start":552,"line_end":552,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242024,"byte_end":242027,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242028,"byte_end":242035,"line_start":554,"line_end":554,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242036,"byte_end":242101,"line_start":555,"line_end":555,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::alphanumeric1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242102,"byte_end":242152,"line_start":556,"line_end":556,"column_start":1,"column_end":51}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242153,"byte_end":242204,"line_start":557,"line_end":557,"column_start":1,"column_end":52}},{"value":"/     alphanumeric1(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242205,"byte_end":242233,"line_start":558,"line_end":558,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242234,"byte_end":242239,"line_start":559,"line_end":559,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242240,"byte_end":242243,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242244,"byte_end":242297,"line_start":561,"line_end":561,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"&H2\"), Err(Err::Error(Error::new(\"&H2\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242298,"byte_end":242389,"line_start":562,"line_end":562,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242390,"byte_end":242475,"line_start":563,"line_end":563,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242476,"byte_end":242483,"line_start":564,"line_end":564,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2014},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243261,"byte_end":243267,"line_start":590,"line_end":590,"column_start":8,"column_end":14},"name":"space0","qualname":"::character::complete::space0","value":"pub fn space0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces and tabs.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242726,"byte_end":242770,"line_start":573,"line_end":573,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242771,"byte_end":242774,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return the whole input if no terminating token is found (a non space","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242775,"byte_end":242872,"line_start":575,"line_end":575,"column_start":1,"column_end":98}},{"value":"/ character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242873,"byte_end":242888,"line_start":576,"line_end":576,"column_start":1,"column_end":16}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242889,"byte_end":242902,"line_start":577,"line_end":577,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242903,"byte_end":242906,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242907,"byte_end":242914,"line_start":579,"line_end":579,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242915,"byte_end":242971,"line_start":580,"line_end":580,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::space0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":242972,"byte_end":243015,"line_start":581,"line_end":581,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243016,"byte_end":243067,"line_start":582,"line_end":582,"column_start":1,"column_end":52}},{"value":"/     space0(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243068,"byte_end":243089,"line_start":583,"line_end":583,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243090,"byte_end":243095,"line_start":584,"line_end":584,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243096,"byte_end":243099,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243100,"byte_end":243153,"line_start":586,"line_end":586,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243154,"byte_end":243203,"line_start":587,"line_end":587,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243204,"byte_end":243245,"line_start":588,"line_end":588,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243246,"byte_end":243253,"line_start":589,"line_end":589,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2018},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244173,"byte_end":244179,"line_start":618,"line_end":618,"column_start":8,"column_end":14},"name":"space1","qualname":"::character::complete::space1","value":"pub fn space1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces and tabs.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243514,"byte_end":243557,"line_start":601,"line_end":601,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243558,"byte_end":243561,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will return an error if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243562,"byte_end":243640,"line_start":603,"line_end":603,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non space character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243641,"byte_end":243721,"line_start":604,"line_end":604,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243722,"byte_end":243735,"line_start":605,"line_end":605,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243736,"byte_end":243739,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243740,"byte_end":243747,"line_start":607,"line_end":607,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243748,"byte_end":243813,"line_start":608,"line_end":608,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::space1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243814,"byte_end":243857,"line_start":609,"line_end":609,"column_start":1,"column_end":44}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243858,"byte_end":243909,"line_start":610,"line_end":610,"column_start":1,"column_end":52}},{"value":"/     space1(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243910,"byte_end":243931,"line_start":611,"line_end":611,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243932,"byte_end":243937,"line_start":612,"line_end":612,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243938,"byte_end":243941,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243942,"byte_end":243995,"line_start":614,"line_end":614,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::Space))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":243996,"byte_end":244078,"line_start":615,"line_end":615,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::Space))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244079,"byte_end":244157,"line_start":616,"line_end":616,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244158,"byte_end":244165,"line_start":617,"line_end":617,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2022},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245047,"byte_end":245058,"line_start":649,"line_end":649,"column_start":8,"column_end":19},"name":"multispace0","qualname":"::character::complete::multispace0","value":"pub fn multispace0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244464,"byte_end":244538,"line_start":632,"line_end":632,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244539,"byte_end":244542,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: will return the whole input if no terminating token is found (a non space","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244543,"byte_end":244640,"line_start":634,"line_end":634,"column_start":1,"column_end":98}},{"value":"/ character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244641,"byte_end":244656,"line_start":635,"line_end":635,"column_start":1,"column_end":16}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244657,"byte_end":244670,"line_start":636,"line_end":636,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244671,"byte_end":244674,"line_start":637,"line_end":637,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244675,"byte_end":244682,"line_start":638,"line_end":638,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244683,"byte_end":244739,"line_start":639,"line_end":639,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::complete::multispace0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244740,"byte_end":244788,"line_start":640,"line_end":640,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244789,"byte_end":244840,"line_start":641,"line_end":641,"column_start":1,"column_end":52}},{"value":"/     multispace0(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244841,"byte_end":244867,"line_start":642,"line_end":642,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244868,"byte_end":244873,"line_start":643,"line_end":643,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244874,"byte_end":244877,"line_start":644,"line_end":644,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244878,"byte_end":244939,"line_start":645,"line_end":645,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244940,"byte_end":244989,"line_start":646,"line_end":646,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(parser(\"\"), Ok((\"\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":244990,"byte_end":245031,"line_start":647,"line_end":647,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245032,"byte_end":245039,"line_start":648,"line_end":648,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2026},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246048,"byte_end":246059,"line_start":677,"line_end":677,"column_start":8,"column_end":19},"name":"multispace1","qualname":"::character::complete::multispace1","value":"pub fn multispace1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245331,"byte_end":245404,"line_start":660,"line_end":660,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245405,"byte_end":245408,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: will return an error if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245409,"byte_end":245487,"line_start":662,"line_end":662,"column_start":1,"column_end":79}},{"value":"/ or the whole input if no terminating token is found (a non space character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245488,"byte_end":245568,"line_start":663,"line_end":663,"column_start":1,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245569,"byte_end":245582,"line_start":664,"line_end":664,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245583,"byte_end":245586,"line_start":665,"line_end":665,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245587,"byte_end":245594,"line_start":666,"line_end":666,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245595,"byte_end":245660,"line_start":667,"line_end":667,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::complete::multispace1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245661,"byte_end":245709,"line_start":668,"line_end":668,"column_start":1,"column_end":49}},{"value":"/ fn parser(input: &str) -> IResult<&str, &str> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245710,"byte_end":245761,"line_start":669,"line_end":669,"column_start":1,"column_end":52}},{"value":"/     multispace1(input)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245762,"byte_end":245788,"line_start":670,"line_end":670,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245789,"byte_end":245794,"line_start":671,"line_end":671,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245795,"byte_end":245798,"line_start":672,"line_end":672,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245799,"byte_end":245860,"line_start":673,"line_end":673,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(\"H2\"), Err(Err::Error(Error::new(\"H2\", ErrorKind::MultiSpace))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245861,"byte_end":245948,"line_start":674,"line_end":674,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Error(Error::new(\"\", ErrorKind::MultiSpace))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":245949,"byte_end":246032,"line_start":675,"line_end":675,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246033,"byte_end":246040,"line_start":676,"line_end":676,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5921},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249289,"byte_end":249291,"line_start":768,"line_end":768,"column_start":9,"column_end":11},"name":"i8","qualname":"::character::complete::i8","value":"pub fn i8<T, E: ParseError<T>>(T) -> IResult<T, i8, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246828,"byte_end":246876,"line_start":712,"line_end":712,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246885,"byte_end":246888,"line_start":713,"line_end":713,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246897,"byte_end":246954,"line_start":714,"line_end":714,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5927},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249292,"byte_end":249295,"line_start":768,"line_end":768,"column_start":12,"column_end":15},"name":"i16","qualname":"::character::complete::i16","value":"pub fn i16<T, E: ParseError<T>>(T) -> IResult<T, i16, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246828,"byte_end":246876,"line_start":712,"line_end":712,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246885,"byte_end":246888,"line_start":713,"line_end":713,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246897,"byte_end":246954,"line_start":714,"line_end":714,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5933},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249296,"byte_end":249299,"line_start":768,"line_end":768,"column_start":16,"column_end":19},"name":"i32","qualname":"::character::complete::i32","value":"pub fn i32<T, E: ParseError<T>>(T) -> IResult<T, i32, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246828,"byte_end":246876,"line_start":712,"line_end":712,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246885,"byte_end":246888,"line_start":713,"line_end":713,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246897,"byte_end":246954,"line_start":714,"line_end":714,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5939},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249300,"byte_end":249303,"line_start":768,"line_end":768,"column_start":20,"column_end":23},"name":"i64","qualname":"::character::complete::i64","value":"pub fn i64<T, E: ParseError<T>>(T) -> IResult<T, i64, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246828,"byte_end":246876,"line_start":712,"line_end":712,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246885,"byte_end":246888,"line_start":713,"line_end":713,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246897,"byte_end":246954,"line_start":714,"line_end":714,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5945},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249304,"byte_end":249308,"line_start":768,"line_end":768,"column_start":24,"column_end":28},"name":"i128","qualname":"::character::complete::i128","value":"pub fn i128<T, E: ParseError<T>>(T) -> IResult<T, i128, E> where\nT: InputIter + Slice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246828,"byte_end":246876,"line_start":712,"line_end":712,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246885,"byte_end":246888,"line_start":713,"line_end":713,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":246897,"byte_end":246954,"line_start":714,"line_end":714,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5951},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":250798,"byte_end":250800,"line_start":811,"line_end":811,"column_start":10,"column_end":12},"name":"u8","qualname":"::character::complete::u8","value":"pub fn u8<T, E: ParseError<T>>(T) -> IResult<T, u8, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249388,"byte_end":249436,"line_start":774,"line_end":774,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249445,"byte_end":249448,"line_start":775,"line_end":775,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249457,"byte_end":249514,"line_start":776,"line_end":776,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5955},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":250801,"byte_end":250804,"line_start":811,"line_end":811,"column_start":13,"column_end":16},"name":"u16","qualname":"::character::complete::u16","value":"pub fn u16<T, E: ParseError<T>>(T) -> IResult<T, u16, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249388,"byte_end":249436,"line_start":774,"line_end":774,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249445,"byte_end":249448,"line_start":775,"line_end":775,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249457,"byte_end":249514,"line_start":776,"line_end":776,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5959},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":250805,"byte_end":250808,"line_start":811,"line_end":811,"column_start":17,"column_end":20},"name":"u32","qualname":"::character::complete::u32","value":"pub fn u32<T, E: ParseError<T>>(T) -> IResult<T, u32, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249388,"byte_end":249436,"line_start":774,"line_end":774,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249445,"byte_end":249448,"line_start":775,"line_end":775,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249457,"byte_end":249514,"line_start":776,"line_end":776,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5963},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":250809,"byte_end":250812,"line_start":811,"line_end":811,"column_start":21,"column_end":24},"name":"u64","qualname":"::character::complete::u64","value":"pub fn u64<T, E: ParseError<T>>(T) -> IResult<T, u64, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249388,"byte_end":249436,"line_start":774,"line_end":774,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249445,"byte_end":249448,"line_start":775,"line_end":775,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249457,"byte_end":249514,"line_start":776,"line_end":776,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5967},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":250813,"byte_end":250817,"line_start":811,"line_end":811,"column_start":25,"column_end":29},"name":"u128","qualname":"::character::complete::u128","value":"pub fn u128<T, E: ParseError<T>>(T) -> IResult<T, u128, E> where\nT: InputIter + Slice<RangeFrom<usize>> + InputLength,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249388,"byte_end":249436,"line_start":774,"line_end":774,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249445,"byte_end":249448,"line_start":775,"line_end":775,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/complete.rs","byte_start":249457,"byte_end":249514,"line_start":776,"line_end":776,"column_start":9,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":2042},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::character::streaming","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","parent":null,"children":[{"krate":0,"index":2043},{"krate":0,"index":2046},{"krate":0,"index":2049},{"krate":0,"index":2052},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2059},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2069},{"krate":0,"index":2072},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2082},{"krate":0,"index":2085},{"krate":0,"index":2088},{"krate":0,"index":2091},{"krate":0,"index":2094},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2101},{"krate":0,"index":2104},{"krate":0,"index":2110},{"krate":0,"index":2117},{"krate":0,"index":2124},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2147},{"krate":0,"index":2150},{"krate":0,"index":2154},{"krate":0,"index":2158},{"krate":0,"index":2162},{"krate":0,"index":2166},{"krate":0,"index":2170},{"krate":0,"index":2174},{"krate":0,"index":2178},{"krate":0,"index":2182},{"krate":0,"index":2186},{"krate":0,"index":2190},{"krate":0,"index":2194},{"krate":0,"index":2198},{"krate":0,"index":2202},{"krate":0,"index":2206},{"krate":0,"index":2216},{"krate":0,"index":5971},{"krate":0,"index":5977},{"krate":0,"index":5983},{"krate":0,"index":5989},{"krate":0,"index":5995},{"krate":0,"index":2217},{"krate":0,"index":6001},{"krate":0,"index":6005},{"krate":0,"index":6009},{"krate":0,"index":6013},{"krate":0,"index":6017}],"decl_id":null,"docs":" Character specific parsers and combinators, streaming version","sig":null,"attributes":[{"value":"/ Character specific parsers and combinators, streaming version","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":263635,"byte_end":263700,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":263701,"byte_end":263704,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Functions recognizing specific characters","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":263705,"byte_end":263750,"line_start":3,"line_end":3,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":2104},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264674,"byte_end":264678,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"char","qualname":"::character::streaming::char","value":"pub fn char<I, Error: ParseError<I>>(char) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character.","sig":null,"attributes":[{"value":"/ Recognizes one character.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264117,"byte_end":264146,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264147,"byte_end":264150,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264151,"byte_end":264252,"line_start":18,"line_end":18,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264253,"byte_end":264266,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264267,"byte_end":264270,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264271,"byte_end":264278,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264279,"byte_end":264344,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::char;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264345,"byte_end":264387,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264388,"byte_end":264435,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/     char('a')(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264436,"byte_end":264456,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264457,"byte_end":264462,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264463,"byte_end":264510,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"bc\"), Err(Err::Error(Error::new(\"bc\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264511,"byte_end":264592,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264593,"byte_end":264658,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":264659,"byte_end":264666,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2110},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265792,"byte_end":265799,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::character::streaming::satisfy","value":"pub fn satisfy<F, I, Error: ParseError<I>>(F) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar,\nF: Fn(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one character and checks that it satisfies a predicate","sig":null,"attributes":[{"value":"/ Recognizes one character and checks that it satisfies a predicate","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265164,"byte_end":265233,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265234,"byte_end":265237,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265238,"byte_end":265339,"line_start":48,"line_end":48,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265340,"byte_end":265353,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265354,"byte_end":265357,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265358,"byte_end":265365,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{ErrorKind, Error}, Needed, IResult};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265366,"byte_end":265431,"line_start":52,"line_end":52,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::satisfy;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265432,"byte_end":265477,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/ fn parser(i: &str) -> IResult<&str, char> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265478,"byte_end":265525,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/     satisfy(|c| c == 'a' || c == 'b')(i)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265526,"byte_end":265570,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265571,"byte_end":265576,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(parser(\"abc\"), Ok((\"bc\", 'a')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265577,"byte_end":265624,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"cd\"), Err(Err::Error(Error::new(\"cd\", ErrorKind::Satisfy))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265625,"byte_end":265709,"line_start":58,"line_end":58,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(parser(\"\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265710,"byte_end":265776,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":265777,"byte_end":265784,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2117},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266863,"byte_end":266869,"line_start":90,"line_end":90,"column_start":8,"column_end":14},"name":"one_of","qualname":"::character::streaming::one_of","value":"pub fn one_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one of the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes one of the provided characters.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266304,"byte_end":266350,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266351,"byte_end":266354,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266355,"byte_end":266456,"line_start":80,"line_end":80,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266457,"byte_end":266470,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266471,"byte_end":266474,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266475,"byte_end":266482,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266483,"byte_end":266530,"line_start":84,"line_end":84,"column_start":1,"column_end":48}},{"value":"/ # use nom::character::streaming::one_of;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266531,"byte_end":266575,"line_start":85,"line_end":85,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"abc\")(\"b\"), Ok((\"\", 'b')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266576,"byte_end":266650,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"a\")(\"bc\"), Err(Err::Error((\"bc\", ErrorKind::OneOf))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266651,"byte_end":266752,"line_start":87,"line_end":87,"column_start":1,"column_end":102}},{"value":"/ assert_eq!(one_of::<_, _, (_, ErrorKind)>(\"a\")(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266753,"byte_end":266847,"line_start":88,"line_end":88,"column_start":1,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":266848,"byte_end":266855,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2124},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267949,"byte_end":267956,"line_start":115,"line_end":115,"column_start":8,"column_end":15},"name":"none_of","qualname":"::character::streaming::none_of","value":"pub fn none_of<I, T, Error: ParseError<I>>(T) -> /*impl Trait*/ where\nI: Slice<RangeFrom<usize>> + InputIter, <I as InputIter>::Item: AsChar + Copy,\nT: FindToken<<I as InputIter>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a character that is not in the provided characters.","sig":null,"attributes":[{"value":"/ Recognizes a character that is not in the provided characters.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267366,"byte_end":267432,"line_start":103,"line_end":103,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267433,"byte_end":267436,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267437,"byte_end":267538,"line_start":105,"line_end":105,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267539,"byte_end":267552,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267553,"byte_end":267556,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267557,"byte_end":267564,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267565,"byte_end":267612,"line_start":109,"line_end":109,"column_start":1,"column_end":48}},{"value":"/ # use nom::character::streaming::none_of;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267613,"byte_end":267658,"line_start":110,"line_end":110,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"abc\")(\"z\"), Ok((\"\", 'z')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267659,"byte_end":267734,"line_start":111,"line_end":111,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"ab\")(\"a\"), Err(Err::Error((\"a\", ErrorKind::NoneOf))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267735,"byte_end":267837,"line_start":112,"line_end":112,"column_start":1,"column_end":103}},{"value":"/ assert_eq!(none_of::<_, _, (_, ErrorKind)>(\"a\")(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267838,"byte_end":267933,"line_start":113,"line_end":113,"column_start":1,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":267934,"byte_end":267941,"line_start":114,"line_end":114,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2131},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268993,"byte_end":268997,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"crlf","qualname":"::character::streaming::crlf","value":"pub fn crlf<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes the string \"\\r\\n\".","sig":null,"attributes":[{"value":"/ Recognizes the string \"\\r\\n\".","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268455,"byte_end":268488,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268489,"byte_end":268492,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268493,"byte_end":268594,"line_start":130,"line_end":130,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268595,"byte_end":268608,"line_start":131,"line_end":131,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268609,"byte_end":268612,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268613,"byte_end":268620,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268621,"byte_end":268677,"line_start":134,"line_end":134,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::crlf;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268678,"byte_end":268720,"line_start":135,"line_end":135,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268721,"byte_end":268791,"line_start":136,"line_end":136,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Err(Err::Error((\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268792,"byte_end":268892,"line_start":137,"line_end":137,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(crlf::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268893,"byte_end":268977,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":268978,"byte_end":268985,"line_start":139,"line_end":139,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2134},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":270352,"byte_end":270367,"line_start":171,"line_end":171,"column_start":8,"column_end":23},"name":"not_line_ending","qualname":"::character::streaming::not_line_ending","value":"pub fn not_line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>,\n<T as InputIter>::Item: AsChar, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a string of any char except '\\r\\n' or '\\n'.","sig":null,"attributes":[{"value":"/ Recognizes a string of any char except '\\r\\n' or '\\n'.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":269523,"byte_end":269581,"line_start":157,"line_end":157,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":269582,"byte_end":269585,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":269586,"byte_end":269687,"line_start":159,"line_end":159,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":269688,"byte_end":269701,"line_start":160,"line_end":160,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":269702,"byte_end":269705,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":269706,"byte_end":269713,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::{Error, ErrorKind}, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":269714,"byte_end":269779,"line_start":163,"line_end":163,"column_start":1,"column_end":66}},{"value":"/ # use nom::character::streaming::not_line_ending;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":269780,"byte_end":269833,"line_start":164,"line_end":164,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Ok((\"\\r\\nc\", \"ab\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":269834,"byte_end":269919,"line_start":165,"line_end":165,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"abc\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":269920,"byte_end":270019,"line_start":166,"line_end":166,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::Unknown)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":270020,"byte_end":270116,"line_start":167,"line_end":167,"column_start":1,"column_end":97}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"a\\rb\\nc\"), Err(Err::Error((\"a\\rb\\nc\", ErrorKind::Tag ))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":270117,"byte_end":270228,"line_start":168,"line_end":168,"column_start":1,"column_end":112}},{"value":"/ assert_eq!(not_line_ending::<_, (_, ErrorKind)>(\"a\\rbc\"), Err(Err::Error((\"a\\rbc\", ErrorKind::Tag ))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":270229,"byte_end":270336,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":270337,"byte_end":270344,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2138},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":272074,"byte_end":272085,"line_start":218,"line_end":218,"column_start":8,"column_end":19},"name":"line_ending","qualname":"::character::streaming::line_ending","value":"pub fn line_ending<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<Range<usize>> + Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: InputIter + InputLength, T: Compare<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an end of line (both '\\n' and '\\r\\n').","sig":null,"attributes":[{"value":"/ Recognizes an end of line (both '\\n' and '\\r\\n').","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":271488,"byte_end":271541,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":271542,"byte_end":271545,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":271546,"byte_end":271647,"line_start":208,"line_end":208,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":271648,"byte_end":271661,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":271662,"byte_end":271665,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":271666,"byte_end":271673,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":271674,"byte_end":271730,"line_start":212,"line_end":212,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::line_ending;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":271731,"byte_end":271780,"line_start":213,"line_end":213,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"\\r\\nc\"), Ok((\"c\", \"\\r\\n\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":271781,"byte_end":271858,"line_start":214,"line_end":214,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"ab\\r\\nc\"), Err(Err::Error((\"ab\\r\\nc\", ErrorKind::CrLf))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":271859,"byte_end":271966,"line_start":215,"line_end":215,"column_start":1,"column_end":108}},{"value":"/ assert_eq!(line_ending::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":271967,"byte_end":272058,"line_start":216,"line_end":216,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":272059,"byte_end":272066,"line_start":217,"line_end":217,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2141},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273364,"byte_end":273371,"line_start":250,"line_end":250,"column_start":8,"column_end":15},"name":"newline","qualname":"::character::streaming::newline","value":"pub fn newline<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a newline character '\\\\n'.","sig":null,"attributes":[{"value":"/ Matches a newline character '\\\\n'.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":272817,"byte_end":272855,"line_start":238,"line_end":238,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":272856,"byte_end":272859,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":272860,"byte_end":272961,"line_start":240,"line_end":240,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":272962,"byte_end":272975,"line_start":241,"line_end":241,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":272976,"byte_end":272979,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":272980,"byte_end":272987,"line_start":243,"line_end":243,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":272988,"byte_end":273044,"line_start":244,"line_end":244,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::newline;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273045,"byte_end":273090,"line_start":245,"line_end":245,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\\nc\"), Ok((\"c\", '\\n')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273091,"byte_end":273160,"line_start":246,"line_end":246,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\\r\\nc\"), Err(Err::Error((\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273161,"byte_end":273260,"line_start":247,"line_end":247,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(newline::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273261,"byte_end":273348,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273349,"byte_end":273356,"line_start":249,"line_end":249,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2144},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274081,"byte_end":274084,"line_start":270,"line_end":270,"column_start":8,"column_end":11},"name":"tab","qualname":"::character::streaming::tab","value":"pub fn tab<I, Error: ParseError<I>>(I) -> IResult<I, char, Error> where\nI: Slice<RangeFrom<usize>> + InputIter + InputLength,\n<I as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches a tab character '\\t'.","sig":null,"attributes":[{"value":"/ Matches a tab character '\\t'.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273555,"byte_end":273588,"line_start":258,"line_end":258,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273589,"byte_end":273592,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273593,"byte_end":273694,"line_start":260,"line_end":260,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273695,"byte_end":273708,"line_start":261,"line_end":261,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273709,"byte_end":273712,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273713,"byte_end":273720,"line_start":263,"line_end":263,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273721,"byte_end":273777,"line_start":264,"line_end":264,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::tab;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273778,"byte_end":273819,"line_start":265,"line_end":265,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\\tc\"), Ok((\"c\", '\\t')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273820,"byte_end":273885,"line_start":266,"line_end":266,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\\r\\nc\"), Err(Err::Error((\"\\r\\nc\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273886,"byte_end":273981,"line_start":267,"line_end":267,"column_start":1,"column_end":96}},{"value":"/ assert_eq!(tab::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":273982,"byte_end":274065,"line_start":268,"line_end":268,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274066,"byte_end":274073,"line_start":269,"line_end":269,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2147},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274797,"byte_end":274804,"line_start":289,"line_end":289,"column_start":8,"column_end":15},"name":"anychar","qualname":"::character::streaming::anychar","value":"pub fn anychar<T, E: ParseError<T>>(T) -> IResult<T, char, E> where\nT: InputIter + InputLength + Slice<RangeFrom<usize>>,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Matches one byte as a character. Note that the input type will\n accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","sig":null,"attributes":[{"value":"/ Matches one byte as a character. Note that the input type will","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274268,"byte_end":274334,"line_start":278,"line_end":278,"column_start":1,"column_end":67}},{"value":"/ accept a `str`, but not a `&[u8]`, unlike many other nom parsers.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274335,"byte_end":274404,"line_start":279,"line_end":279,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274405,"byte_end":274408,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274409,"byte_end":274510,"line_start":281,"line_end":281,"column_start":1,"column_end":102}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274511,"byte_end":274524,"line_start":282,"line_end":282,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274525,"byte_end":274528,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274529,"byte_end":274536,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"/ # use nom::{character::streaming::anychar, Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274537,"byte_end":274624,"line_start":285,"line_end":285,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(anychar::<_, (_, ErrorKind)>(\"abc\"), Ok((\"bc\",'a')));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274625,"byte_end":274693,"line_start":286,"line_end":286,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(anychar::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274694,"byte_end":274781,"line_start":287,"line_end":287,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":274782,"byte_end":274789,"line_start":288,"line_end":288,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2150},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275880,"byte_end":275886,"line_start":317,"line_end":317,"column_start":8,"column_end":14},"name":"alpha0","qualname":"::character::streaming::alpha0","value":"pub fn alpha0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275246,"byte_end":275335,"line_start":304,"line_end":304,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275336,"byte_end":275339,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275340,"byte_end":275441,"line_start":306,"line_end":306,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphabetic character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275442,"byte_end":275511,"line_start":307,"line_end":307,"column_start":1,"column_end":70}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275512,"byte_end":275525,"line_start":308,"line_end":308,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275526,"byte_end":275529,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275530,"byte_end":275537,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275538,"byte_end":275594,"line_start":311,"line_end":311,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alpha0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275595,"byte_end":275639,"line_start":312,"line_end":312,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"ab1c\"), Ok((\"1c\", \"ab\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275640,"byte_end":275710,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"1c\"), Ok((\"1c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275711,"byte_end":275777,"line_start":314,"line_end":314,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(alpha0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275778,"byte_end":275864,"line_start":315,"line_end":315,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":275865,"byte_end":275872,"line_start":316,"line_end":316,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2154},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276730,"byte_end":276736,"line_start":338,"line_end":338,"column_start":8,"column_end":14},"name":"alpha1","qualname":"::character::streaming::alpha1","value":"pub fn alpha1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more lowercase and uppercase ASCII alphabetic characters: a-z, A-Z","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276070,"byte_end":276158,"line_start":325,"line_end":325,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276159,"byte_end":276162,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276163,"byte_end":276264,"line_start":327,"line_end":327,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphabetic character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276265,"byte_end":276334,"line_start":328,"line_end":328,"column_start":1,"column_end":70}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276335,"byte_end":276348,"line_start":329,"line_end":329,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276349,"byte_end":276352,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276353,"byte_end":276360,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276361,"byte_end":276417,"line_start":332,"line_end":332,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alpha1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276418,"byte_end":276462,"line_start":333,"line_end":333,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"aB1c\"), Ok((\"1c\", \"aB\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276463,"byte_end":276533,"line_start":334,"line_end":334,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"1c\"), Err(Err::Error((\"1c\", ErrorKind::Alpha))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276534,"byte_end":276627,"line_start":335,"line_end":335,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(alpha1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276628,"byte_end":276714,"line_start":336,"line_end":336,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276715,"byte_end":276722,"line_start":337,"line_end":337,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2158},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277540,"byte_end":277546,"line_start":359,"line_end":359,"column_start":8,"column_end":14},"name":"digit0","qualname":"::character::streaming::digit0","value":"pub fn digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical characters: 0-9","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276939,"byte_end":276998,"line_start":346,"line_end":346,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":276999,"byte_end":277002,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277003,"byte_end":277104,"line_start":348,"line_end":348,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non digit character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277105,"byte_end":277169,"line_start":349,"line_end":349,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277170,"byte_end":277183,"line_start":350,"line_end":350,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277184,"byte_end":277187,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277188,"byte_end":277195,"line_start":352,"line_end":352,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277196,"byte_end":277252,"line_start":353,"line_end":353,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::digit0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277253,"byte_end":277297,"line_start":354,"line_end":354,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277298,"byte_end":277366,"line_start":355,"line_end":355,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"a21c\"), Ok((\"a21c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277367,"byte_end":277437,"line_start":356,"line_end":356,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277438,"byte_end":277524,"line_start":357,"line_end":357,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277525,"byte_end":277532,"line_start":358,"line_end":358,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2162},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278357,"byte_end":278363,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"digit1","qualname":"::character::streaming::digit1","value":"pub fn digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical characters: 0-9","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical characters: 0-9","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277734,"byte_end":277792,"line_start":367,"line_end":367,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277793,"byte_end":277796,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277797,"byte_end":277898,"line_start":369,"line_end":369,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non digit character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277899,"byte_end":277963,"line_start":370,"line_end":370,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277964,"byte_end":277977,"line_start":371,"line_end":371,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277978,"byte_end":277981,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277982,"byte_end":277989,"line_start":373,"line_end":373,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":277990,"byte_end":278046,"line_start":374,"line_end":374,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::digit1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278047,"byte_end":278091,"line_start":375,"line_end":375,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"21c\"), Ok((\"c\", \"21\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278092,"byte_end":278160,"line_start":376,"line_end":376,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"c1\"), Err(Err::Error((\"c1\", ErrorKind::Digit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278161,"byte_end":278254,"line_start":377,"line_end":377,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278255,"byte_end":278341,"line_start":378,"line_end":378,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278342,"byte_end":278349,"line_start":379,"line_end":379,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2166},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279223,"byte_end":279233,"line_start":401,"line_end":401,"column_start":8,"column_end":18},"name":"hex_digit0","qualname":"::character::streaming::hex_digit0","value":"pub fn hex_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278570,"byte_end":278651,"line_start":388,"line_end":388,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278652,"byte_end":278655,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278656,"byte_end":278757,"line_start":390,"line_end":390,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278758,"byte_end":278834,"line_start":391,"line_end":391,"column_start":1,"column_end":77}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278835,"byte_end":278848,"line_start":392,"line_end":392,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278849,"byte_end":278852,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278853,"byte_end":278860,"line_start":394,"line_end":394,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278861,"byte_end":278917,"line_start":395,"line_end":395,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::hex_digit0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278918,"byte_end":278966,"line_start":396,"line_end":396,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":278967,"byte_end":279041,"line_start":397,"line_end":397,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279042,"byte_end":279116,"line_start":398,"line_end":398,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279117,"byte_end":279207,"line_start":399,"line_end":399,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279208,"byte_end":279215,"line_start":400,"line_end":400,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2170},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280099,"byte_end":280109,"line_start":422,"line_end":422,"column_start":8,"column_end":18},"name":"hex_digit1","qualname":"::character::streaming::hex_digit1","value":"pub fn hex_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII hexadecimal numerical characters: 0-9, A-F, a-f","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279421,"byte_end":279501,"line_start":409,"line_end":409,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279502,"byte_end":279505,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279506,"byte_end":279607,"line_start":411,"line_end":411,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non hexadecimal digit character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279608,"byte_end":279684,"line_start":412,"line_end":412,"column_start":1,"column_end":77}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279685,"byte_end":279698,"line_start":413,"line_end":413,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279699,"byte_end":279702,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279703,"byte_end":279710,"line_start":415,"line_end":415,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279711,"byte_end":279767,"line_start":416,"line_end":416,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::hex_digit1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279768,"byte_end":279816,"line_start":417,"line_end":417,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"Z\", \"21c\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279817,"byte_end":279891,"line_start":418,"line_end":418,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::HexDigit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279892,"byte_end":279992,"line_start":419,"line_end":419,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(hex_digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":279993,"byte_end":280083,"line_start":420,"line_end":420,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280084,"byte_end":280091,"line_start":421,"line_end":421,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2174},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280934,"byte_end":280944,"line_start":443,"line_end":443,"column_start":8,"column_end":18},"name":"oct_digit0","qualname":"::character::streaming::oct_digit0","value":"pub fn oct_digit0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes zero or more octal characters: 0-7","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280319,"byte_end":280368,"line_start":430,"line_end":430,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280369,"byte_end":280372,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280373,"byte_end":280474,"line_start":432,"line_end":432,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non octal digit character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280475,"byte_end":280545,"line_start":433,"line_end":433,"column_start":1,"column_end":71}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280546,"byte_end":280559,"line_start":434,"line_end":434,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280560,"byte_end":280563,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280564,"byte_end":280571,"line_start":436,"line_end":436,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280572,"byte_end":280628,"line_start":437,"line_end":437,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::oct_digit0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280629,"byte_end":280677,"line_start":438,"line_end":438,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280678,"byte_end":280752,"line_start":439,"line_end":439,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280753,"byte_end":280827,"line_start":440,"line_end":440,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280828,"byte_end":280918,"line_start":441,"line_end":441,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":280919,"byte_end":280926,"line_start":442,"line_end":442,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2178},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281772,"byte_end":281782,"line_start":464,"line_end":464,"column_start":8,"column_end":18},"name":"oct_digit1","qualname":"::character::streaming::oct_digit1","value":"pub fn oct_digit1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more octal characters: 0-7","sig":null,"attributes":[{"value":"/ Recognizes one or more octal characters: 0-7","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281132,"byte_end":281180,"line_start":451,"line_end":451,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281181,"byte_end":281184,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281185,"byte_end":281286,"line_start":453,"line_end":453,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non octal digit character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281287,"byte_end":281357,"line_start":454,"line_end":454,"column_start":1,"column_end":71}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281358,"byte_end":281371,"line_start":455,"line_end":455,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281372,"byte_end":281375,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281376,"byte_end":281383,"line_start":457,"line_end":457,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281384,"byte_end":281440,"line_start":458,"line_end":458,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::oct_digit1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281441,"byte_end":281489,"line_start":459,"line_end":459,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"21cZ\"), Ok((\"cZ\", \"21\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281490,"byte_end":281564,"line_start":460,"line_end":460,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::OctDigit))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281565,"byte_end":281665,"line_start":461,"line_end":461,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(oct_digit1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281666,"byte_end":281756,"line_start":462,"line_end":462,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281757,"byte_end":281764,"line_start":463,"line_end":463,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2182},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282663,"byte_end":282676,"line_start":485,"line_end":485,"column_start":8,"column_end":21},"name":"alphanumeric0","qualname":"::character::streaming::alphanumeric0","value":"pub fn alphanumeric0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes zero or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":281992,"byte_end":282076,"line_start":472,"line_end":472,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282077,"byte_end":282080,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282081,"byte_end":282182,"line_start":474,"line_end":474,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282183,"byte_end":282256,"line_start":475,"line_end":475,"column_start":1,"column_end":74}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282257,"byte_end":282270,"line_start":476,"line_end":476,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282271,"byte_end":282274,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282275,"byte_end":282282,"line_start":478,"line_end":478,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282283,"byte_end":282339,"line_start":479,"line_end":479,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alphanumeric0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282340,"byte_end":282391,"line_start":480,"line_end":480,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282392,"byte_end":282473,"line_start":481,"line_end":481,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"&Z21c\"), Ok((\"&Z21c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282474,"byte_end":282553,"line_start":482,"line_end":482,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(alphanumeric0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282554,"byte_end":282647,"line_start":483,"line_end":483,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282648,"byte_end":282655,"line_start":484,"line_end":484,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2186},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283563,"byte_end":283576,"line_start":506,"line_end":506,"column_start":8,"column_end":21},"name":"alphanumeric1","qualname":"::character::streaming::alphanumeric1","value":"pub fn alphanumeric1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","sig":null,"attributes":[{"value":"/ Recognizes one or more ASCII numerical and alphabetic characters: 0-9, a-z, A-Z","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282863,"byte_end":282946,"line_start":493,"line_end":493,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282947,"byte_end":282950,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":282951,"byte_end":283052,"line_start":495,"line_end":495,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non alphanumerical character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283053,"byte_end":283126,"line_start":496,"line_end":496,"column_start":1,"column_end":74}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283127,"byte_end":283140,"line_start":497,"line_end":497,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283141,"byte_end":283144,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283145,"byte_end":283152,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283153,"byte_end":283209,"line_start":500,"line_end":500,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::alphanumeric1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283210,"byte_end":283261,"line_start":501,"line_end":501,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"21cZ%1\"), Ok((\"%1\", \"21cZ\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283262,"byte_end":283343,"line_start":502,"line_end":502,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"&H2\"), Err(Err::Error((\"&H2\", ErrorKind::AlphaNumeric))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283344,"byte_end":283453,"line_start":503,"line_end":503,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(alphanumeric1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283454,"byte_end":283547,"line_start":504,"line_end":504,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283548,"byte_end":283555,"line_start":505,"line_end":505,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2190},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284381,"byte_end":284387,"line_start":527,"line_end":527,"column_start":8,"column_end":14},"name":"space0","qualname":"::character::streaming::space0","value":"pub fn space0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces and tabs.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283789,"byte_end":283833,"line_start":514,"line_end":514,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283834,"byte_end":283837,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283838,"byte_end":283939,"line_start":516,"line_end":516,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":283940,"byte_end":284004,"line_start":517,"line_end":517,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284005,"byte_end":284018,"line_start":518,"line_end":518,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284019,"byte_end":284022,"line_start":519,"line_end":519,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284023,"byte_end":284030,"line_start":520,"line_end":520,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284031,"byte_end":284087,"line_start":521,"line_end":521,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::space0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284088,"byte_end":284132,"line_start":522,"line_end":522,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284133,"byte_end":284207,"line_start":523,"line_end":523,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284208,"byte_end":284278,"line_start":524,"line_end":524,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(space0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284279,"byte_end":284365,"line_start":525,"line_end":525,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284366,"byte_end":284373,"line_start":526,"line_end":526,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2194},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285238,"byte_end":285244,"line_start":550,"line_end":550,"column_start":8,"column_end":14},"name":"space1","qualname":"::character::streaming::space1","value":"pub fn space1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces and tabs.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces and tabs.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284624,"byte_end":284667,"line_start":537,"line_end":537,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284668,"byte_end":284671,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284672,"byte_end":284773,"line_start":539,"line_end":539,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284774,"byte_end":284838,"line_start":540,"line_end":540,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284839,"byte_end":284852,"line_start":541,"line_end":541,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284853,"byte_end":284856,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284857,"byte_end":284864,"line_start":543,"line_end":543,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284865,"byte_end":284921,"line_start":544,"line_end":544,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::space1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284922,"byte_end":284966,"line_start":545,"line_end":545,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\" \\t21c\"), Ok((\"21c\", \" \\t\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":284967,"byte_end":285041,"line_start":546,"line_end":546,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::Space))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285042,"byte_end":285135,"line_start":547,"line_end":547,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(space1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285136,"byte_end":285222,"line_start":548,"line_end":548,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285223,"byte_end":285230,"line_start":549,"line_end":549,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2198},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286170,"byte_end":286181,"line_start":577,"line_end":577,"column_start":8,"column_end":19},"name":"multispace0","qualname":"::character::streaming::multispace0","value":"pub fn multispace0<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes zero or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes zero or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285520,"byte_end":285594,"line_start":564,"line_end":564,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285595,"byte_end":285598,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285599,"byte_end":285700,"line_start":566,"line_end":566,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285701,"byte_end":285765,"line_start":567,"line_end":567,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285766,"byte_end":285779,"line_start":568,"line_end":568,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285780,"byte_end":285783,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285784,"byte_end":285791,"line_start":570,"line_end":570,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285792,"byte_end":285848,"line_start":571,"line_end":571,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::multispace0;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285849,"byte_end":285898,"line_start":572,"line_end":572,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285899,"byte_end":285986,"line_start":573,"line_end":573,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\"Z21c\"), Ok((\"Z21c\", \"\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":285987,"byte_end":286062,"line_start":574,"line_end":574,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(multispace0::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286063,"byte_end":286154,"line_start":575,"line_end":575,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286155,"byte_end":286162,"line_start":576,"line_end":576,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2202},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287122,"byte_end":287133,"line_start":601,"line_end":601,"column_start":8,"column_end":19},"name":"multispace1","qualname":"::character::streaming::multispace1","value":"pub fn multispace1<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: InputTakeAtPosition, <T as InputTakeAtPosition>::Item: AsChar + Clone","parent":null,"children":[],"decl_id":null,"docs":" Recognizes one or more spaces, tabs, carriage returns and line feeds.","sig":null,"attributes":[{"value":"/ Recognizes one or more spaces, tabs, carriage returns and line feeds.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286445,"byte_end":286518,"line_start":588,"line_end":588,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286519,"byte_end":286522,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there's not enough input data,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286523,"byte_end":286624,"line_start":590,"line_end":590,"column_start":1,"column_end":102}},{"value":"/ or if no terminating token is found (a non space character).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286625,"byte_end":286689,"line_start":591,"line_end":591,"column_start":1,"column_end":65}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286690,"byte_end":286703,"line_start":592,"line_end":592,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286704,"byte_end":286707,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286708,"byte_end":286715,"line_start":594,"line_end":594,"column_start":1,"column_end":8}},{"value":"/ # use nom::{Err, error::ErrorKind, IResult, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286716,"byte_end":286772,"line_start":595,"line_end":595,"column_start":1,"column_end":57}},{"value":"/ # use nom::character::streaming::multispace1;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286773,"byte_end":286822,"line_start":596,"line_end":596,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\" \\t\\n\\r21c\"), Ok((\"21c\", \" \\t\\n\\r\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286823,"byte_end":286910,"line_start":597,"line_end":597,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\"H2\"), Err(Err::Error((\"H2\", ErrorKind::MultiSpace))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":286911,"byte_end":287014,"line_start":598,"line_end":598,"column_start":1,"column_end":104}},{"value":"/ assert_eq!(multispace1::<_, (_, ErrorKind)>(\"\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287015,"byte_end":287106,"line_start":599,"line_end":599,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287107,"byte_end":287114,"line_start":600,"line_end":600,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5971},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290342,"byte_end":290344,"line_start":692,"line_end":692,"column_start":9,"column_end":11},"name":"i8","qualname":"::character::streaming::i8","value":"pub fn i8<T, E: ParseError<T>>(T) -> IResult<T, i8, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287908,"byte_end":287956,"line_start":636,"line_end":636,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287965,"byte_end":287968,"line_start":637,"line_end":637,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287977,"byte_end":288034,"line_start":638,"line_end":638,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5977},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290345,"byte_end":290348,"line_start":692,"line_end":692,"column_start":12,"column_end":15},"name":"i16","qualname":"::character::streaming::i16","value":"pub fn i16<T, E: ParseError<T>>(T) -> IResult<T, i16, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287908,"byte_end":287956,"line_start":636,"line_end":636,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287965,"byte_end":287968,"line_start":637,"line_end":637,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287977,"byte_end":288034,"line_start":638,"line_end":638,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5983},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290349,"byte_end":290352,"line_start":692,"line_end":692,"column_start":16,"column_end":19},"name":"i32","qualname":"::character::streaming::i32","value":"pub fn i32<T, E: ParseError<T>>(T) -> IResult<T, i32, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287908,"byte_end":287956,"line_start":636,"line_end":636,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287965,"byte_end":287968,"line_start":637,"line_end":637,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287977,"byte_end":288034,"line_start":638,"line_end":638,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5989},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290353,"byte_end":290356,"line_start":692,"line_end":692,"column_start":20,"column_end":23},"name":"i64","qualname":"::character::streaming::i64","value":"pub fn i64<T, E: ParseError<T>>(T) -> IResult<T, i64, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287908,"byte_end":287956,"line_start":636,"line_end":636,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287965,"byte_end":287968,"line_start":637,"line_end":637,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287977,"byte_end":288034,"line_start":638,"line_end":638,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":5995},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290357,"byte_end":290361,"line_start":692,"line_end":692,"column_start":24,"column_end":28},"name":"i128","qualname":"::character::streaming::i128","value":"pub fn i128<T, E: ParseError<T>>(T) -> IResult<T, i128, E> where\nT: InputIter + Slice<RangeFrom<usize>> + InputLength + InputTake + Clone,\n<T as InputIter>::Item: AsChar, T: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287908,"byte_end":287956,"line_start":636,"line_end":636,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287965,"byte_end":287968,"line_start":637,"line_end":637,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":287977,"byte_end":288034,"line_start":638,"line_end":638,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":6001},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":291830,"byte_end":291832,"line_start":735,"line_end":735,"column_start":10,"column_end":12},"name":"u8","qualname":"::character::streaming::u8","value":"pub fn u8<T, E: ParseError<T>>(T) -> IResult<T, u8, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290441,"byte_end":290489,"line_start":698,"line_end":698,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290498,"byte_end":290501,"line_start":699,"line_end":699,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290510,"byte_end":290567,"line_start":700,"line_end":700,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":6005},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":291833,"byte_end":291836,"line_start":735,"line_end":735,"column_start":13,"column_end":16},"name":"u16","qualname":"::character::streaming::u16","value":"pub fn u16<T, E: ParseError<T>>(T) -> IResult<T, u16, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290441,"byte_end":290489,"line_start":698,"line_end":698,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290498,"byte_end":290501,"line_start":699,"line_end":699,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290510,"byte_end":290567,"line_start":700,"line_end":700,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":6009},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":291837,"byte_end":291840,"line_start":735,"line_end":735,"column_start":17,"column_end":20},"name":"u32","qualname":"::character::streaming::u32","value":"pub fn u32<T, E: ParseError<T>>(T) -> IResult<T, u32, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290441,"byte_end":290489,"line_start":698,"line_end":698,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290498,"byte_end":290501,"line_start":699,"line_end":699,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290510,"byte_end":290567,"line_start":700,"line_end":700,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":6013},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":291841,"byte_end":291844,"line_start":735,"line_end":735,"column_start":21,"column_end":24},"name":"u64","qualname":"::character::streaming::u64","value":"pub fn u64<T, E: ParseError<T>>(T) -> IResult<T, u64, E> where T: InputIter +\nSlice<RangeFrom<usize>> + InputLength, <T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290441,"byte_end":290489,"line_start":698,"line_end":698,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290498,"byte_end":290501,"line_start":699,"line_end":699,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290510,"byte_end":290567,"line_start":700,"line_end":700,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":6017},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":291845,"byte_end":291849,"line_start":735,"line_end":735,"column_start":25,"column_end":29},"name":"u128","qualname":"::character::streaming::u128","value":"pub fn u128<T, E: ParseError<T>>(T) -> IResult<T, u128, E> where\nT: InputIter + Slice<RangeFrom<usize>> + InputLength,\n<T as InputIter>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" will parse a number in text form to a number","sig":null,"attributes":[{"value":"/ will parse a number in text form to a number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290441,"byte_end":290489,"line_start":698,"line_end":698,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290498,"byte_end":290501,"line_start":699,"line_end":699,"column_start":9,"column_end":12}},{"value":"/ *Complete version*: can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/streaming.rs","byte_start":290510,"byte_end":290567,"line_start":700,"line_end":700,"column_start":9,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":2218},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220684,"byte_end":220697,"line_start":21,"line_end":21,"column_start":8,"column_end":21},"name":"is_alphabetic","qualname":"::character::is_alphabetic","value":"pub fn is_alphabetic(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphabetic: A-Z, a-z","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII alphabetic: A-Z, a-z","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220453,"byte_end":220500,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220501,"byte_end":220504,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220505,"byte_end":220518,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220519,"byte_end":220522,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220523,"byte_end":220530,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_alphabetic;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220531,"byte_end":220571,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_alphabetic(b'9'), false);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220572,"byte_end":220615,"line_start":17,"line_end":17,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(is_alphabetic(b'a'), true);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220616,"byte_end":220658,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220659,"byte_end":220666,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220667,"byte_end":220676,"line_start":20,"line_end":20,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2219},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220989,"byte_end":220997,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"is_digit","qualname":"::character::is_digit","value":"pub fn is_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII digit: 0-9","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII digit: 0-9","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220783,"byte_end":220820,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220821,"byte_end":220824,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220825,"byte_end":220838,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220839,"byte_end":220842,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220843,"byte_end":220850,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_digit;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220851,"byte_end":220886,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(is_digit(b'a'), false);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220887,"byte_end":220925,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(is_digit(b'9'), true);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220926,"byte_end":220963,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220964,"byte_end":220971,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220972,"byte_end":220981,"line_start":34,"line_end":34,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2220},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221365,"byte_end":221377,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"is_hex_digit","qualname":"::character::is_hex_digit","value":"pub fn is_hex_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII hex digit: 0-9, A-F, a-f","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII hex digit: 0-9, A-F, a-f","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221049,"byte_end":221100,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221101,"byte_end":221104,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221105,"byte_end":221118,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221119,"byte_end":221122,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221123,"byte_end":221130,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_hex_digit;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221131,"byte_end":221170,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_hex_digit(b'a'), true);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221171,"byte_end":221212,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'9'), true);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221213,"byte_end":221254,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'A'), true);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221255,"byte_end":221296,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_hex_digit(b'x'), false);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221297,"byte_end":221339,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221340,"byte_end":221347,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221348,"byte_end":221357,"line_start":50,"line_end":50,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2221},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221762,"byte_end":221774,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"is_oct_digit","qualname":"::character::is_oct_digit","value":"pub fn is_oct_digit(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII octal digit: 0-7","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII octal digit: 0-7","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221495,"byte_end":221538,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221539,"byte_end":221542,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221543,"byte_end":221556,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221557,"byte_end":221560,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221561,"byte_end":221568,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_oct_digit;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221569,"byte_end":221608,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_oct_digit(b'a'), false);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221609,"byte_end":221651,"line_start":61,"line_end":61,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_oct_digit(b'9'), false);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221652,"byte_end":221694,"line_start":62,"line_end":62,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_oct_digit(b'6'), true);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221695,"byte_end":221736,"line_start":63,"line_end":63,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221737,"byte_end":221744,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221745,"byte_end":221754,"line_start":65,"line_end":65,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2222},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222160,"byte_end":222175,"line_start":82,"line_end":82,"column_start":8,"column_end":23},"name":"is_alphanumeric","qualname":"::character::is_alphanumeric","value":"pub fn is_alphanumeric(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221826,"byte_end":221880,"line_start":70,"line_end":70,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221881,"byte_end":221884,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221885,"byte_end":221898,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221899,"byte_end":221902,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221903,"byte_end":221910,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_alphanumeric;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221911,"byte_end":221953,"line_start":75,"line_end":75,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(is_alphanumeric(b'-'), false);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":221954,"byte_end":221999,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(is_alphanumeric(b'a'), true);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222000,"byte_end":222044,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(is_alphanumeric(b'9'), true);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222045,"byte_end":222089,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(is_alphanumeric(b'A'), true);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222090,"byte_end":222134,"line_start":79,"line_end":79,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222135,"byte_end":222142,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222143,"byte_end":222152,"line_start":81,"line_end":81,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2223},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222524,"byte_end":222532,"line_start":98,"line_end":98,"column_start":8,"column_end":16},"name":"is_space","qualname":"::character::is_space","value":"pub fn is_space(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII space or tab","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII space or tab","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222236,"byte_end":222275,"line_start":86,"line_end":86,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222276,"byte_end":222279,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222280,"byte_end":222293,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222294,"byte_end":222297,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222298,"byte_end":222305,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_space;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222306,"byte_end":222341,"line_start":91,"line_end":91,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(is_space(b'\\n'), false);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222342,"byte_end":222381,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_space(b'\\r'), false);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222382,"byte_end":222421,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(is_space(b' '), true);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222422,"byte_end":222459,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(is_space(b'\\t'), true);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222460,"byte_end":222498,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222499,"byte_end":222506,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222507,"byte_end":222516,"line_start":97,"line_end":97,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2224},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222883,"byte_end":222893,"line_start":114,"line_end":114,"column_start":8,"column_end":18},"name":"is_newline","qualname":"::character::is_newline","value":"pub fn is_newline(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if byte is ASCII newline: \\n","sig":null,"attributes":[{"value":"/ Tests if byte is ASCII newline: \\n","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222585,"byte_end":222623,"line_start":102,"line_end":102,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222624,"byte_end":222627,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222628,"byte_end":222641,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222642,"byte_end":222645,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222646,"byte_end":222653,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # use nom::character::is_newline;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222654,"byte_end":222691,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(is_newline(b'\\n'), true);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222692,"byte_end":222732,"line_start":108,"line_end":108,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_newline(b'\\r'), false);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222733,"byte_end":222774,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(is_newline(b' '), false);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222775,"byte_end":222815,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(is_newline(b'\\t'), false);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222816,"byte_end":222857,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222858,"byte_end":222865,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":222866,"byte_end":222875,"line_start":113,"line_end":113,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":2226},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"number","qualname":"::number","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","parent":null,"children":[{"krate":0,"index":2227},{"krate":0,"index":2473},{"krate":0,"index":6083},{"krate":0,"index":6090},{"krate":0,"index":6092},{"krate":0,"index":6093},{"krate":0,"index":6095},{"krate":0,"index":6096},{"krate":0,"index":6098},{"krate":0,"index":6100}],"decl_id":null,"docs":" Parsers recognizing numbers\n","sig":null,"attributes":[{"value":"/ Parsers recognizing numbers","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","byte_start":319054,"byte_end":319085,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":2227},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"complete","qualname":"::number::complete","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2231},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2248},{"krate":0,"index":2251},{"krate":0,"index":2254},{"krate":0,"index":2257},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2264},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2272},{"krate":0,"index":2275},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2282},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2289},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2298},{"krate":0,"index":2301},{"krate":0,"index":2304},{"krate":0,"index":2307},{"krate":0,"index":2310},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2327},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2360},{"krate":0,"index":2363},{"krate":0,"index":2366},{"krate":0,"index":2369},{"krate":0,"index":2372},{"krate":0,"index":2375},{"krate":0,"index":2378},{"krate":0,"index":2381},{"krate":0,"index":2384},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":2393},{"krate":0,"index":2396},{"krate":0,"index":2399},{"krate":0,"index":2402},{"krate":0,"index":2405},{"krate":0,"index":2408},{"krate":0,"index":2411},{"krate":0,"index":2414},{"krate":0,"index":2417},{"krate":0,"index":2420},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2429},{"krate":0,"index":2432},{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2441},{"krate":0,"index":6047},{"krate":0,"index":2445},{"krate":0,"index":2456},{"krate":0,"index":2462},{"krate":0,"index":2465},{"krate":0,"index":2469}],"decl_id":null,"docs":" Parsers recognizing numbers, complete input version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing numbers, complete input version","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":319326,"byte_end":319381,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":2315},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320905,"byte_end":320910,"line_start":52,"line_end":52,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::number::complete::be_u8","value":"pub fn be_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320419,"byte_end":320461,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320462,"byte_end":320465,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320466,"byte_end":320541,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320542,"byte_end":320553,"line_start":39,"line_end":39,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320554,"byte_end":320601,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320602,"byte_end":320630,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320631,"byte_end":320668,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320669,"byte_end":320672,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320673,"byte_end":320695,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/   be_u8(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320696,"byte_end":320710,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320711,"byte_end":320717,"line_start":46,"line_end":46,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320718,"byte_end":320721,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320722,"byte_end":320801,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320802,"byte_end":320879,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320880,"byte_end":320887,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":320888,"byte_end":320897,"line_start":51,"line_end":51,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2318},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321763,"byte_end":321769,"line_start":82,"line_end":82,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::number::complete::be_u16","value":"pub fn be_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 2 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321258,"byte_end":321311,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321312,"byte_end":321315,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321316,"byte_end":321391,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321392,"byte_end":321403,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321404,"byte_end":321451,"line_start":70,"line_end":70,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321452,"byte_end":321480,"line_start":71,"line_end":71,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321481,"byte_end":321519,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321520,"byte_end":321523,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321524,"byte_end":321546,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/   be_u16(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321547,"byte_end":321562,"line_start":75,"line_end":75,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321563,"byte_end":321569,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321570,"byte_end":321573,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321574,"byte_end":321651,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321652,"byte_end":321737,"line_start":79,"line_end":79,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321738,"byte_end":321745,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":321746,"byte_end":321755,"line_start":81,"line_end":81,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2321},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322695,"byte_end":322701,"line_start":115,"line_end":115,"column_start":8,"column_end":14},"name":"be_u24","qualname":"::number::complete::be_u24","value":"pub fn be_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 3 byte integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322185,"byte_end":322237,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322238,"byte_end":322241,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322242,"byte_end":322317,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322318,"byte_end":322329,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322330,"byte_end":322377,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322378,"byte_end":322406,"line_start":104,"line_end":104,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u24;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322407,"byte_end":322445,"line_start":105,"line_end":105,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322446,"byte_end":322449,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322450,"byte_end":322472,"line_start":107,"line_end":107,"column_start":1,"column_end":23}},{"value":"/   be_u24(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322473,"byte_end":322488,"line_start":108,"line_end":108,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322489,"byte_end":322495,"line_start":109,"line_end":109,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322496,"byte_end":322499,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322500,"byte_end":322583,"line_start":111,"line_end":111,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322584,"byte_end":322669,"line_start":112,"line_end":112,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322670,"byte_end":322677,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":322678,"byte_end":322687,"line_start":114,"line_end":114,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2324},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323634,"byte_end":323640,"line_start":148,"line_end":148,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::number::complete::be_u32","value":"pub fn be_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 4 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323117,"byte_end":323170,"line_start":132,"line_end":132,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323171,"byte_end":323174,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323175,"byte_end":323250,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323251,"byte_end":323262,"line_start":135,"line_end":135,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323263,"byte_end":323310,"line_start":136,"line_end":136,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323311,"byte_end":323339,"line_start":137,"line_end":137,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323340,"byte_end":323378,"line_start":138,"line_end":138,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323379,"byte_end":323382,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323383,"byte_end":323405,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/   be_u32(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323406,"byte_end":323421,"line_start":141,"line_end":141,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323422,"byte_end":323428,"line_start":142,"line_end":142,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323429,"byte_end":323432,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323433,"byte_end":323522,"line_start":144,"line_end":144,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323523,"byte_end":323608,"line_start":145,"line_end":145,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323609,"byte_end":323616,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":323617,"byte_end":323626,"line_start":147,"line_end":147,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2327},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324597,"byte_end":324603,"line_start":181,"line_end":181,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::number::complete::be_u64","value":"pub fn be_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 8 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324056,"byte_end":324109,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324110,"byte_end":324113,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324114,"byte_end":324189,"line_start":167,"line_end":167,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324190,"byte_end":324201,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324202,"byte_end":324249,"line_start":169,"line_end":169,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324250,"byte_end":324278,"line_start":170,"line_end":170,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324279,"byte_end":324317,"line_start":171,"line_end":171,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324318,"byte_end":324321,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324322,"byte_end":324344,"line_start":173,"line_end":173,"column_start":1,"column_end":23}},{"value":"/   be_u64(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324345,"byte_end":324360,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324361,"byte_end":324367,"line_start":175,"line_end":175,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324368,"byte_end":324371,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324372,"byte_end":324485,"line_start":177,"line_end":177,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324486,"byte_end":324571,"line_start":178,"line_end":178,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324572,"byte_end":324579,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":324580,"byte_end":324589,"line_start":180,"line_end":180,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2330},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325631,"byte_end":325638,"line_start":215,"line_end":215,"column_start":8,"column_end":15},"name":"be_u128","qualname":"::number::complete::be_u128","value":"pub fn be_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 16 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325019,"byte_end":325073,"line_start":198,"line_end":198,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325074,"byte_end":325077,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325078,"byte_end":325153,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325154,"byte_end":325165,"line_start":201,"line_end":201,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325166,"byte_end":325213,"line_start":202,"line_end":202,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325214,"byte_end":325242,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_u128;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325243,"byte_end":325282,"line_start":204,"line_end":204,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325283,"byte_end":325286,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325287,"byte_end":325309,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"/   be_u128(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325310,"byte_end":325326,"line_start":207,"line_end":207,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325327,"byte_end":325333,"line_start":208,"line_end":208,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325334,"byte_end":325337,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325338,"byte_end":325499,"line_start":210,"line_end":210,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325500,"byte_end":325585,"line_start":211,"line_end":211,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325586,"byte_end":325593,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325594,"byte_end":325603,"line_start":213,"line_end":213,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":325604,"byte_end":325623,"line_start":214,"line_end":214,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2333},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326541,"byte_end":326546,"line_start":248,"line_end":248,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::number::complete::be_i8","value":"pub fn be_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326058,"byte_end":326097,"line_start":232,"line_end":232,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326098,"byte_end":326101,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326102,"byte_end":326177,"line_start":234,"line_end":234,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326178,"byte_end":326189,"line_start":235,"line_end":235,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326190,"byte_end":326237,"line_start":236,"line_end":236,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326238,"byte_end":326266,"line_start":237,"line_end":237,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326267,"byte_end":326304,"line_start":238,"line_end":238,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326305,"byte_end":326308,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326309,"byte_end":326331,"line_start":240,"line_end":240,"column_start":1,"column_end":23}},{"value":"/   be_i8(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326332,"byte_end":326346,"line_start":241,"line_end":241,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326347,"byte_end":326353,"line_start":242,"line_end":242,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326354,"byte_end":326357,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326358,"byte_end":326437,"line_start":244,"line_end":244,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326438,"byte_end":326515,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326516,"byte_end":326523,"line_start":246,"line_end":246,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326524,"byte_end":326533,"line_start":247,"line_end":247,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2336},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327214,"byte_end":327220,"line_start":271,"line_end":271,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::number::complete::be_i16","value":"pub fn be_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 2 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326711,"byte_end":326762,"line_start":255,"line_end":255,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326763,"byte_end":326766,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326767,"byte_end":326842,"line_start":257,"line_end":257,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326843,"byte_end":326854,"line_start":258,"line_end":258,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326855,"byte_end":326902,"line_start":259,"line_end":259,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326903,"byte_end":326931,"line_start":260,"line_end":260,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326932,"byte_end":326970,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326971,"byte_end":326974,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326975,"byte_end":326997,"line_start":263,"line_end":263,"column_start":1,"column_end":23}},{"value":"/   be_i16(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":326998,"byte_end":327013,"line_start":264,"line_end":264,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327014,"byte_end":327020,"line_start":265,"line_end":265,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327021,"byte_end":327024,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327025,"byte_end":327102,"line_start":267,"line_end":267,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327103,"byte_end":327188,"line_start":268,"line_end":268,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327189,"byte_end":327196,"line_start":269,"line_end":269,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327197,"byte_end":327206,"line_start":270,"line_end":270,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2339},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327897,"byte_end":327903,"line_start":294,"line_end":294,"column_start":8,"column_end":14},"name":"be_i24","qualname":"::number::complete::be_i24","value":"pub fn be_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 3 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327388,"byte_end":327439,"line_start":278,"line_end":278,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327440,"byte_end":327443,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327444,"byte_end":327519,"line_start":280,"line_end":280,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327520,"byte_end":327531,"line_start":281,"line_end":281,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327532,"byte_end":327579,"line_start":282,"line_end":282,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327580,"byte_end":327608,"line_start":283,"line_end":283,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i24;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327609,"byte_end":327647,"line_start":284,"line_end":284,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327648,"byte_end":327651,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327652,"byte_end":327674,"line_start":286,"line_end":286,"column_start":1,"column_end":23}},{"value":"/   be_i24(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327675,"byte_end":327690,"line_start":287,"line_end":287,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327691,"byte_end":327697,"line_start":288,"line_end":288,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327698,"byte_end":327701,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327702,"byte_end":327785,"line_start":290,"line_end":290,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327786,"byte_end":327871,"line_start":291,"line_end":291,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327872,"byte_end":327879,"line_start":292,"line_end":292,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":327880,"byte_end":327889,"line_start":293,"line_end":293,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2342},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328736,"byte_end":328742,"line_start":322,"line_end":322,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::number::complete::be_i32","value":"pub fn be_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 4 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328221,"byte_end":328272,"line_start":306,"line_end":306,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328273,"byte_end":328276,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Teturns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328277,"byte_end":328352,"line_start":308,"line_end":308,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328353,"byte_end":328364,"line_start":309,"line_end":309,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328365,"byte_end":328412,"line_start":310,"line_end":310,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328413,"byte_end":328441,"line_start":311,"line_end":311,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328442,"byte_end":328480,"line_start":312,"line_end":312,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328481,"byte_end":328484,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328485,"byte_end":328507,"line_start":314,"line_end":314,"column_start":1,"column_end":23}},{"value":"/   be_i32(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328508,"byte_end":328523,"line_start":315,"line_end":315,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328524,"byte_end":328530,"line_start":316,"line_end":316,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328531,"byte_end":328534,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328535,"byte_end":328624,"line_start":318,"line_end":318,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328625,"byte_end":328710,"line_start":319,"line_end":319,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328711,"byte_end":328718,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328719,"byte_end":328728,"line_start":321,"line_end":321,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2345},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329449,"byte_end":329455,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::number::complete::be_i64","value":"pub fn be_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 8 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328910,"byte_end":328961,"line_start":329,"line_end":329,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328962,"byte_end":328965,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":328966,"byte_end":329041,"line_start":331,"line_end":331,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329042,"byte_end":329053,"line_start":332,"line_end":332,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329054,"byte_end":329101,"line_start":333,"line_end":333,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329102,"byte_end":329130,"line_start":334,"line_end":334,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329131,"byte_end":329169,"line_start":335,"line_end":335,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329170,"byte_end":329173,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329174,"byte_end":329196,"line_start":337,"line_end":337,"column_start":1,"column_end":23}},{"value":"/   be_i64(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329197,"byte_end":329212,"line_start":338,"line_end":338,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329213,"byte_end":329219,"line_start":339,"line_end":339,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329220,"byte_end":329223,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329224,"byte_end":329337,"line_start":341,"line_end":341,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329338,"byte_end":329423,"line_start":342,"line_end":342,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329424,"byte_end":329431,"line_start":343,"line_end":343,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329432,"byte_end":329441,"line_start":344,"line_end":344,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2348},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330233,"byte_end":330240,"line_start":369,"line_end":369,"column_start":8,"column_end":15},"name":"be_i128","qualname":"::number::complete::be_i128","value":"pub fn be_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 16 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329623,"byte_end":329675,"line_start":352,"line_end":352,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329676,"byte_end":329679,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329680,"byte_end":329755,"line_start":354,"line_end":354,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329756,"byte_end":329767,"line_start":355,"line_end":355,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329768,"byte_end":329815,"line_start":356,"line_end":356,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329816,"byte_end":329844,"line_start":357,"line_end":357,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_i128;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329845,"byte_end":329884,"line_start":358,"line_end":358,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329885,"byte_end":329888,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329889,"byte_end":329911,"line_start":360,"line_end":360,"column_start":1,"column_end":23}},{"value":"/   be_i128(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329912,"byte_end":329928,"line_start":361,"line_end":361,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329929,"byte_end":329935,"line_start":362,"line_end":362,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329936,"byte_end":329939,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":329940,"byte_end":330101,"line_start":364,"line_end":364,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330102,"byte_end":330187,"line_start":365,"line_end":365,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330188,"byte_end":330195,"line_start":366,"line_end":366,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330196,"byte_end":330205,"line_start":367,"line_end":367,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330206,"byte_end":330225,"line_start":368,"line_end":368,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2351},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330897,"byte_end":330902,"line_start":392,"line_end":392,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::number::complete::le_u8","value":"pub fn le_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330411,"byte_end":330453,"line_start":376,"line_end":376,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330454,"byte_end":330457,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330458,"byte_end":330533,"line_start":378,"line_end":378,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330534,"byte_end":330545,"line_start":379,"line_end":379,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330546,"byte_end":330593,"line_start":380,"line_end":380,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330594,"byte_end":330622,"line_start":381,"line_end":381,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330623,"byte_end":330660,"line_start":382,"line_end":382,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330661,"byte_end":330664,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330665,"byte_end":330687,"line_start":384,"line_end":384,"column_start":1,"column_end":23}},{"value":"/   le_u8(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330688,"byte_end":330702,"line_start":385,"line_end":385,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330703,"byte_end":330709,"line_start":386,"line_end":386,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330710,"byte_end":330713,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330714,"byte_end":330793,"line_start":388,"line_end":388,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330794,"byte_end":330871,"line_start":389,"line_end":389,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330872,"byte_end":330879,"line_start":390,"line_end":390,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":330880,"byte_end":330889,"line_start":391,"line_end":391,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2354},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331758,"byte_end":331764,"line_start":422,"line_end":422,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::number::complete::le_u16","value":"pub fn le_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 2 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331250,"byte_end":331306,"line_start":406,"line_end":406,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331307,"byte_end":331310,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331311,"byte_end":331386,"line_start":408,"line_end":408,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331387,"byte_end":331398,"line_start":409,"line_end":409,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331399,"byte_end":331446,"line_start":410,"line_end":410,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331447,"byte_end":331475,"line_start":411,"line_end":411,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331476,"byte_end":331514,"line_start":412,"line_end":412,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331515,"byte_end":331518,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331519,"byte_end":331541,"line_start":414,"line_end":414,"column_start":1,"column_end":23}},{"value":"/   le_u16(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331542,"byte_end":331557,"line_start":415,"line_end":415,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331558,"byte_end":331564,"line_start":416,"line_end":416,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331565,"byte_end":331568,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331569,"byte_end":331646,"line_start":418,"line_end":418,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331647,"byte_end":331732,"line_start":419,"line_end":419,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331733,"byte_end":331740,"line_start":420,"line_end":420,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":331741,"byte_end":331750,"line_start":421,"line_end":421,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2357},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332706,"byte_end":332712,"line_start":455,"line_end":455,"column_start":8,"column_end":14},"name":"le_u24","qualname":"::number::complete::le_u24","value":"pub fn le_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 3 byte integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332193,"byte_end":332248,"line_start":439,"line_end":439,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332249,"byte_end":332252,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332253,"byte_end":332328,"line_start":441,"line_end":441,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332329,"byte_end":332340,"line_start":442,"line_end":442,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332341,"byte_end":332388,"line_start":443,"line_end":443,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332389,"byte_end":332417,"line_start":444,"line_end":444,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u24;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332418,"byte_end":332456,"line_start":445,"line_end":445,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332457,"byte_end":332460,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332461,"byte_end":332483,"line_start":447,"line_end":447,"column_start":1,"column_end":23}},{"value":"/   le_u24(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332484,"byte_end":332499,"line_start":448,"line_end":448,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332500,"byte_end":332506,"line_start":449,"line_end":449,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332507,"byte_end":332510,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332511,"byte_end":332594,"line_start":451,"line_end":451,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332595,"byte_end":332680,"line_start":452,"line_end":452,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332681,"byte_end":332688,"line_start":453,"line_end":453,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":332689,"byte_end":332698,"line_start":454,"line_end":454,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2360},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333661,"byte_end":333667,"line_start":488,"line_end":488,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::number::complete::le_u32","value":"pub fn le_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 4 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333141,"byte_end":333197,"line_start":472,"line_end":472,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333198,"byte_end":333201,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333202,"byte_end":333277,"line_start":474,"line_end":474,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333278,"byte_end":333289,"line_start":475,"line_end":475,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333290,"byte_end":333337,"line_start":476,"line_end":476,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333338,"byte_end":333366,"line_start":477,"line_end":477,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333367,"byte_end":333405,"line_start":478,"line_end":478,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333406,"byte_end":333409,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333410,"byte_end":333432,"line_start":480,"line_end":480,"column_start":1,"column_end":23}},{"value":"/   le_u32(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333433,"byte_end":333448,"line_start":481,"line_end":481,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333449,"byte_end":333455,"line_start":482,"line_end":482,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333456,"byte_end":333459,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333460,"byte_end":333549,"line_start":484,"line_end":484,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333550,"byte_end":333635,"line_start":485,"line_end":485,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333636,"byte_end":333643,"line_start":486,"line_end":486,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":333644,"byte_end":333653,"line_start":487,"line_end":487,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2363},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334640,"byte_end":334646,"line_start":521,"line_end":521,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::number::complete::le_u64","value":"pub fn le_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 8 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334096,"byte_end":334152,"line_start":505,"line_end":505,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334153,"byte_end":334156,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334157,"byte_end":334232,"line_start":507,"line_end":507,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334233,"byte_end":334244,"line_start":508,"line_end":508,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334245,"byte_end":334292,"line_start":509,"line_end":509,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334293,"byte_end":334321,"line_start":510,"line_end":510,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334322,"byte_end":334360,"line_start":511,"line_end":511,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334361,"byte_end":334364,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334365,"byte_end":334387,"line_start":513,"line_end":513,"column_start":1,"column_end":23}},{"value":"/   le_u64(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334388,"byte_end":334403,"line_start":514,"line_end":514,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334404,"byte_end":334410,"line_start":515,"line_end":515,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334411,"byte_end":334414,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334415,"byte_end":334528,"line_start":517,"line_end":517,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334529,"byte_end":334614,"line_start":518,"line_end":518,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334615,"byte_end":334622,"line_start":519,"line_end":519,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":334623,"byte_end":334632,"line_start":520,"line_end":520,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2366},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335690,"byte_end":335697,"line_start":555,"line_end":555,"column_start":8,"column_end":15},"name":"le_u128","qualname":"::number::complete::le_u128","value":"pub fn le_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 16 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335075,"byte_end":335132,"line_start":538,"line_end":538,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335133,"byte_end":335136,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335137,"byte_end":335212,"line_start":540,"line_end":540,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335213,"byte_end":335224,"line_start":541,"line_end":541,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335225,"byte_end":335272,"line_start":542,"line_end":542,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335273,"byte_end":335301,"line_start":543,"line_end":543,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_u128;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335302,"byte_end":335341,"line_start":544,"line_end":544,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335342,"byte_end":335345,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335346,"byte_end":335368,"line_start":546,"line_end":546,"column_start":1,"column_end":23}},{"value":"/   le_u128(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335369,"byte_end":335385,"line_start":547,"line_end":547,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335386,"byte_end":335392,"line_start":548,"line_end":548,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335393,"byte_end":335396,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335397,"byte_end":335558,"line_start":550,"line_end":550,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335559,"byte_end":335644,"line_start":551,"line_end":551,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335645,"byte_end":335652,"line_start":552,"line_end":552,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335653,"byte_end":335662,"line_start":553,"line_end":553,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":335663,"byte_end":335682,"line_start":554,"line_end":554,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2369},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336613,"byte_end":336618,"line_start":588,"line_end":588,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::number::complete::le_i8","value":"pub fn le_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336130,"byte_end":336169,"line_start":572,"line_end":572,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336170,"byte_end":336173,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336174,"byte_end":336249,"line_start":574,"line_end":574,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336250,"byte_end":336261,"line_start":575,"line_end":575,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336262,"byte_end":336309,"line_start":576,"line_end":576,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336310,"byte_end":336338,"line_start":577,"line_end":577,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336339,"byte_end":336376,"line_start":578,"line_end":578,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336377,"byte_end":336380,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336381,"byte_end":336403,"line_start":580,"line_end":580,"column_start":1,"column_end":23}},{"value":"/   le_i8(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336404,"byte_end":336418,"line_start":581,"line_end":581,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336419,"byte_end":336425,"line_start":582,"line_end":582,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336426,"byte_end":336429,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336430,"byte_end":336509,"line_start":584,"line_end":584,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336510,"byte_end":336587,"line_start":585,"line_end":585,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336588,"byte_end":336595,"line_start":586,"line_end":586,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336596,"byte_end":336605,"line_start":587,"line_end":587,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2372},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337289,"byte_end":337295,"line_start":611,"line_end":611,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::number::complete::le_i16","value":"pub fn le_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 2 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336783,"byte_end":336837,"line_start":595,"line_end":595,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336838,"byte_end":336841,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336842,"byte_end":336917,"line_start":597,"line_end":597,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336918,"byte_end":336929,"line_start":598,"line_end":598,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336930,"byte_end":336977,"line_start":599,"line_end":599,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":336978,"byte_end":337006,"line_start":600,"line_end":600,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337007,"byte_end":337045,"line_start":601,"line_end":601,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337046,"byte_end":337049,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337050,"byte_end":337072,"line_start":603,"line_end":603,"column_start":1,"column_end":23}},{"value":"/   le_i16(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337073,"byte_end":337088,"line_start":604,"line_end":604,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337089,"byte_end":337095,"line_start":605,"line_end":605,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337096,"byte_end":337099,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337100,"byte_end":337177,"line_start":607,"line_end":607,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337178,"byte_end":337263,"line_start":608,"line_end":608,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337264,"byte_end":337271,"line_start":609,"line_end":609,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337272,"byte_end":337281,"line_start":610,"line_end":610,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2375},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337975,"byte_end":337981,"line_start":634,"line_end":634,"column_start":8,"column_end":14},"name":"le_i24","qualname":"::number::complete::le_i24","value":"pub fn le_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 3 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337463,"byte_end":337517,"line_start":618,"line_end":618,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337518,"byte_end":337521,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337522,"byte_end":337597,"line_start":620,"line_end":620,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337598,"byte_end":337609,"line_start":621,"line_end":621,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337610,"byte_end":337657,"line_start":622,"line_end":622,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337658,"byte_end":337686,"line_start":623,"line_end":623,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i24;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337687,"byte_end":337725,"line_start":624,"line_end":624,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337726,"byte_end":337729,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337730,"byte_end":337752,"line_start":626,"line_end":626,"column_start":1,"column_end":23}},{"value":"/   le_i24(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337753,"byte_end":337768,"line_start":627,"line_end":627,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337769,"byte_end":337775,"line_start":628,"line_end":628,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337776,"byte_end":337779,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337780,"byte_end":337863,"line_start":630,"line_end":630,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337864,"byte_end":337949,"line_start":631,"line_end":631,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337950,"byte_end":337957,"line_start":632,"line_end":632,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":337958,"byte_end":337967,"line_start":633,"line_end":633,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2378},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338817,"byte_end":338823,"line_start":662,"line_end":662,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::number::complete::le_i32","value":"pub fn le_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 4 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338299,"byte_end":338353,"line_start":646,"line_end":646,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338354,"byte_end":338357,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338358,"byte_end":338433,"line_start":648,"line_end":648,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338434,"byte_end":338445,"line_start":649,"line_end":649,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338446,"byte_end":338493,"line_start":650,"line_end":650,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338494,"byte_end":338522,"line_start":651,"line_end":651,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338523,"byte_end":338561,"line_start":652,"line_end":652,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338562,"byte_end":338565,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338566,"byte_end":338588,"line_start":654,"line_end":654,"column_start":1,"column_end":23}},{"value":"/   le_i32(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338589,"byte_end":338604,"line_start":655,"line_end":655,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338605,"byte_end":338611,"line_start":656,"line_end":656,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338612,"byte_end":338615,"line_start":657,"line_end":657,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338616,"byte_end":338705,"line_start":658,"line_end":658,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338706,"byte_end":338791,"line_start":659,"line_end":659,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338792,"byte_end":338799,"line_start":660,"line_end":660,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338800,"byte_end":338809,"line_start":661,"line_end":661,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2381},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339533,"byte_end":339539,"line_start":685,"line_end":685,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::number::complete::le_i64","value":"pub fn le_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 8 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":338991,"byte_end":339045,"line_start":669,"line_end":669,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339046,"byte_end":339049,"line_start":670,"line_end":670,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339050,"byte_end":339125,"line_start":671,"line_end":671,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339126,"byte_end":339137,"line_start":672,"line_end":672,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339138,"byte_end":339185,"line_start":673,"line_end":673,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339186,"byte_end":339214,"line_start":674,"line_end":674,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339215,"byte_end":339253,"line_start":675,"line_end":675,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339254,"byte_end":339257,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339258,"byte_end":339280,"line_start":677,"line_end":677,"column_start":1,"column_end":23}},{"value":"/   le_i64(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339281,"byte_end":339296,"line_start":678,"line_end":678,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339297,"byte_end":339303,"line_start":679,"line_end":679,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339304,"byte_end":339307,"line_start":680,"line_end":680,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339308,"byte_end":339421,"line_start":681,"line_end":681,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339422,"byte_end":339507,"line_start":682,"line_end":682,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339508,"byte_end":339515,"line_start":683,"line_end":683,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339516,"byte_end":339525,"line_start":684,"line_end":684,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2384},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340320,"byte_end":340327,"line_start":709,"line_end":709,"column_start":8,"column_end":15},"name":"le_i128","qualname":"::number::complete::le_i128","value":"pub fn le_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 16 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339707,"byte_end":339762,"line_start":692,"line_end":692,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339763,"byte_end":339766,"line_start":693,"line_end":693,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339767,"byte_end":339842,"line_start":694,"line_end":694,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339843,"byte_end":339854,"line_start":695,"line_end":695,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339855,"byte_end":339902,"line_start":696,"line_end":696,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339903,"byte_end":339931,"line_start":697,"line_end":697,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_i128;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339932,"byte_end":339971,"line_start":698,"line_end":698,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339972,"byte_end":339975,"line_start":699,"line_end":699,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339976,"byte_end":339998,"line_start":700,"line_end":700,"column_start":1,"column_end":23}},{"value":"/   le_i128(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":339999,"byte_end":340015,"line_start":701,"line_end":701,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340016,"byte_end":340022,"line_start":702,"line_end":702,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340023,"byte_end":340026,"line_start":703,"line_end":703,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340027,"byte_end":340188,"line_start":704,"line_end":704,"column_start":1,"column_end":162}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340189,"byte_end":340274,"line_start":705,"line_end":705,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340275,"byte_end":340282,"line_start":706,"line_end":706,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340283,"byte_end":340292,"line_start":707,"line_end":707,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340293,"byte_end":340312,"line_start":708,"line_end":708,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2387},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341035,"byte_end":341037,"line_start":733,"line_end":733,"column_start":8,"column_end":10},"name":"u8","qualname":"::number::complete::u8","value":"pub fn u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340498,"byte_end":340539,"line_start":716,"line_end":716,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340540,"byte_end":340543,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340544,"byte_end":340602,"line_start":718,"line_end":718,"column_start":1,"column_end":59}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340603,"byte_end":340677,"line_start":719,"line_end":719,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340678,"byte_end":340689,"line_start":720,"line_end":720,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340690,"byte_end":340737,"line_start":721,"line_end":721,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340738,"byte_end":340766,"line_start":722,"line_end":722,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340767,"byte_end":340801,"line_start":723,"line_end":723,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340802,"byte_end":340805,"line_start":724,"line_end":724,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340806,"byte_end":340828,"line_start":725,"line_end":725,"column_start":1,"column_end":23}},{"value":"/   u8(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340829,"byte_end":340840,"line_start":726,"line_end":726,"column_start":1,"column_end":12}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340841,"byte_end":340847,"line_start":727,"line_end":727,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340848,"byte_end":340851,"line_start":728,"line_end":728,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340852,"byte_end":340931,"line_start":729,"line_end":729,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":340932,"byte_end":341009,"line_start":730,"line_end":730,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341010,"byte_end":341017,"line_start":731,"line_end":731,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341018,"byte_end":341027,"line_start":732,"line_end":732,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2390},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342328,"byte_end":342331,"line_start":773,"line_end":773,"column_start":8,"column_end":11},"name":"u16","qualname":"::number::complete::u16","value":"pub fn u16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 2 bytes integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 2 bytes integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341385,"byte_end":341427,"line_start":747,"line_end":747,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341428,"byte_end":341431,"line_start":748,"line_end":748,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u16 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341432,"byte_end":341519,"line_start":749,"line_end":749,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u16 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341520,"byte_end":341605,"line_start":750,"line_end":750,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341606,"byte_end":341680,"line_start":751,"line_end":751,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341681,"byte_end":341684,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341685,"byte_end":341696,"line_start":753,"line_end":753,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341697,"byte_end":341744,"line_start":754,"line_end":754,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341745,"byte_end":341773,"line_start":755,"line_end":755,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341774,"byte_end":341809,"line_start":756,"line_end":756,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341810,"byte_end":341813,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ let be_u16 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341814,"byte_end":341836,"line_start":758,"line_end":758,"column_start":1,"column_end":23}},{"value":"/   u16(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341837,"byte_end":341879,"line_start":759,"line_end":759,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341880,"byte_end":341886,"line_start":760,"line_end":760,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341887,"byte_end":341890,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341891,"byte_end":341968,"line_start":762,"line_end":762,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_u16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":341969,"byte_end":342054,"line_start":763,"line_end":763,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342055,"byte_end":342058,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ let le_u16 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342059,"byte_end":342081,"line_start":765,"line_end":765,"column_start":1,"column_end":23}},{"value":"/   u16(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342082,"byte_end":342127,"line_start":766,"line_end":766,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342128,"byte_end":342134,"line_start":767,"line_end":767,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342135,"byte_end":342138,"line_start":768,"line_end":768,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342139,"byte_end":342216,"line_start":769,"line_end":769,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_u16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342217,"byte_end":342302,"line_start":770,"line_end":770,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342303,"byte_end":342310,"line_start":771,"line_end":771,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342311,"byte_end":342320,"line_start":772,"line_end":772,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2393},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343732,"byte_end":343735,"line_start":812,"line_end":812,"column_start":8,"column_end":11},"name":"u24","qualname":"::number::complete::u24","value":"pub fn u24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 3 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342782,"byte_end":342823,"line_start":787,"line_end":787,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342824,"byte_end":342827,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u24 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342828,"byte_end":342915,"line_start":789,"line_end":789,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u24 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":342916,"byte_end":343001,"line_start":790,"line_end":790,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343002,"byte_end":343076,"line_start":791,"line_end":791,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343077,"byte_end":343088,"line_start":792,"line_end":792,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343089,"byte_end":343136,"line_start":793,"line_end":793,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343137,"byte_end":343165,"line_start":794,"line_end":794,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u24;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343166,"byte_end":343201,"line_start":795,"line_end":795,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343202,"byte_end":343205,"line_start":796,"line_end":796,"column_start":1,"column_end":4}},{"value":"/ let be_u24 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343206,"byte_end":343228,"line_start":797,"line_end":797,"column_start":1,"column_end":23}},{"value":"/   u24(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343229,"byte_end":343271,"line_start":798,"line_end":798,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343272,"byte_end":343278,"line_start":799,"line_end":799,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343279,"byte_end":343282,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343283,"byte_end":343366,"line_start":801,"line_end":801,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_u24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343367,"byte_end":343452,"line_start":802,"line_end":802,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343453,"byte_end":343456,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ let le_u24 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343457,"byte_end":343479,"line_start":804,"line_end":804,"column_start":1,"column_end":23}},{"value":"/   u24(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343480,"byte_end":343525,"line_start":805,"line_end":805,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343526,"byte_end":343532,"line_start":806,"line_end":806,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343533,"byte_end":343536,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343537,"byte_end":343620,"line_start":808,"line_end":808,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_u24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343621,"byte_end":343706,"line_start":809,"line_end":809,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343707,"byte_end":343714,"line_start":810,"line_end":810,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":343715,"byte_end":343724,"line_start":811,"line_end":811,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2396},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345148,"byte_end":345151,"line_start":851,"line_end":851,"column_start":8,"column_end":11},"name":"u32","qualname":"::number::complete::u32","value":"pub fn u32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 4 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344186,"byte_end":344227,"line_start":826,"line_end":826,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344228,"byte_end":344231,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u32 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344232,"byte_end":344319,"line_start":828,"line_end":828,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u32 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344320,"byte_end":344405,"line_start":829,"line_end":829,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344406,"byte_end":344480,"line_start":830,"line_end":830,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344481,"byte_end":344492,"line_start":831,"line_end":831,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344493,"byte_end":344540,"line_start":832,"line_end":832,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344541,"byte_end":344569,"line_start":833,"line_end":833,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344570,"byte_end":344605,"line_start":834,"line_end":834,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344606,"byte_end":344609,"line_start":835,"line_end":835,"column_start":1,"column_end":4}},{"value":"/ let be_u32 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344610,"byte_end":344632,"line_start":836,"line_end":836,"column_start":1,"column_end":23}},{"value":"/   u32(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344633,"byte_end":344675,"line_start":837,"line_end":837,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344676,"byte_end":344682,"line_start":838,"line_end":838,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344683,"byte_end":344686,"line_start":839,"line_end":839,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344687,"byte_end":344776,"line_start":840,"line_end":840,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_u32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344777,"byte_end":344862,"line_start":841,"line_end":841,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344863,"byte_end":344866,"line_start":842,"line_end":842,"column_start":1,"column_end":4}},{"value":"/ let le_u32 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344867,"byte_end":344889,"line_start":843,"line_end":843,"column_start":1,"column_end":23}},{"value":"/   u32(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344890,"byte_end":344935,"line_start":844,"line_end":844,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344936,"byte_end":344942,"line_start":845,"line_end":845,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344943,"byte_end":344946,"line_start":846,"line_end":846,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":344947,"byte_end":345036,"line_start":847,"line_end":847,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_u32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345037,"byte_end":345122,"line_start":848,"line_end":848,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345123,"byte_end":345130,"line_start":849,"line_end":849,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345131,"byte_end":345140,"line_start":850,"line_end":850,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2399},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346612,"byte_end":346615,"line_start":890,"line_end":890,"column_start":8,"column_end":11},"name":"u64","qualname":"::number::complete::u64","value":"pub fn u64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 8 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345602,"byte_end":345643,"line_start":865,"line_end":865,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345644,"byte_end":345647,"line_start":866,"line_end":866,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u64 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345648,"byte_end":345735,"line_start":867,"line_end":867,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u64 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345736,"byte_end":345821,"line_start":868,"line_end":868,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345822,"byte_end":345896,"line_start":869,"line_end":869,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345897,"byte_end":345908,"line_start":870,"line_end":870,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345909,"byte_end":345956,"line_start":871,"line_end":871,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345957,"byte_end":345985,"line_start":872,"line_end":872,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":345986,"byte_end":346021,"line_start":873,"line_end":873,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346022,"byte_end":346025,"line_start":874,"line_end":874,"column_start":1,"column_end":4}},{"value":"/ let be_u64 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346026,"byte_end":346048,"line_start":875,"line_end":875,"column_start":1,"column_end":23}},{"value":"/   u64(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346049,"byte_end":346091,"line_start":876,"line_end":876,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346092,"byte_end":346098,"line_start":877,"line_end":877,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346099,"byte_end":346102,"line_start":878,"line_end":878,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346103,"byte_end":346216,"line_start":879,"line_end":879,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_u64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346217,"byte_end":346302,"line_start":880,"line_end":880,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346303,"byte_end":346306,"line_start":881,"line_end":881,"column_start":1,"column_end":4}},{"value":"/ let le_u64 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346307,"byte_end":346329,"line_start":882,"line_end":882,"column_start":1,"column_end":23}},{"value":"/   u64(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346330,"byte_end":346375,"line_start":883,"line_end":883,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346376,"byte_end":346382,"line_start":884,"line_end":884,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346383,"byte_end":346386,"line_start":885,"line_end":885,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346387,"byte_end":346500,"line_start":886,"line_end":886,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_u64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346501,"byte_end":346586,"line_start":887,"line_end":887,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346587,"byte_end":346594,"line_start":888,"line_end":888,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":346595,"byte_end":346604,"line_start":889,"line_end":889,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2402},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348204,"byte_end":348208,"line_start":930,"line_end":930,"column_start":8,"column_end":12},"name":"u128","qualname":"::number::complete::u128","value":"pub fn u128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 16 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347066,"byte_end":347108,"line_start":904,"line_end":904,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347109,"byte_end":347112,"line_start":905,"line_end":905,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u128 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347113,"byte_end":347201,"line_start":906,"line_end":906,"column_start":1,"column_end":89}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u128 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347202,"byte_end":347288,"line_start":907,"line_end":907,"column_start":1,"column_end":87}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347289,"byte_end":347363,"line_start":908,"line_end":908,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347364,"byte_end":347375,"line_start":909,"line_end":909,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347376,"byte_end":347423,"line_start":910,"line_end":910,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347424,"byte_end":347452,"line_start":911,"line_end":911,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::u128;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347453,"byte_end":347489,"line_start":912,"line_end":912,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347490,"byte_end":347493,"line_start":913,"line_end":913,"column_start":1,"column_end":4}},{"value":"/ let be_u128 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347494,"byte_end":347517,"line_start":914,"line_end":914,"column_start":1,"column_end":24}},{"value":"/   u128(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347518,"byte_end":347561,"line_start":915,"line_end":915,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347562,"byte_end":347568,"line_start":916,"line_end":916,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347569,"byte_end":347572,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347573,"byte_end":347735,"line_start":918,"line_end":918,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_u128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347736,"byte_end":347822,"line_start":919,"line_end":919,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347823,"byte_end":347826,"line_start":920,"line_end":920,"column_start":1,"column_end":4}},{"value":"/ let le_u128 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347827,"byte_end":347850,"line_start":921,"line_end":921,"column_start":1,"column_end":24}},{"value":"/   u128(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347851,"byte_end":347897,"line_start":922,"line_end":922,"column_start":1,"column_end":47}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347898,"byte_end":347904,"line_start":923,"line_end":923,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347905,"byte_end":347908,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":347909,"byte_end":348071,"line_start":925,"line_end":925,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_u128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348072,"byte_end":348158,"line_start":926,"line_end":926,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348159,"byte_end":348166,"line_start":927,"line_end":927,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348167,"byte_end":348176,"line_start":928,"line_end":928,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348177,"byte_end":348196,"line_start":929,"line_end":929,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2405},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349198,"byte_end":349200,"line_start":961,"line_end":961,"column_start":8,"column_end":10},"name":"i8","qualname":"::number::complete::i8","value":"pub fn i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348664,"byte_end":348702,"line_start":944,"line_end":944,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348703,"byte_end":348706,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348707,"byte_end":348765,"line_start":946,"line_end":946,"column_start":1,"column_end":59}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348766,"byte_end":348840,"line_start":947,"line_end":947,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348841,"byte_end":348852,"line_start":948,"line_end":948,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348853,"byte_end":348900,"line_start":949,"line_end":949,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348901,"byte_end":348929,"line_start":950,"line_end":950,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348930,"byte_end":348964,"line_start":951,"line_end":951,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348965,"byte_end":348968,"line_start":952,"line_end":952,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348969,"byte_end":348991,"line_start":953,"line_end":953,"column_start":1,"column_end":23}},{"value":"/   i8(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":348992,"byte_end":349003,"line_start":954,"line_end":954,"column_start":1,"column_end":12}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349004,"byte_end":349010,"line_start":955,"line_end":955,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349011,"byte_end":349014,"line_start":956,"line_end":956,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349015,"byte_end":349094,"line_start":957,"line_end":957,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Error((&[][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349095,"byte_end":349172,"line_start":958,"line_end":958,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349173,"byte_end":349180,"line_start":959,"line_end":959,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349181,"byte_end":349190,"line_start":960,"line_end":960,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2408},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350289,"byte_end":350292,"line_start":993,"line_end":993,"column_start":8,"column_end":11},"name":"i16","qualname":"::number::complete::i16","value":"pub fn i16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 2 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 2 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349354,"byte_end":349392,"line_start":968,"line_end":968,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349393,"byte_end":349396,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i16 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349397,"byte_end":349484,"line_start":970,"line_end":970,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i16 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349485,"byte_end":349570,"line_start":971,"line_end":971,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349571,"byte_end":349645,"line_start":972,"line_end":972,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349646,"byte_end":349657,"line_start":973,"line_end":973,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349658,"byte_end":349705,"line_start":974,"line_end":974,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349706,"byte_end":349734,"line_start":975,"line_end":975,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349735,"byte_end":349770,"line_start":976,"line_end":976,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349771,"byte_end":349774,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ let be_i16 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349775,"byte_end":349797,"line_start":978,"line_end":978,"column_start":1,"column_end":23}},{"value":"/   i16(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349798,"byte_end":349840,"line_start":979,"line_end":979,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349841,"byte_end":349847,"line_start":980,"line_end":980,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349848,"byte_end":349851,"line_start":981,"line_end":981,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349852,"byte_end":349929,"line_start":982,"line_end":982,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_i16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":349930,"byte_end":350015,"line_start":983,"line_end":983,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350016,"byte_end":350019,"line_start":984,"line_end":984,"column_start":1,"column_end":4}},{"value":"/ let le_i16 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350020,"byte_end":350042,"line_start":985,"line_end":985,"column_start":1,"column_end":23}},{"value":"/   i16(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350043,"byte_end":350088,"line_start":986,"line_end":986,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350089,"byte_end":350095,"line_start":987,"line_end":987,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350096,"byte_end":350099,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350100,"byte_end":350177,"line_start":989,"line_end":989,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_i16(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350178,"byte_end":350263,"line_start":990,"line_end":990,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350264,"byte_end":350271,"line_start":991,"line_end":991,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350272,"byte_end":350281,"line_start":992,"line_end":992,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2411},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351690,"byte_end":351693,"line_start":1032,"line_end":1032,"column_start":8,"column_end":11},"name":"i24","qualname":"::number::complete::i24","value":"pub fn i24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 3 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350743,"byte_end":350781,"line_start":1007,"line_end":1007,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350782,"byte_end":350785,"line_start":1008,"line_end":1008,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i24 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350786,"byte_end":350873,"line_start":1009,"line_end":1009,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i24 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350874,"byte_end":350959,"line_start":1010,"line_end":1010,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":350960,"byte_end":351034,"line_start":1011,"line_end":1011,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351035,"byte_end":351046,"line_start":1012,"line_end":1012,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351047,"byte_end":351094,"line_start":1013,"line_end":1013,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351095,"byte_end":351123,"line_start":1014,"line_end":1014,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i24;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351124,"byte_end":351159,"line_start":1015,"line_end":1015,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351160,"byte_end":351163,"line_start":1016,"line_end":1016,"column_start":1,"column_end":4}},{"value":"/ let be_i24 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351164,"byte_end":351186,"line_start":1017,"line_end":1017,"column_start":1,"column_end":23}},{"value":"/   i24(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351187,"byte_end":351229,"line_start":1018,"line_end":1018,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351230,"byte_end":351236,"line_start":1019,"line_end":1019,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351237,"byte_end":351240,"line_start":1020,"line_end":1020,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351241,"byte_end":351324,"line_start":1021,"line_end":1021,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_i24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351325,"byte_end":351410,"line_start":1022,"line_end":1022,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351411,"byte_end":351414,"line_start":1023,"line_end":1023,"column_start":1,"column_end":4}},{"value":"/ let le_i24 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351415,"byte_end":351437,"line_start":1024,"line_end":1024,"column_start":1,"column_end":23}},{"value":"/   i24(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351438,"byte_end":351483,"line_start":1025,"line_end":1025,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351484,"byte_end":351490,"line_start":1026,"line_end":1026,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351491,"byte_end":351494,"line_start":1027,"line_end":1027,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351495,"byte_end":351578,"line_start":1028,"line_end":1028,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_i24(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351579,"byte_end":351664,"line_start":1029,"line_end":1029,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351665,"byte_end":351672,"line_start":1030,"line_end":1030,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":351673,"byte_end":351682,"line_start":1031,"line_end":1031,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2414},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353103,"byte_end":353106,"line_start":1071,"line_end":1071,"column_start":8,"column_end":11},"name":"i32","qualname":"::number::complete::i32","value":"pub fn i32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 4 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352144,"byte_end":352182,"line_start":1046,"line_end":1046,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352183,"byte_end":352186,"line_start":1047,"line_end":1047,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i32 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352187,"byte_end":352274,"line_start":1048,"line_end":1048,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i32 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352275,"byte_end":352360,"line_start":1049,"line_end":1049,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352361,"byte_end":352435,"line_start":1050,"line_end":1050,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352436,"byte_end":352447,"line_start":1051,"line_end":1051,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352448,"byte_end":352495,"line_start":1052,"line_end":1052,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352496,"byte_end":352524,"line_start":1053,"line_end":1053,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352525,"byte_end":352560,"line_start":1054,"line_end":1054,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352561,"byte_end":352564,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ let be_i32 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352565,"byte_end":352587,"line_start":1056,"line_end":1056,"column_start":1,"column_end":23}},{"value":"/   i32(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352588,"byte_end":352630,"line_start":1057,"line_end":1057,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352631,"byte_end":352637,"line_start":1058,"line_end":1058,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352638,"byte_end":352641,"line_start":1059,"line_end":1059,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352642,"byte_end":352731,"line_start":1060,"line_end":1060,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_i32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352732,"byte_end":352817,"line_start":1061,"line_end":1061,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352818,"byte_end":352821,"line_start":1062,"line_end":1062,"column_start":1,"column_end":4}},{"value":"/ let le_i32 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352822,"byte_end":352844,"line_start":1063,"line_end":1063,"column_start":1,"column_end":23}},{"value":"/   i32(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352845,"byte_end":352890,"line_start":1064,"line_end":1064,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352891,"byte_end":352897,"line_start":1065,"line_end":1065,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352898,"byte_end":352901,"line_start":1066,"line_end":1066,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352902,"byte_end":352991,"line_start":1067,"line_end":1067,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_i32(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":352992,"byte_end":353077,"line_start":1068,"line_end":1068,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353078,"byte_end":353085,"line_start":1069,"line_end":1069,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353086,"byte_end":353095,"line_start":1070,"line_end":1070,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2417},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354564,"byte_end":354567,"line_start":1110,"line_end":1110,"column_start":8,"column_end":11},"name":"i64","qualname":"::number::complete::i64","value":"pub fn i64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 8 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353557,"byte_end":353595,"line_start":1085,"line_end":1085,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353596,"byte_end":353599,"line_start":1086,"line_end":1086,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i64 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353600,"byte_end":353687,"line_start":1087,"line_end":1087,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i64 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353688,"byte_end":353773,"line_start":1088,"line_end":1088,"column_start":1,"column_end":86}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353774,"byte_end":353848,"line_start":1089,"line_end":1089,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353849,"byte_end":353860,"line_start":1090,"line_end":1090,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353861,"byte_end":353908,"line_start":1091,"line_end":1091,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353909,"byte_end":353937,"line_start":1092,"line_end":1092,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353938,"byte_end":353973,"line_start":1093,"line_end":1093,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353974,"byte_end":353977,"line_start":1094,"line_end":1094,"column_start":1,"column_end":4}},{"value":"/ let be_i64 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":353978,"byte_end":354000,"line_start":1095,"line_end":1095,"column_start":1,"column_end":23}},{"value":"/   i64(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354001,"byte_end":354043,"line_start":1096,"line_end":1096,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354044,"byte_end":354050,"line_start":1097,"line_end":1097,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354051,"byte_end":354054,"line_start":1098,"line_end":1098,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354055,"byte_end":354168,"line_start":1099,"line_end":1099,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_i64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354169,"byte_end":354254,"line_start":1100,"line_end":1100,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354255,"byte_end":354258,"line_start":1101,"line_end":1101,"column_start":1,"column_end":4}},{"value":"/ let le_i64 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354259,"byte_end":354281,"line_start":1102,"line_end":1102,"column_start":1,"column_end":23}},{"value":"/   i64(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354282,"byte_end":354327,"line_start":1103,"line_end":1103,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354328,"byte_end":354334,"line_start":1104,"line_end":1104,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354335,"byte_end":354338,"line_start":1105,"line_end":1105,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354339,"byte_end":354452,"line_start":1106,"line_end":1106,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_i64(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354453,"byte_end":354538,"line_start":1107,"line_end":1107,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354539,"byte_end":354546,"line_start":1108,"line_end":1108,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":354547,"byte_end":354556,"line_start":1109,"line_end":1109,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2420},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356153,"byte_end":356157,"line_start":1150,"line_end":1150,"column_start":8,"column_end":12},"name":"i128","qualname":"::number::complete::i128","value":"pub fn i128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 16 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355018,"byte_end":355057,"line_start":1124,"line_end":1124,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355058,"byte_end":355061,"line_start":1125,"line_end":1125,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i128 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355062,"byte_end":355150,"line_start":1126,"line_end":1126,"column_start":1,"column_end":89}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i128 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355151,"byte_end":355237,"line_start":1127,"line_end":1127,"column_start":1,"column_end":87}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355238,"byte_end":355312,"line_start":1128,"line_end":1128,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355313,"byte_end":355324,"line_start":1129,"line_end":1129,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355325,"byte_end":355372,"line_start":1130,"line_end":1130,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355373,"byte_end":355401,"line_start":1131,"line_end":1131,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::i128;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355402,"byte_end":355438,"line_start":1132,"line_end":1132,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355439,"byte_end":355442,"line_start":1133,"line_end":1133,"column_start":1,"column_end":4}},{"value":"/ let be_i128 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355443,"byte_end":355466,"line_start":1134,"line_end":1134,"column_start":1,"column_end":24}},{"value":"/   i128(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355467,"byte_end":355510,"line_start":1135,"line_end":1135,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355511,"byte_end":355517,"line_start":1136,"line_end":1136,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355518,"byte_end":355521,"line_start":1137,"line_end":1137,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355522,"byte_end":355684,"line_start":1138,"line_end":1138,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_i128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355685,"byte_end":355771,"line_start":1139,"line_end":1139,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355772,"byte_end":355775,"line_start":1140,"line_end":1140,"column_start":1,"column_end":4}},{"value":"/ let le_i128 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355776,"byte_end":355799,"line_start":1141,"line_end":1141,"column_start":1,"column_end":24}},{"value":"/   i128(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355800,"byte_end":355846,"line_start":1142,"line_end":1142,"column_start":1,"column_end":47}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355847,"byte_end":355853,"line_start":1143,"line_end":1143,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355854,"byte_end":355857,"line_start":1144,"line_end":1144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":355858,"byte_end":356020,"line_start":1145,"line_end":1145,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_i128(&b\"\\x01\"[..]), Err(Err::Error((&[0x01][..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356021,"byte_end":356107,"line_start":1146,"line_end":1146,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356108,"byte_end":356115,"line_start":1147,"line_end":1147,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356116,"byte_end":356125,"line_start":1148,"line_end":1148,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356126,"byte_end":356145,"line_start":1149,"line_end":1149,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2423},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357121,"byte_end":357127,"line_start":1180,"line_end":1180,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::number::complete::be_f32","value":"pub fn be_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 4 bytes floating point number.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356613,"byte_end":356671,"line_start":1164,"line_end":1164,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356672,"byte_end":356675,"line_start":1165,"line_end":1165,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356676,"byte_end":356751,"line_start":1166,"line_end":1166,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356752,"byte_end":356763,"line_start":1167,"line_end":1167,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356764,"byte_end":356811,"line_start":1168,"line_end":1168,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356812,"byte_end":356840,"line_start":1169,"line_end":1169,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_f32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356841,"byte_end":356879,"line_start":1170,"line_end":1170,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356880,"byte_end":356883,"line_start":1171,"line_end":1171,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356884,"byte_end":356906,"line_start":1172,"line_end":1172,"column_start":1,"column_end":23}},{"value":"/   be_f32(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356907,"byte_end":356922,"line_start":1173,"line_end":1173,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356923,"byte_end":356929,"line_start":1174,"line_end":1174,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356930,"byte_end":356933,"line_start":1175,"line_end":1175,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":356934,"byte_end":357010,"line_start":1176,"line_end":1176,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357011,"byte_end":357095,"line_start":1177,"line_end":1177,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357096,"byte_end":357103,"line_start":1178,"line_end":1178,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357104,"byte_end":357113,"line_start":1179,"line_end":1179,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2426},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357887,"byte_end":357893,"line_start":1206,"line_end":1206,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::number::complete::be_f64","value":"pub fn be_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 8 bytes floating point number.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357355,"byte_end":357413,"line_start":1190,"line_end":1190,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357414,"byte_end":357417,"line_start":1191,"line_end":1191,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357418,"byte_end":357493,"line_start":1192,"line_end":1192,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357494,"byte_end":357505,"line_start":1193,"line_end":1193,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357506,"byte_end":357553,"line_start":1194,"line_end":1194,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357554,"byte_end":357582,"line_start":1195,"line_end":1195,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::be_f64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357583,"byte_end":357621,"line_start":1196,"line_end":1196,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357622,"byte_end":357625,"line_start":1197,"line_end":1197,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357626,"byte_end":357648,"line_start":1198,"line_end":1198,"column_start":1,"column_end":23}},{"value":"/   be_f64(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357649,"byte_end":357664,"line_start":1199,"line_end":1199,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357665,"byte_end":357671,"line_start":1200,"line_end":1200,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357672,"byte_end":357675,"line_start":1201,"line_end":1201,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357676,"byte_end":357776,"line_start":1202,"line_end":1202,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357777,"byte_end":357861,"line_start":1203,"line_end":1203,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357862,"byte_end":357869,"line_start":1204,"line_end":1204,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":357870,"byte_end":357879,"line_start":1205,"line_end":1205,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2429},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358632,"byte_end":358638,"line_start":1232,"line_end":1232,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::number::complete::le_f32","value":"pub fn le_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 4 bytes floating point number.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358121,"byte_end":358182,"line_start":1216,"line_end":1216,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358183,"byte_end":358186,"line_start":1217,"line_end":1217,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358187,"byte_end":358262,"line_start":1218,"line_end":1218,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358263,"byte_end":358274,"line_start":1219,"line_end":1219,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358275,"byte_end":358322,"line_start":1220,"line_end":1220,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358323,"byte_end":358351,"line_start":1221,"line_end":1221,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_f32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358352,"byte_end":358390,"line_start":1222,"line_end":1222,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358391,"byte_end":358394,"line_start":1223,"line_end":1223,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358395,"byte_end":358417,"line_start":1224,"line_end":1224,"column_start":1,"column_end":23}},{"value":"/   le_f32(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358418,"byte_end":358433,"line_start":1225,"line_end":1225,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358434,"byte_end":358440,"line_start":1226,"line_end":1226,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358441,"byte_end":358444,"line_start":1227,"line_end":1227,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358445,"byte_end":358521,"line_start":1228,"line_end":1228,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358522,"byte_end":358606,"line_start":1229,"line_end":1229,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358607,"byte_end":358614,"line_start":1230,"line_end":1230,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358615,"byte_end":358624,"line_start":1231,"line_end":1231,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2432},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359401,"byte_end":359407,"line_start":1258,"line_end":1258,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::number::complete::le_f64","value":"pub fn le_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 8 bytes floating point number.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358866,"byte_end":358927,"line_start":1242,"line_end":1242,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358928,"byte_end":358931,"line_start":1243,"line_end":1243,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Returns an error if there is not enough input data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":358932,"byte_end":359007,"line_start":1244,"line_end":1244,"column_start":1,"column_end":76}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359008,"byte_end":359019,"line_start":1245,"line_end":1245,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359020,"byte_end":359067,"line_start":1246,"line_end":1246,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359068,"byte_end":359096,"line_start":1247,"line_end":1247,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::le_f64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359097,"byte_end":359135,"line_start":1248,"line_end":1248,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359136,"byte_end":359139,"line_start":1249,"line_end":1249,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359140,"byte_end":359162,"line_start":1250,"line_end":1250,"column_start":1,"column_end":23}},{"value":"/   le_f64(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359163,"byte_end":359178,"line_start":1251,"line_end":1251,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359179,"byte_end":359185,"line_start":1252,"line_end":1252,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359186,"byte_end":359189,"line_start":1253,"line_end":1253,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359190,"byte_end":359290,"line_start":1254,"line_end":1254,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359291,"byte_end":359375,"line_start":1255,"line_end":1255,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359376,"byte_end":359383,"line_start":1256,"line_end":1256,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359384,"byte_end":359393,"line_start":1257,"line_end":1257,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2435},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360569,"byte_end":360572,"line_start":1293,"line_end":1293,"column_start":8,"column_end":11},"name":"f32","qualname":"::number::complete::f32","value":"pub fn f32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a 4 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes a 4 byte floating point number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359635,"byte_end":359680,"line_start":1268,"line_end":1268,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359681,"byte_end":359684,"line_start":1269,"line_end":1269,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian f32 float,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359685,"byte_end":359770,"line_start":1270,"line_end":1270,"column_start":1,"column_end":86}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian f32 float.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359771,"byte_end":359854,"line_start":1271,"line_end":1271,"column_start":1,"column_end":84}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359855,"byte_end":359929,"line_start":1272,"line_end":1272,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359930,"byte_end":359941,"line_start":1273,"line_end":1273,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359942,"byte_end":359989,"line_start":1274,"line_end":1274,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":359990,"byte_end":360018,"line_start":1275,"line_end":1275,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::f32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360019,"byte_end":360054,"line_start":1276,"line_end":1276,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360055,"byte_end":360058,"line_start":1277,"line_end":1277,"column_start":1,"column_end":4}},{"value":"/ let be_f32 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360059,"byte_end":360081,"line_start":1278,"line_end":1278,"column_start":1,"column_end":23}},{"value":"/   f32(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360082,"byte_end":360124,"line_start":1279,"line_end":1279,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360125,"byte_end":360131,"line_start":1280,"line_end":1280,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360132,"byte_end":360135,"line_start":1281,"line_end":1281,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f32(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360136,"byte_end":360212,"line_start":1282,"line_end":1282,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(be_f32(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360213,"byte_end":360297,"line_start":1283,"line_end":1283,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360298,"byte_end":360301,"line_start":1284,"line_end":1284,"column_start":1,"column_end":4}},{"value":"/ let le_f32 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360302,"byte_end":360324,"line_start":1285,"line_end":1285,"column_start":1,"column_end":23}},{"value":"/   f32(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360325,"byte_end":360370,"line_start":1286,"line_end":1286,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360371,"byte_end":360377,"line_start":1287,"line_end":1287,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360378,"byte_end":360381,"line_start":1288,"line_end":1288,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f32(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360382,"byte_end":360458,"line_start":1289,"line_end":1289,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(le_f32(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360459,"byte_end":360543,"line_start":1290,"line_end":1290,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360544,"byte_end":360551,"line_start":1291,"line_end":1291,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":360552,"byte_end":360561,"line_start":1292,"line_end":1292,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2438},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362006,"byte_end":362009,"line_start":1332,"line_end":1332,"column_start":8,"column_end":11},"name":"f64","qualname":"::number::complete::f64","value":"pub fn f64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an 8 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes an 8 byte floating point number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361023,"byte_end":361069,"line_start":1307,"line_end":1307,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361070,"byte_end":361073,"line_start":1308,"line_end":1308,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian f64 float,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361074,"byte_end":361159,"line_start":1309,"line_end":1309,"column_start":1,"column_end":86}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian f64 float.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361160,"byte_end":361243,"line_start":1310,"line_end":1310,"column_start":1,"column_end":84}},{"value":"/ *complete version*: returns an error if there is not enough input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361244,"byte_end":361318,"line_start":1311,"line_end":1311,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361319,"byte_end":361330,"line_start":1312,"line_end":1312,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361331,"byte_end":361378,"line_start":1313,"line_end":1313,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361379,"byte_end":361407,"line_start":1314,"line_end":1314,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::f64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361408,"byte_end":361443,"line_start":1315,"line_end":1315,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361444,"byte_end":361447,"line_start":1316,"line_end":1316,"column_start":1,"column_end":4}},{"value":"/ let be_f64 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361448,"byte_end":361470,"line_start":1317,"line_end":1317,"column_start":1,"column_end":23}},{"value":"/   f64(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361471,"byte_end":361513,"line_start":1318,"line_end":1318,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361514,"byte_end":361520,"line_start":1319,"line_end":1319,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361521,"byte_end":361524,"line_start":1320,"line_end":1320,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f64(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361525,"byte_end":361625,"line_start":1321,"line_end":1321,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(be_f64(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361626,"byte_end":361710,"line_start":1322,"line_end":1322,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361711,"byte_end":361714,"line_start":1323,"line_end":1323,"column_start":1,"column_end":4}},{"value":"/ let le_f64 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361715,"byte_end":361737,"line_start":1324,"line_end":1324,"column_start":1,"column_end":23}},{"value":"/   f64(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361738,"byte_end":361783,"line_start":1325,"line_end":1325,"column_start":1,"column_end":46}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361784,"byte_end":361790,"line_start":1326,"line_end":1326,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361791,"byte_end":361794,"line_start":1327,"line_end":1327,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f64(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361795,"byte_end":361895,"line_start":1328,"line_end":1328,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(le_f64(&b\"abc\"[..]), Err(Err::Error((&b\"abc\"[..], ErrorKind::Eof))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361896,"byte_end":361980,"line_start":1329,"line_end":1329,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361981,"byte_end":361988,"line_start":1330,"line_end":1330,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":361989,"byte_end":361998,"line_start":1331,"line_end":1331,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2441},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363006,"byte_end":363013,"line_start":1363,"line_end":1363,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::number::complete::hex_u32","value":"pub fn hex_u32<'a, E: ParseError<&'a [u8]>>(&'a [u8])\n-> IResult<&'a [u8], u32, E>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer.","sig":null,"attributes":[{"value":"/ Recognizes a hex-encoded integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362460,"byte_end":362497,"line_start":1346,"line_end":1346,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362498,"byte_end":362501,"line_start":1347,"line_end":1347,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Will parse until the end of input if it has less than 8 bytes.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362502,"byte_end":362588,"line_start":1348,"line_end":1348,"column_start":1,"column_end":87}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362589,"byte_end":362600,"line_start":1349,"line_end":1349,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362601,"byte_end":362648,"line_start":1350,"line_end":1350,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362649,"byte_end":362677,"line_start":1351,"line_end":1351,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::hex_u32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362678,"byte_end":362717,"line_start":1352,"line_end":1352,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362718,"byte_end":362721,"line_start":1353,"line_end":1353,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362722,"byte_end":362744,"line_start":1354,"line_end":1354,"column_start":1,"column_end":23}},{"value":"/   hex_u32(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362745,"byte_end":362761,"line_start":1355,"line_end":1355,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362762,"byte_end":362768,"line_start":1356,"line_end":1356,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362769,"byte_end":362772,"line_start":1357,"line_end":1357,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"01AE\"[..]), Ok((&b\"\"[..], 0x01AE)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362773,"byte_end":362834,"line_start":1358,"line_end":1358,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(parser(&b\"abc\"[..]), Ok((&b\"\"[..], 0x0ABC)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362835,"byte_end":362895,"line_start":1359,"line_end":1359,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(parser(&b\"ggg\"[..]), Err(Err::Error((&b\"ggg\"[..], ErrorKind::IsA))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362896,"byte_end":362980,"line_start":1360,"line_end":1360,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362981,"byte_end":362988,"line_start":1361,"line_end":1361,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":362989,"byte_end":362998,"line_start":1362,"line_end":1362,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6047},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":364163,"byte_end":364178,"line_start":1404,"line_end":1404,"column_start":8,"column_end":23},"name":"recognize_float","qualname":"::number::complete::recognize_float","value":"pub fn recognize_float<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter, <T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in a byte string and returns the corresponding slice.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in a byte string and returns the corresponding slice.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363536,"byte_end":363626,"line_start":1385,"line_end":1385,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363627,"byte_end":363630,"line_start":1386,"line_end":1386,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363631,"byte_end":363688,"line_start":1387,"line_end":1387,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363689,"byte_end":363692,"line_start":1388,"line_end":1388,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363693,"byte_end":363704,"line_start":1389,"line_end":1389,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363705,"byte_end":363752,"line_start":1390,"line_end":1390,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363753,"byte_end":363781,"line_start":1391,"line_end":1391,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::recognize_float;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363782,"byte_end":363829,"line_start":1392,"line_end":1392,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363830,"byte_end":363833,"line_start":1393,"line_end":1393,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363834,"byte_end":363856,"line_start":1394,"line_end":1394,"column_start":1,"column_end":23}},{"value":"/   recognize_float(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363857,"byte_end":363881,"line_start":1395,"line_end":1395,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363882,"byte_end":363888,"line_start":1396,"line_end":1396,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363889,"byte_end":363892,"line_start":1397,"line_end":1397,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", \"11e-1\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363893,"byte_end":363944,"line_start":1398,"line_end":1398,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", \"123E-02\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":363945,"byte_end":364000,"line_start":1399,"line_end":1399,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", \"123\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":364001,"byte_end":364056,"line_start":1400,"line_end":1400,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":364057,"byte_end":364130,"line_start":1401,"line_end":1401,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":364131,"byte_end":364138,"line_start":1402,"line_end":1402,"column_start":1,"column_end":8}},{"value":"rustfmt::skip","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":364139,"byte_end":364155,"line_start":1403,"line_end":1403,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2445},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":364868,"byte_end":364897,"line_start":1431,"line_end":1431,"column_start":8,"column_end":37},"name":"recognize_float_or_exceptions","qualname":"::number::complete::recognize_float_or_exceptions","value":"pub fn recognize_float_or_exceptions<T, E: ParseError<T>>(T)\n-> IResult<T, T, E> where T: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: Clone + Offset, T: InputIter + InputTake + Compare<&'static str>,\n<T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2456},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":366284,"byte_end":366305,"line_start":1467,"line_end":1467,"column_start":8,"column_end":29},"name":"recognize_float_parts","qualname":"::number::complete::recognize_float_parts","value":"pub fn recognize_float_parts<T, E: ParseError<T>>(T)\n-> IResult<T, (bool, T, T, i32), E> where T: Slice<RangeFrom<usize>> +\nSlice<RangeTo<usize>> + Slice<Range<usize>>, T: Clone + Offset, T: InputIter +\nInputTake, <T as InputIter>::Item: AsChar + Copy, T: InputTakeAtPosition +\nInputLength, <T as InputTakeAtPosition>::Item: AsChar,\nT: for<'a> Compare<&'a [u8]>, T: AsBytes","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a floating point number in text format and returns the integer, fraction and exponent parts of the input data","sig":null,"attributes":[{"value":"/ Recognizes a floating point number in text format and returns the integer, fraction and exponent parts of the input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":366086,"byte_end":366210,"line_start":1463,"line_end":1463,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":366211,"byte_end":366214,"line_start":1464,"line_end":1464,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":366215,"byte_end":366272,"line_start":1465,"line_end":1465,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":366273,"byte_end":366276,"line_start":1466,"line_end":1466,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":2465},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":369218,"byte_end":369223,"line_start":1573,"line_end":1573,"column_start":8,"column_end":13},"name":"float","qualname":"::number::complete::float","value":"pub fn float<T, E: ParseError<T>>(T) -> IResult<T, f32, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>> + Slice<Range<usize>>,\nT: Clone + Offset + ParseTo<f32> + Compare<&'static str>, T: InputIter +\nInputLength + InputTake, <T as InputIter>::Item: AsChar + Copy,\n<T as InputIter>::IterElem: Clone, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar, T: AsBytes,\nT: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in text format and returns a f32.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in text format and returns a f32.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368660,"byte_end":368730,"line_start":1556,"line_end":1556,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368731,"byte_end":368734,"line_start":1557,"line_end":1557,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368735,"byte_end":368792,"line_start":1558,"line_end":1558,"column_start":1,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368793,"byte_end":368804,"line_start":1559,"line_end":1559,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368805,"byte_end":368852,"line_start":1560,"line_end":1560,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368853,"byte_end":368881,"line_start":1561,"line_end":1561,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::float;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368882,"byte_end":368919,"line_start":1562,"line_end":1562,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368920,"byte_end":368923,"line_start":1563,"line_end":1563,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368924,"byte_end":368946,"line_start":1564,"line_end":1564,"column_start":1,"column_end":23}},{"value":"/   float(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368947,"byte_end":368961,"line_start":1565,"line_end":1565,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368962,"byte_end":368968,"line_start":1566,"line_end":1566,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368969,"byte_end":368972,"line_start":1567,"line_end":1567,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":368973,"byte_end":369020,"line_start":1568,"line_end":1568,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":369021,"byte_end":369071,"line_start":1569,"line_end":1569,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":369072,"byte_end":369127,"line_start":1570,"line_end":1570,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":369128,"byte_end":369202,"line_start":1571,"line_end":1571,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":369203,"byte_end":369210,"line_start":1572,"line_end":1572,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2469},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370725,"byte_end":370731,"line_start":1626,"line_end":1626,"column_start":8,"column_end":14},"name":"double","qualname":"::number::complete::double","value":"pub fn double<T, E: ParseError<T>>(T) -> IResult<T, f64, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>> + Slice<Range<usize>>,\nT: Clone + Offset + ParseTo<f64> + Compare<&'static str>, T: InputIter +\nInputLength + InputTake, <T as InputIter>::Item: AsChar + Copy,\n<T as InputIter>::IterElem: Clone, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar, T: AsBytes,\nT: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in text format and returns a f64.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in text format and returns a f64.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370165,"byte_end":370235,"line_start":1609,"line_end":1609,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370236,"byte_end":370239,"line_start":1610,"line_end":1610,"column_start":1,"column_end":4}},{"value":"/ *Complete version*: Can parse until the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370240,"byte_end":370297,"line_start":1611,"line_end":1611,"column_start":1,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370298,"byte_end":370309,"line_start":1612,"line_end":1612,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370310,"byte_end":370357,"line_start":1613,"line_end":1613,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370358,"byte_end":370386,"line_start":1614,"line_end":1614,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::double;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370387,"byte_end":370425,"line_start":1615,"line_end":1615,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370426,"byte_end":370429,"line_start":1616,"line_end":1616,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370430,"byte_end":370452,"line_start":1617,"line_end":1617,"column_start":1,"column_end":23}},{"value":"/   double(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370453,"byte_end":370468,"line_start":1618,"line_end":1618,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370469,"byte_end":370475,"line_start":1619,"line_end":1619,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370476,"byte_end":370479,"line_start":1620,"line_end":1620,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370480,"byte_end":370527,"line_start":1621,"line_end":1621,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370528,"byte_end":370578,"line_start":1622,"line_end":1622,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370579,"byte_end":370634,"line_start":1623,"line_end":1623,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370635,"byte_end":370709,"line_start":1624,"line_end":1624,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/complete.rs","byte_start":370710,"byte_end":370717,"line_start":1625,"line_end":1625,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2473},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streaming","qualname":"::number::streaming","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","parent":null,"children":[{"krate":0,"index":2474},{"krate":0,"index":2477},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2484},{"krate":0,"index":2487},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2494},{"krate":0,"index":2497},{"krate":0,"index":2500},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2507},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2515},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2522},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2529},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2538},{"krate":0,"index":2541},{"krate":0,"index":2544},{"krate":0,"index":2547},{"krate":0,"index":2550},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2558},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":2567},{"krate":0,"index":2570},{"krate":0,"index":2573},{"krate":0,"index":2576},{"krate":0,"index":2579},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2591},{"krate":0,"index":2594},{"krate":0,"index":2597},{"krate":0,"index":2600},{"krate":0,"index":2603},{"krate":0,"index":2606},{"krate":0,"index":2609},{"krate":0,"index":2612},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":2675},{"krate":0,"index":2678},{"krate":0,"index":2681},{"krate":0,"index":6078},{"krate":0,"index":2685},{"krate":0,"index":2696},{"krate":0,"index":2702},{"krate":0,"index":2706}],"decl_id":null,"docs":" Parsers recognizing numbers, streaming version\n","sig":null,"attributes":[{"value":"/ Parsers recognizing numbers, streaming version","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":384982,"byte_end":385032,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":2555},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386525,"byte_end":386530,"line_start":50,"line_end":50,"column_start":8,"column_end":13},"name":"be_u8","qualname":"::number::streaming::be_u8","value":"pub fn be_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386035,"byte_end":386077,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386078,"byte_end":386081,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386082,"byte_end":386178,"line_start":37,"line_end":37,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386179,"byte_end":386190,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386191,"byte_end":386238,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386239,"byte_end":386277,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386278,"byte_end":386281,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386282,"byte_end":386304,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/   be_u8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386305,"byte_end":386340,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386341,"byte_end":386347,"line_start":44,"line_end":44,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386348,"byte_end":386351,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386352,"byte_end":386427,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386428,"byte_end":386499,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386500,"byte_end":386507,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386508,"byte_end":386517,"line_start":49,"line_end":49,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2558},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387373,"byte_end":387379,"line_start":80,"line_end":80,"column_start":8,"column_end":14},"name":"be_u16","qualname":"::number::streaming::be_u16","value":"pub fn be_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 2 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386864,"byte_end":386917,"line_start":64,"line_end":64,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386918,"byte_end":386921,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":386922,"byte_end":387018,"line_start":66,"line_end":66,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387019,"byte_end":387022,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387023,"byte_end":387034,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387035,"byte_end":387082,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387083,"byte_end":387122,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387123,"byte_end":387126,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387127,"byte_end":387149,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/   be_u16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387150,"byte_end":387186,"line_start":73,"line_end":73,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387187,"byte_end":387193,"line_start":74,"line_end":74,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387194,"byte_end":387197,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387198,"byte_end":387271,"line_start":76,"line_end":76,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387272,"byte_end":387347,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387348,"byte_end":387355,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387356,"byte_end":387365,"line_start":79,"line_end":79,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2561},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388319,"byte_end":388325,"line_start":113,"line_end":113,"column_start":8,"column_end":14},"name":"be_u24","qualname":"::number::streaming::be_u24","value":"pub fn be_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 3 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 3 byte integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387805,"byte_end":387857,"line_start":97,"line_end":97,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387858,"byte_end":387861,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387862,"byte_end":387958,"line_start":99,"line_end":99,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387959,"byte_end":387962,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387963,"byte_end":387974,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":387975,"byte_end":388022,"line_start":102,"line_end":102,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u24;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388023,"byte_end":388062,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388063,"byte_end":388066,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388067,"byte_end":388089,"line_start":105,"line_end":105,"column_start":1,"column_end":23}},{"value":"/   be_u24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388090,"byte_end":388126,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388127,"byte_end":388133,"line_start":107,"line_end":107,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388134,"byte_end":388137,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x000102)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388138,"byte_end":388217,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388218,"byte_end":388293,"line_start":110,"line_end":110,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388294,"byte_end":388301,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388302,"byte_end":388311,"line_start":112,"line_end":112,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2564},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389272,"byte_end":389278,"line_start":146,"line_end":146,"column_start":8,"column_end":14},"name":"be_u32","qualname":"::number::streaming::be_u32","value":"pub fn be_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 4 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388751,"byte_end":388804,"line_start":130,"line_end":130,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388805,"byte_end":388808,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388809,"byte_end":388905,"line_start":132,"line_end":132,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388906,"byte_end":388909,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388910,"byte_end":388921,"line_start":134,"line_end":134,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388922,"byte_end":388969,"line_start":135,"line_end":135,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":388970,"byte_end":389009,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389010,"byte_end":389013,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389014,"byte_end":389036,"line_start":138,"line_end":138,"column_start":1,"column_end":23}},{"value":"/   be_u32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389037,"byte_end":389073,"line_start":139,"line_end":139,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389074,"byte_end":389080,"line_start":140,"line_end":140,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389081,"byte_end":389084,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389085,"byte_end":389170,"line_start":142,"line_end":142,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389171,"byte_end":389246,"line_start":143,"line_end":143,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389247,"byte_end":389254,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389255,"byte_end":389264,"line_start":145,"line_end":145,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2567},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390249,"byte_end":390255,"line_start":179,"line_end":179,"column_start":8,"column_end":14},"name":"be_u64","qualname":"::number::streaming::be_u64","value":"pub fn be_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 8 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389704,"byte_end":389757,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389758,"byte_end":389761,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389762,"byte_end":389858,"line_start":165,"line_end":165,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389859,"byte_end":389862,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389863,"byte_end":389874,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389875,"byte_end":389922,"line_start":168,"line_end":168,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389923,"byte_end":389962,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389963,"byte_end":389966,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389967,"byte_end":389989,"line_start":171,"line_end":171,"column_start":1,"column_end":23}},{"value":"/   be_u64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":389990,"byte_end":390026,"line_start":172,"line_end":172,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390027,"byte_end":390033,"line_start":173,"line_end":173,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390034,"byte_end":390037,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390038,"byte_end":390147,"line_start":175,"line_end":175,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390148,"byte_end":390223,"line_start":176,"line_end":176,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390224,"byte_end":390231,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390232,"byte_end":390241,"line_start":178,"line_end":178,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2570},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391294,"byte_end":391301,"line_start":212,"line_end":212,"column_start":8,"column_end":15},"name":"be_u128","qualname":"::number::streaming::be_u128","value":"pub fn be_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian unsigned 16 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390681,"byte_end":390735,"line_start":196,"line_end":196,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390736,"byte_end":390739,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390740,"byte_end":390836,"line_start":198,"line_end":198,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390837,"byte_end":390848,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390849,"byte_end":390896,"line_start":200,"line_end":200,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_u128;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390897,"byte_end":390937,"line_start":201,"line_end":201,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390938,"byte_end":390941,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390942,"byte_end":390964,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/   be_u128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":390965,"byte_end":391002,"line_start":204,"line_end":204,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391003,"byte_end":391009,"line_start":205,"line_end":205,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391010,"byte_end":391013,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203040506070809101112131415)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391014,"byte_end":391171,"line_start":207,"line_end":207,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391172,"byte_end":391248,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391249,"byte_end":391256,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391257,"byte_end":391266,"line_start":210,"line_end":210,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391267,"byte_end":391286,"line_start":211,"line_end":211,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2573},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392197,"byte_end":392202,"line_start":242,"line_end":242,"column_start":8,"column_end":13},"name":"be_i8","qualname":"::number::streaming::be_i8","value":"pub fn be_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391731,"byte_end":391770,"line_start":229,"line_end":229,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391771,"byte_end":391774,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391775,"byte_end":391871,"line_start":231,"line_end":231,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391872,"byte_end":391883,"line_start":232,"line_end":232,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391884,"byte_end":391931,"line_start":233,"line_end":233,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391932,"byte_end":391970,"line_start":234,"line_end":234,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391971,"byte_end":391974,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i8::<_, (_, ErrorKind)>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":391975,"byte_end":392019,"line_start":236,"line_end":236,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392020,"byte_end":392023,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392024,"byte_end":392099,"line_start":238,"line_end":238,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392100,"byte_end":392171,"line_start":239,"line_end":239,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392172,"byte_end":392179,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392180,"byte_end":392189,"line_start":241,"line_end":241,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2576},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392845,"byte_end":392851,"line_start":262,"line_end":262,"column_start":8,"column_end":14},"name":"be_i16","qualname":"::number::streaming::be_i16","value":"pub fn be_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 2 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392367,"byte_end":392418,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392419,"byte_end":392422,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392423,"byte_end":392519,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392520,"byte_end":392531,"line_start":252,"line_end":252,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392532,"byte_end":392579,"line_start":253,"line_end":253,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392580,"byte_end":392619,"line_start":254,"line_end":254,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392620,"byte_end":392623,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i16::<_, (_, ErrorKind)>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392624,"byte_end":392669,"line_start":256,"line_end":256,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392670,"byte_end":392673,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392674,"byte_end":392747,"line_start":258,"line_end":258,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392748,"byte_end":392819,"line_start":259,"line_end":259,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392820,"byte_end":392827,"line_start":260,"line_end":260,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":392828,"byte_end":392837,"line_start":261,"line_end":261,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2579},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393503,"byte_end":393509,"line_start":282,"line_end":282,"column_start":8,"column_end":14},"name":"be_i24","qualname":"::number::streaming::be_i24","value":"pub fn be_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 3 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393019,"byte_end":393070,"line_start":269,"line_end":269,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393071,"byte_end":393074,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393075,"byte_end":393171,"line_start":271,"line_end":271,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393172,"byte_end":393183,"line_start":272,"line_end":272,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393184,"byte_end":393231,"line_start":273,"line_end":273,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i24;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393232,"byte_end":393271,"line_start":274,"line_end":274,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393272,"byte_end":393275,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i24::<_, (_, ErrorKind)>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393276,"byte_end":393321,"line_start":276,"line_end":276,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393322,"byte_end":393325,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x000102)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393326,"byte_end":393405,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393406,"byte_end":393477,"line_start":279,"line_end":279,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393478,"byte_end":393485,"line_start":280,"line_end":280,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393486,"byte_end":393495,"line_start":281,"line_end":281,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2582},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394317,"byte_end":394323,"line_start":307,"line_end":307,"column_start":8,"column_end":14},"name":"be_i32","qualname":"::number::streaming::be_i32","value":"pub fn be_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 4 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393827,"byte_end":393878,"line_start":294,"line_end":294,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393879,"byte_end":393882,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393883,"byte_end":393979,"line_start":296,"line_end":296,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393980,"byte_end":393991,"line_start":297,"line_end":297,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":393992,"byte_end":394039,"line_start":298,"line_end":298,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394040,"byte_end":394079,"line_start":299,"line_end":299,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394080,"byte_end":394083,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i32::<_, (_, ErrorKind)>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394084,"byte_end":394129,"line_start":301,"line_end":301,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394130,"byte_end":394133,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394134,"byte_end":394219,"line_start":303,"line_end":303,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(4))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394220,"byte_end":394291,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394292,"byte_end":394299,"line_start":305,"line_end":305,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394300,"byte_end":394309,"line_start":306,"line_end":306,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2585},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395013,"byte_end":395019,"line_start":328,"line_end":328,"column_start":8,"column_end":14},"name":"be_i64","qualname":"::number::streaming::be_i64","value":"pub fn be_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 8 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394491,"byte_end":394542,"line_start":314,"line_end":314,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394543,"byte_end":394546,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394547,"byte_end":394643,"line_start":316,"line_end":316,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394644,"byte_end":394647,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394648,"byte_end":394659,"line_start":318,"line_end":318,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394660,"byte_end":394707,"line_start":319,"line_end":319,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394708,"byte_end":394747,"line_start":320,"line_end":320,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394748,"byte_end":394751,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i64::<_, (_, ErrorKind)>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394752,"byte_end":394797,"line_start":322,"line_end":322,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394798,"byte_end":394801,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394802,"byte_end":394911,"line_start":324,"line_end":324,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394912,"byte_end":394987,"line_start":325,"line_end":325,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394988,"byte_end":394995,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":394996,"byte_end":395005,"line_start":327,"line_end":327,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2588},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395777,"byte_end":395784,"line_start":349,"line_end":349,"column_start":8,"column_end":15},"name":"be_i128","qualname":"::number::streaming::be_i128","value":"pub fn be_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a big endian signed 16 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395187,"byte_end":395239,"line_start":335,"line_end":335,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395240,"byte_end":395243,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395244,"byte_end":395340,"line_start":337,"line_end":337,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395341,"byte_end":395352,"line_start":338,"line_end":338,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395353,"byte_end":395400,"line_start":339,"line_end":339,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_i128;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395401,"byte_end":395441,"line_start":340,"line_end":340,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395442,"byte_end":395445,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ let parser = be_i128::<_, (_, ErrorKind)>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395446,"byte_end":395492,"line_start":342,"line_end":342,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395493,"byte_end":395496,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x00010203040506070809101112131415)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395497,"byte_end":395654,"line_start":344,"line_end":344,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395655,"byte_end":395731,"line_start":345,"line_end":345,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395732,"byte_end":395739,"line_start":346,"line_end":346,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395740,"byte_end":395749,"line_start":347,"line_end":347,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395750,"byte_end":395769,"line_start":348,"line_end":348,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2591},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396424,"byte_end":396429,"line_start":369,"line_end":369,"column_start":8,"column_end":13},"name":"le_u8","qualname":"::number::streaming::le_u8","value":"pub fn le_u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395955,"byte_end":395997,"line_start":356,"line_end":356,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":395998,"byte_end":396001,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396002,"byte_end":396098,"line_start":358,"line_end":358,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396099,"byte_end":396110,"line_start":359,"line_end":359,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396111,"byte_end":396158,"line_start":360,"line_end":360,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396159,"byte_end":396197,"line_start":361,"line_end":361,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396198,"byte_end":396201,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ let parser = le_u8::<_, (_, ErrorKind)>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396202,"byte_end":396246,"line_start":363,"line_end":363,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396247,"byte_end":396250,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396251,"byte_end":396326,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396327,"byte_end":396398,"line_start":366,"line_end":366,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396399,"byte_end":396406,"line_start":367,"line_end":367,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396407,"byte_end":396416,"line_start":368,"line_end":368,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2594},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397275,"byte_end":397281,"line_start":399,"line_end":399,"column_start":8,"column_end":14},"name":"le_u16","qualname":"::number::streaming::le_u16","value":"pub fn le_u16<I, E: ParseError<I>>(I) -> IResult<I, u16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 2 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396763,"byte_end":396819,"line_start":383,"line_end":383,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396820,"byte_end":396823,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396824,"byte_end":396920,"line_start":385,"line_end":385,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396921,"byte_end":396924,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396925,"byte_end":396936,"line_start":387,"line_end":387,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396937,"byte_end":396984,"line_start":388,"line_end":388,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":396985,"byte_end":397024,"line_start":389,"line_end":389,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397025,"byte_end":397028,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397029,"byte_end":397051,"line_start":391,"line_end":391,"column_start":1,"column_end":23}},{"value":"/   le_u16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397052,"byte_end":397088,"line_start":392,"line_end":392,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397089,"byte_end":397095,"line_start":393,"line_end":393,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397096,"byte_end":397099,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397100,"byte_end":397173,"line_start":395,"line_end":395,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397174,"byte_end":397249,"line_start":396,"line_end":396,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397250,"byte_end":397257,"line_start":397,"line_end":397,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397258,"byte_end":397267,"line_start":398,"line_end":398,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2597},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398238,"byte_end":398244,"line_start":432,"line_end":432,"column_start":8,"column_end":14},"name":"le_u24","qualname":"::number::streaming::le_u24","value":"pub fn le_u24<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 3 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397720,"byte_end":397776,"line_start":416,"line_end":416,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397777,"byte_end":397780,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397781,"byte_end":397877,"line_start":418,"line_end":418,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397878,"byte_end":397881,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397882,"byte_end":397893,"line_start":420,"line_end":420,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397894,"byte_end":397941,"line_start":421,"line_end":421,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u24;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397942,"byte_end":397981,"line_start":422,"line_end":422,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397982,"byte_end":397985,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":397986,"byte_end":398008,"line_start":424,"line_end":424,"column_start":1,"column_end":23}},{"value":"/   le_u24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398009,"byte_end":398045,"line_start":425,"line_end":425,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398046,"byte_end":398052,"line_start":426,"line_end":426,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398053,"byte_end":398056,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398057,"byte_end":398136,"line_start":428,"line_end":428,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398137,"byte_end":398212,"line_start":429,"line_end":429,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398213,"byte_end":398220,"line_start":430,"line_end":430,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398221,"byte_end":398230,"line_start":431,"line_end":431,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2600},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399207,"byte_end":399213,"line_start":465,"line_end":465,"column_start":8,"column_end":14},"name":"le_u32","qualname":"::number::streaming::le_u32","value":"pub fn le_u32<I, E: ParseError<I>>(I) -> IResult<I, u32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 4 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398683,"byte_end":398739,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398740,"byte_end":398743,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398744,"byte_end":398840,"line_start":451,"line_end":451,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398841,"byte_end":398844,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398845,"byte_end":398856,"line_start":453,"line_end":453,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398857,"byte_end":398904,"line_start":454,"line_end":454,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398905,"byte_end":398944,"line_start":455,"line_end":455,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398945,"byte_end":398948,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398949,"byte_end":398971,"line_start":457,"line_end":457,"column_start":1,"column_end":23}},{"value":"/   le_u32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":398972,"byte_end":399008,"line_start":458,"line_end":458,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399009,"byte_end":399015,"line_start":459,"line_end":459,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399016,"byte_end":399019,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x03020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399020,"byte_end":399105,"line_start":461,"line_end":461,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399106,"byte_end":399181,"line_start":462,"line_end":462,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399182,"byte_end":399189,"line_start":463,"line_end":463,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399190,"byte_end":399199,"line_start":464,"line_end":464,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2603},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400200,"byte_end":400206,"line_start":498,"line_end":498,"column_start":8,"column_end":14},"name":"le_u64","qualname":"::number::streaming::le_u64","value":"pub fn le_u64<I, E: ParseError<I>>(I) -> IResult<I, u64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 8 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399652,"byte_end":399708,"line_start":482,"line_end":482,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399709,"byte_end":399712,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399713,"byte_end":399809,"line_start":484,"line_end":484,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399810,"byte_end":399813,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399814,"byte_end":399825,"line_start":486,"line_end":486,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399826,"byte_end":399873,"line_start":487,"line_end":487,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399874,"byte_end":399913,"line_start":488,"line_end":488,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399914,"byte_end":399917,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399918,"byte_end":399940,"line_start":490,"line_end":490,"column_start":1,"column_end":23}},{"value":"/   le_u64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399941,"byte_end":399977,"line_start":491,"line_end":491,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399978,"byte_end":399984,"line_start":492,"line_end":492,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399985,"byte_end":399988,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":399989,"byte_end":400098,"line_start":494,"line_end":494,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400099,"byte_end":400174,"line_start":495,"line_end":495,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400175,"byte_end":400182,"line_start":496,"line_end":496,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400183,"byte_end":400192,"line_start":497,"line_end":497,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2606},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401265,"byte_end":401272,"line_start":532,"line_end":532,"column_start":8,"column_end":15},"name":"le_u128","qualname":"::number::streaming::le_u128","value":"pub fn le_u128<I, E: ParseError<I>>(I) -> IResult<I, u128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian unsigned 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian unsigned 16 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400645,"byte_end":400702,"line_start":515,"line_end":515,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400703,"byte_end":400706,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400707,"byte_end":400803,"line_start":517,"line_end":517,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400804,"byte_end":400807,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400808,"byte_end":400819,"line_start":519,"line_end":519,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400820,"byte_end":400867,"line_start":520,"line_end":520,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_u128;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400868,"byte_end":400908,"line_start":521,"line_end":521,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400909,"byte_end":400912,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400913,"byte_end":400935,"line_start":523,"line_end":523,"column_start":1,"column_end":23}},{"value":"/   le_u128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400936,"byte_end":400973,"line_start":524,"line_end":524,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400974,"byte_end":400980,"line_start":525,"line_end":525,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400981,"byte_end":400984,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x15141312111009080706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":400985,"byte_end":401142,"line_start":527,"line_end":527,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401143,"byte_end":401219,"line_start":528,"line_end":528,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401220,"byte_end":401227,"line_start":529,"line_end":529,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401228,"byte_end":401237,"line_start":530,"line_end":530,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401238,"byte_end":401257,"line_start":531,"line_end":531,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2609},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402181,"byte_end":402186,"line_start":562,"line_end":562,"column_start":8,"column_end":13},"name":"le_i8","qualname":"::number::streaming::le_i8","value":"pub fn le_i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer.","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401715,"byte_end":401754,"line_start":549,"line_end":549,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401755,"byte_end":401758,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401759,"byte_end":401855,"line_start":551,"line_end":551,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401856,"byte_end":401867,"line_start":552,"line_end":552,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401868,"byte_end":401915,"line_start":553,"line_end":553,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401916,"byte_end":401954,"line_start":554,"line_end":554,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401955,"byte_end":401958,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ let parser = le_i8::<_, (_, ErrorKind)>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":401959,"byte_end":402003,"line_start":556,"line_end":556,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402004,"byte_end":402007,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"\\x01abcd\"[..], 0x00)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402008,"byte_end":402083,"line_start":558,"line_end":558,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402084,"byte_end":402155,"line_start":559,"line_end":559,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402156,"byte_end":402163,"line_start":560,"line_end":560,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402164,"byte_end":402173,"line_start":561,"line_end":561,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2612},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402861,"byte_end":402867,"line_start":585,"line_end":585,"column_start":8,"column_end":14},"name":"le_i16","qualname":"::number::streaming::le_i16","value":"pub fn le_i16<I, E: ParseError<I>>(I) -> IResult<I, i16, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 2 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 2 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402351,"byte_end":402405,"line_start":569,"line_end":569,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402406,"byte_end":402409,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402410,"byte_end":402506,"line_start":571,"line_end":571,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402507,"byte_end":402510,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402511,"byte_end":402522,"line_start":573,"line_end":573,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402523,"byte_end":402570,"line_start":574,"line_end":574,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402571,"byte_end":402610,"line_start":575,"line_end":575,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402611,"byte_end":402614,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402615,"byte_end":402637,"line_start":577,"line_end":577,"column_start":1,"column_end":23}},{"value":"/   le_i16::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402638,"byte_end":402674,"line_start":578,"line_end":578,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402675,"byte_end":402681,"line_start":579,"line_end":579,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402682,"byte_end":402685,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01abcd\"[..]), Ok((&b\"abcd\"[..], 0x0100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402686,"byte_end":402759,"line_start":581,"line_end":581,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402760,"byte_end":402835,"line_start":582,"line_end":582,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402836,"byte_end":402843,"line_start":583,"line_end":583,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":402844,"byte_end":402853,"line_start":584,"line_end":584,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2615},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403551,"byte_end":403557,"line_start":608,"line_end":608,"column_start":8,"column_end":14},"name":"le_i24","qualname":"::number::streaming::le_i24","value":"pub fn le_i24<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 3 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 3 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403035,"byte_end":403089,"line_start":592,"line_end":592,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403090,"byte_end":403093,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403094,"byte_end":403190,"line_start":594,"line_end":594,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403191,"byte_end":403194,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403195,"byte_end":403206,"line_start":596,"line_end":596,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403207,"byte_end":403254,"line_start":597,"line_end":597,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i24;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403255,"byte_end":403294,"line_start":598,"line_end":598,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403295,"byte_end":403298,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403299,"byte_end":403321,"line_start":600,"line_end":600,"column_start":1,"column_end":23}},{"value":"/   le_i24::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403322,"byte_end":403358,"line_start":601,"line_end":601,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403359,"byte_end":403365,"line_start":602,"line_end":602,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403366,"byte_end":403369,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02abcd\"[..]), Ok((&b\"abcd\"[..], 0x020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403370,"byte_end":403449,"line_start":604,"line_end":604,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403450,"byte_end":403525,"line_start":605,"line_end":605,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403526,"byte_end":403533,"line_start":606,"line_end":606,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403534,"byte_end":403543,"line_start":607,"line_end":607,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2618},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404397,"byte_end":404403,"line_start":636,"line_end":636,"column_start":8,"column_end":14},"name":"le_i32","qualname":"::number::streaming::le_i32","value":"pub fn le_i32<I, E: ParseError<I>>(I) -> IResult<I, i32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 4 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 4 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403875,"byte_end":403929,"line_start":620,"line_end":620,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403930,"byte_end":403933,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":403934,"byte_end":404030,"line_start":622,"line_end":622,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404031,"byte_end":404034,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404035,"byte_end":404046,"line_start":624,"line_end":624,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404047,"byte_end":404094,"line_start":625,"line_end":625,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404095,"byte_end":404134,"line_start":626,"line_end":626,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404135,"byte_end":404138,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404139,"byte_end":404161,"line_start":628,"line_end":628,"column_start":1,"column_end":23}},{"value":"/   le_i32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404162,"byte_end":404198,"line_start":629,"line_end":629,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404199,"byte_end":404205,"line_start":630,"line_end":630,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404206,"byte_end":404209,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03abcd\"[..]), Ok((&b\"abcd\"[..], 0x03020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404210,"byte_end":404295,"line_start":632,"line_end":632,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404296,"byte_end":404371,"line_start":633,"line_end":633,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404372,"byte_end":404379,"line_start":634,"line_end":634,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404380,"byte_end":404389,"line_start":635,"line_end":635,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2621},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405117,"byte_end":405123,"line_start":659,"line_end":659,"column_start":8,"column_end":14},"name":"le_i64","qualname":"::number::streaming::le_i64","value":"pub fn le_i64<I, E: ParseError<I>>(I) -> IResult<I, i64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 8 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 8 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404571,"byte_end":404625,"line_start":643,"line_end":643,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404626,"byte_end":404629,"line_start":644,"line_end":644,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404630,"byte_end":404726,"line_start":645,"line_end":645,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404727,"byte_end":404730,"line_start":646,"line_end":646,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404731,"byte_end":404742,"line_start":647,"line_end":647,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404743,"byte_end":404790,"line_start":648,"line_end":648,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404791,"byte_end":404830,"line_start":649,"line_end":649,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404831,"byte_end":404834,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404835,"byte_end":404857,"line_start":651,"line_end":651,"column_start":1,"column_end":23}},{"value":"/   le_i64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404858,"byte_end":404894,"line_start":652,"line_end":652,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404895,"byte_end":404901,"line_start":653,"line_end":653,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404902,"byte_end":404905,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcd\"[..]), Ok((&b\"abcd\"[..], 0x0706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":404906,"byte_end":405015,"line_start":655,"line_end":655,"column_start":1,"column_end":110}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405016,"byte_end":405091,"line_start":656,"line_end":656,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405092,"byte_end":405099,"line_start":657,"line_end":657,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405100,"byte_end":405109,"line_start":658,"line_end":658,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2624},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405909,"byte_end":405916,"line_start":683,"line_end":683,"column_start":8,"column_end":15},"name":"le_i128","qualname":"::number::streaming::le_i128","value":"pub fn le_i128<I, E: ParseError<I>>(I) -> IResult<I, i128, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian signed 16 bytes integer.","sig":null,"attributes":[{"value":"/ Recognizes a little endian signed 16 bytes integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405291,"byte_end":405346,"line_start":666,"line_end":666,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405347,"byte_end":405350,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405351,"byte_end":405447,"line_start":668,"line_end":668,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405448,"byte_end":405451,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405452,"byte_end":405463,"line_start":670,"line_end":670,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405464,"byte_end":405511,"line_start":671,"line_end":671,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_i128;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405512,"byte_end":405552,"line_start":672,"line_end":672,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405553,"byte_end":405556,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405557,"byte_end":405579,"line_start":674,"line_end":674,"column_start":1,"column_end":23}},{"value":"/   le_i128::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405580,"byte_end":405617,"line_start":675,"line_end":675,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405618,"byte_end":405624,"line_start":676,"line_end":676,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405625,"byte_end":405628,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10\\x11\\x12\\x13\\x14\\x15abcd\"[..]), Ok((&b\"abcd\"[..], 0x15141312111009080706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405629,"byte_end":405786,"line_start":678,"line_end":678,"column_start":1,"column_end":158}},{"value":"/ assert_eq!(parser(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405787,"byte_end":405863,"line_start":679,"line_end":679,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405864,"byte_end":405871,"line_start":680,"line_end":680,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405872,"byte_end":405881,"line_start":681,"line_end":681,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":405882,"byte_end":405901,"line_start":682,"line_end":682,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2627},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406662,"byte_end":406664,"line_start":707,"line_end":707,"column_start":8,"column_end":10},"name":"u8","qualname":"::number::streaming::u8","value":"pub fn u8<I, E: ParseError<I>>(I) -> IResult<I, u8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 1 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406087,"byte_end":406128,"line_start":690,"line_end":690,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406129,"byte_end":406132,"line_start":691,"line_end":691,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406133,"byte_end":406191,"line_start":692,"line_end":692,"column_start":1,"column_end":59}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406192,"byte_end":406288,"line_start":693,"line_end":693,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406289,"byte_end":406300,"line_start":694,"line_end":694,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406301,"byte_end":406348,"line_start":695,"line_end":695,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406349,"byte_end":406377,"line_start":696,"line_end":696,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406378,"byte_end":406413,"line_start":697,"line_end":697,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406414,"byte_end":406417,"line_start":698,"line_end":698,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406418,"byte_end":406440,"line_start":699,"line_end":699,"column_start":1,"column_end":23}},{"value":"/   u8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406441,"byte_end":406473,"line_start":700,"line_end":700,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406474,"byte_end":406480,"line_start":701,"line_end":701,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406481,"byte_end":406484,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406485,"byte_end":406564,"line_start":703,"line_end":703,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406565,"byte_end":406636,"line_start":704,"line_end":704,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406637,"byte_end":406644,"line_start":705,"line_end":705,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406645,"byte_end":406654,"line_start":706,"line_end":706,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2630},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407986,"byte_end":407989,"line_start":747,"line_end":747,"column_start":8,"column_end":11},"name":"u16","qualname":"::number::streaming::u16","value":"pub fn u16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 2 bytes integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 2 bytes integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":406998,"byte_end":407040,"line_start":721,"line_end":721,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407041,"byte_end":407044,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u16 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407045,"byte_end":407132,"line_start":723,"line_end":723,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u16 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407133,"byte_end":407218,"line_start":724,"line_end":724,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407219,"byte_end":407315,"line_start":725,"line_end":725,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407316,"byte_end":407319,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407320,"byte_end":407331,"line_start":727,"line_end":727,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407332,"byte_end":407379,"line_start":728,"line_end":728,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407380,"byte_end":407408,"line_start":729,"line_end":729,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407409,"byte_end":407445,"line_start":730,"line_end":730,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407446,"byte_end":407449,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ let be_u16 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407450,"byte_end":407472,"line_start":732,"line_end":732,"column_start":1,"column_end":23}},{"value":"/   u16::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407473,"byte_end":407536,"line_start":733,"line_end":733,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407537,"byte_end":407543,"line_start":734,"line_end":734,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407544,"byte_end":407547,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407548,"byte_end":407625,"line_start":736,"line_end":736,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_u16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407626,"byte_end":407701,"line_start":737,"line_end":737,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407702,"byte_end":407705,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ let le_u16 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407706,"byte_end":407728,"line_start":739,"line_end":739,"column_start":1,"column_end":23}},{"value":"/   u16::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407729,"byte_end":407795,"line_start":740,"line_end":740,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407796,"byte_end":407802,"line_start":741,"line_end":741,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407803,"byte_end":407806,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407807,"byte_end":407884,"line_start":743,"line_end":743,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_u16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407885,"byte_end":407960,"line_start":744,"line_end":744,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407961,"byte_end":407968,"line_start":745,"line_end":745,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":407969,"byte_end":407978,"line_start":746,"line_end":746,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2633},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409434,"byte_end":409437,"line_start":786,"line_end":786,"column_start":8,"column_end":11},"name":"u24","qualname":"::number::streaming::u24","value":"pub fn u24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 3 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408440,"byte_end":408481,"line_start":761,"line_end":761,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408482,"byte_end":408485,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u24 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408486,"byte_end":408573,"line_start":763,"line_end":763,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u24 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408574,"byte_end":408659,"line_start":764,"line_end":764,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408660,"byte_end":408756,"line_start":765,"line_end":765,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408757,"byte_end":408768,"line_start":766,"line_end":766,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408769,"byte_end":408816,"line_start":767,"line_end":767,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408817,"byte_end":408845,"line_start":768,"line_end":768,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u24;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408846,"byte_end":408882,"line_start":769,"line_end":769,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408883,"byte_end":408886,"line_start":770,"line_end":770,"column_start":1,"column_end":4}},{"value":"/ let be_u24 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408887,"byte_end":408909,"line_start":771,"line_end":771,"column_start":1,"column_end":23}},{"value":"/   u24::<_,(_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408910,"byte_end":408972,"line_start":772,"line_end":772,"column_start":1,"column_end":63}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408973,"byte_end":408979,"line_start":773,"line_end":773,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408980,"byte_end":408983,"line_start":774,"line_end":774,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":408984,"byte_end":409067,"line_start":775,"line_end":775,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_u24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409068,"byte_end":409143,"line_start":776,"line_end":776,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409144,"byte_end":409147,"line_start":777,"line_end":777,"column_start":1,"column_end":4}},{"value":"/ let le_u24 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409148,"byte_end":409170,"line_start":778,"line_end":778,"column_start":1,"column_end":23}},{"value":"/   u24::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409171,"byte_end":409237,"line_start":779,"line_end":779,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409238,"byte_end":409244,"line_start":780,"line_end":780,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409245,"byte_end":409248,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409249,"byte_end":409332,"line_start":782,"line_end":782,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_u24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409333,"byte_end":409408,"line_start":783,"line_end":783,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409409,"byte_end":409416,"line_start":784,"line_end":784,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409417,"byte_end":409426,"line_start":785,"line_end":785,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2636},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410895,"byte_end":410898,"line_start":825,"line_end":825,"column_start":8,"column_end":11},"name":"u32","qualname":"::number::streaming::u32","value":"pub fn u32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 4 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409888,"byte_end":409929,"line_start":800,"line_end":800,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409930,"byte_end":409933,"line_start":801,"line_end":801,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u32 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":409934,"byte_end":410021,"line_start":802,"line_end":802,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u32 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410022,"byte_end":410107,"line_start":803,"line_end":803,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410108,"byte_end":410204,"line_start":804,"line_end":804,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410205,"byte_end":410216,"line_start":805,"line_end":805,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410217,"byte_end":410264,"line_start":806,"line_end":806,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410265,"byte_end":410293,"line_start":807,"line_end":807,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410294,"byte_end":410330,"line_start":808,"line_end":808,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410331,"byte_end":410334,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ let be_u32 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410335,"byte_end":410357,"line_start":810,"line_end":810,"column_start":1,"column_end":23}},{"value":"/   u32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410358,"byte_end":410421,"line_start":811,"line_end":811,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410422,"byte_end":410428,"line_start":812,"line_end":812,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410429,"byte_end":410432,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410433,"byte_end":410522,"line_start":814,"line_end":814,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_u32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410523,"byte_end":410598,"line_start":815,"line_end":815,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410599,"byte_end":410602,"line_start":816,"line_end":816,"column_start":1,"column_end":4}},{"value":"/ let le_u32 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410603,"byte_end":410625,"line_start":817,"line_end":817,"column_start":1,"column_end":23}},{"value":"/   u32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410626,"byte_end":410692,"line_start":818,"line_end":818,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410693,"byte_end":410699,"line_start":819,"line_end":819,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410700,"byte_end":410703,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410704,"byte_end":410793,"line_start":821,"line_end":821,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_u32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410794,"byte_end":410869,"line_start":822,"line_end":822,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410870,"byte_end":410877,"line_start":823,"line_end":823,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":410878,"byte_end":410887,"line_start":824,"line_end":824,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2639},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412404,"byte_end":412407,"line_start":864,"line_end":864,"column_start":8,"column_end":11},"name":"u64","qualname":"::number::streaming::u64","value":"pub fn u64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 8 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411349,"byte_end":411390,"line_start":839,"line_end":839,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411391,"byte_end":411394,"line_start":840,"line_end":840,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u64 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411395,"byte_end":411482,"line_start":841,"line_end":841,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u64 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411483,"byte_end":411568,"line_start":842,"line_end":842,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411569,"byte_end":411665,"line_start":843,"line_end":843,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411666,"byte_end":411677,"line_start":844,"line_end":844,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411678,"byte_end":411725,"line_start":845,"line_end":845,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411726,"byte_end":411754,"line_start":846,"line_end":846,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411755,"byte_end":411791,"line_start":847,"line_end":847,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411792,"byte_end":411795,"line_start":848,"line_end":848,"column_start":1,"column_end":4}},{"value":"/ let be_u64 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411796,"byte_end":411818,"line_start":849,"line_end":849,"column_start":1,"column_end":23}},{"value":"/   u64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411819,"byte_end":411882,"line_start":850,"line_end":850,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411883,"byte_end":411889,"line_start":851,"line_end":851,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411890,"byte_end":411893,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":411894,"byte_end":412007,"line_start":853,"line_end":853,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_u64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412008,"byte_end":412083,"line_start":854,"line_end":854,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412084,"byte_end":412087,"line_start":855,"line_end":855,"column_start":1,"column_end":4}},{"value":"/ let le_u64 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412088,"byte_end":412110,"line_start":856,"line_end":856,"column_start":1,"column_end":23}},{"value":"/   u64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412111,"byte_end":412177,"line_start":857,"line_end":857,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412178,"byte_end":412184,"line_start":858,"line_end":858,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412185,"byte_end":412188,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412189,"byte_end":412302,"line_start":860,"line_end":860,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_u64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412303,"byte_end":412378,"line_start":861,"line_end":861,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412379,"byte_end":412386,"line_start":862,"line_end":862,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412387,"byte_end":412396,"line_start":863,"line_end":863,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2642},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414043,"byte_end":414047,"line_start":904,"line_end":904,"column_start":8,"column_end":12},"name":"u128","qualname":"::number::streaming::u128","value":"pub fn u128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, u128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an unsigned 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes an unsigned 16 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412858,"byte_end":412900,"line_start":878,"line_end":878,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412901,"byte_end":412904,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian u128 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412905,"byte_end":412993,"line_start":880,"line_end":880,"column_start":1,"column_end":89}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian u128 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":412994,"byte_end":413080,"line_start":881,"line_end":881,"column_start":1,"column_end":87}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413081,"byte_end":413177,"line_start":882,"line_end":882,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413178,"byte_end":413189,"line_start":883,"line_end":883,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413190,"byte_end":413237,"line_start":884,"line_end":884,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413238,"byte_end":413266,"line_start":885,"line_end":885,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::u128;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413267,"byte_end":413304,"line_start":886,"line_end":886,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413305,"byte_end":413308,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ let be_u128 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413309,"byte_end":413332,"line_start":888,"line_end":888,"column_start":1,"column_end":24}},{"value":"/   u128::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413333,"byte_end":413397,"line_start":889,"line_end":889,"column_start":1,"column_end":65}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413398,"byte_end":413404,"line_start":890,"line_end":890,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413405,"byte_end":413408,"line_start":891,"line_end":891,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413409,"byte_end":413571,"line_start":892,"line_end":892,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_u128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413572,"byte_end":413649,"line_start":893,"line_end":893,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413650,"byte_end":413653,"line_start":894,"line_end":894,"column_start":1,"column_end":4}},{"value":"/ let le_u128 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413654,"byte_end":413677,"line_start":895,"line_end":895,"column_start":1,"column_end":24}},{"value":"/   u128::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413678,"byte_end":413745,"line_start":896,"line_end":896,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413746,"byte_end":413752,"line_start":897,"line_end":897,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413753,"byte_end":413756,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_u128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413757,"byte_end":413919,"line_start":899,"line_end":899,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_u128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413920,"byte_end":413997,"line_start":900,"line_end":900,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":413998,"byte_end":414005,"line_start":901,"line_end":901,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414006,"byte_end":414015,"line_start":902,"line_end":902,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414016,"byte_end":414035,"line_start":903,"line_end":903,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2645},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415075,"byte_end":415077,"line_start":935,"line_end":935,"column_start":8,"column_end":10},"name":"i8","qualname":"::number::streaming::i8","value":"pub fn i8<I, E: ParseError<I>>(I) -> IResult<I, i8, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 1 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 1 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414503,"byte_end":414541,"line_start":918,"line_end":918,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414542,"byte_end":414545,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/ Note that endianness does not apply to 1 byte numbers.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414546,"byte_end":414604,"line_start":920,"line_end":920,"column_start":1,"column_end":59}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414605,"byte_end":414701,"line_start":921,"line_end":921,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414702,"byte_end":414713,"line_start":922,"line_end":922,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414714,"byte_end":414761,"line_start":923,"line_end":923,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414762,"byte_end":414790,"line_start":924,"line_end":924,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i8;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414791,"byte_end":414826,"line_start":925,"line_end":925,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414827,"byte_end":414830,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414831,"byte_end":414853,"line_start":927,"line_end":927,"column_start":1,"column_end":23}},{"value":"/   i8::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414854,"byte_end":414886,"line_start":928,"line_end":928,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414887,"byte_end":414893,"line_start":929,"line_end":929,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414894,"byte_end":414897,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"\\x03abcefg\"[..], 0x00)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414898,"byte_end":414977,"line_start":931,"line_end":931,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(parser(&b\"\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":414978,"byte_end":415049,"line_start":932,"line_end":932,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415050,"byte_end":415057,"line_start":933,"line_end":933,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415058,"byte_end":415067,"line_start":934,"line_end":934,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2648},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416211,"byte_end":416214,"line_start":967,"line_end":967,"column_start":8,"column_end":11},"name":"i16","qualname":"::number::streaming::i16","value":"pub fn i16<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i16, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 2 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 2 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415231,"byte_end":415269,"line_start":942,"line_end":942,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415270,"byte_end":415273,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i16 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415274,"byte_end":415361,"line_start":944,"line_end":944,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i16 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415362,"byte_end":415447,"line_start":945,"line_end":945,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415448,"byte_end":415544,"line_start":946,"line_end":946,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415545,"byte_end":415556,"line_start":947,"line_end":947,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415557,"byte_end":415604,"line_start":948,"line_end":948,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415605,"byte_end":415633,"line_start":949,"line_end":949,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i16;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415634,"byte_end":415670,"line_start":950,"line_end":950,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415671,"byte_end":415674,"line_start":951,"line_end":951,"column_start":1,"column_end":4}},{"value":"/ let be_i16 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415675,"byte_end":415697,"line_start":952,"line_end":952,"column_start":1,"column_end":23}},{"value":"/   i16::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415698,"byte_end":415761,"line_start":953,"line_end":953,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415762,"byte_end":415768,"line_start":954,"line_end":954,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415769,"byte_end":415772,"line_start":955,"line_end":955,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0003)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415773,"byte_end":415850,"line_start":956,"line_end":956,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(be_i16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415851,"byte_end":415926,"line_start":957,"line_end":957,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415927,"byte_end":415930,"line_start":958,"line_end":958,"column_start":1,"column_end":4}},{"value":"/ let le_i16 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415931,"byte_end":415953,"line_start":959,"line_end":959,"column_start":1,"column_end":23}},{"value":"/   i16::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":415954,"byte_end":416020,"line_start":960,"line_end":960,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416021,"byte_end":416027,"line_start":961,"line_end":961,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416028,"byte_end":416031,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i16(&b\"\\x00\\x03abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416032,"byte_end":416109,"line_start":963,"line_end":963,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(le_i16(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416110,"byte_end":416185,"line_start":964,"line_end":964,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416186,"byte_end":416193,"line_start":965,"line_end":965,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416194,"byte_end":416203,"line_start":966,"line_end":966,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2651},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417657,"byte_end":417660,"line_start":1006,"line_end":1006,"column_start":8,"column_end":11},"name":"i24","qualname":"::number::streaming::i24","value":"pub fn i24<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 3 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 3 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416665,"byte_end":416703,"line_start":981,"line_end":981,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416704,"byte_end":416707,"line_start":982,"line_end":982,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i24 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416708,"byte_end":416795,"line_start":983,"line_end":983,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i24 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416796,"byte_end":416881,"line_start":984,"line_end":984,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416882,"byte_end":416978,"line_start":985,"line_end":985,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416979,"byte_end":416990,"line_start":986,"line_end":986,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":416991,"byte_end":417038,"line_start":987,"line_end":987,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417039,"byte_end":417067,"line_start":988,"line_end":988,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i24;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417068,"byte_end":417104,"line_start":989,"line_end":989,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417105,"byte_end":417108,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ let be_i24 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417109,"byte_end":417131,"line_start":991,"line_end":991,"column_start":1,"column_end":23}},{"value":"/   i24::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417132,"byte_end":417195,"line_start":992,"line_end":992,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417196,"byte_end":417202,"line_start":993,"line_end":993,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417203,"byte_end":417206,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x000305)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417207,"byte_end":417290,"line_start":995,"line_end":995,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(be_i24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417291,"byte_end":417366,"line_start":996,"line_end":996,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417367,"byte_end":417370,"line_start":997,"line_end":997,"column_start":1,"column_end":4}},{"value":"/ let le_i24 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417371,"byte_end":417393,"line_start":998,"line_end":998,"column_start":1,"column_end":23}},{"value":"/   i24::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417394,"byte_end":417460,"line_start":999,"line_end":999,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417461,"byte_end":417467,"line_start":1000,"line_end":1000,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417468,"byte_end":417471,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i24(&b\"\\x00\\x03\\x05abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x050300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417472,"byte_end":417555,"line_start":1002,"line_end":1002,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(le_i24(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(2))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417556,"byte_end":417631,"line_start":1003,"line_end":1003,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417632,"byte_end":417639,"line_start":1004,"line_end":1004,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":417640,"byte_end":417649,"line_start":1005,"line_end":1005,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2654},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419115,"byte_end":419118,"line_start":1045,"line_end":1045,"column_start":8,"column_end":11},"name":"i32","qualname":"::number::streaming::i32","value":"pub fn i32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 4 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 4 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418111,"byte_end":418149,"line_start":1020,"line_end":1020,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418150,"byte_end":418153,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i32 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418154,"byte_end":418241,"line_start":1022,"line_end":1022,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i32 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418242,"byte_end":418327,"line_start":1023,"line_end":1023,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418328,"byte_end":418424,"line_start":1024,"line_end":1024,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418425,"byte_end":418436,"line_start":1025,"line_end":1025,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418437,"byte_end":418484,"line_start":1026,"line_end":1026,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418485,"byte_end":418513,"line_start":1027,"line_end":1027,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418514,"byte_end":418550,"line_start":1028,"line_end":1028,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418551,"byte_end":418554,"line_start":1029,"line_end":1029,"column_start":1,"column_end":4}},{"value":"/ let be_i32 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418555,"byte_end":418577,"line_start":1030,"line_end":1030,"column_start":1,"column_end":23}},{"value":"/   i32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418578,"byte_end":418641,"line_start":1031,"line_end":1031,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418642,"byte_end":418648,"line_start":1032,"line_end":1032,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418649,"byte_end":418652,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00030507)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418653,"byte_end":418742,"line_start":1034,"line_end":1034,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(be_i32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418743,"byte_end":418818,"line_start":1035,"line_end":1035,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418819,"byte_end":418822,"line_start":1036,"line_end":1036,"column_start":1,"column_end":4}},{"value":"/ let le_i32 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418823,"byte_end":418845,"line_start":1037,"line_end":1037,"column_start":1,"column_end":23}},{"value":"/   i32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418846,"byte_end":418912,"line_start":1038,"line_end":1038,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418913,"byte_end":418919,"line_start":1039,"line_end":1039,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418920,"byte_end":418923,"line_start":1040,"line_end":1040,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i32(&b\"\\x00\\x03\\x05\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07050300)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":418924,"byte_end":419013,"line_start":1041,"line_end":1041,"column_start":1,"column_end":90}},{"value":"/ assert_eq!(le_i32(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419014,"byte_end":419089,"line_start":1042,"line_end":1042,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419090,"byte_end":419097,"line_start":1043,"line_end":1043,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419098,"byte_end":419107,"line_start":1044,"line_end":1044,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2657},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420621,"byte_end":420624,"line_start":1084,"line_end":1084,"column_start":8,"column_end":11},"name":"i64","qualname":"::number::streaming::i64","value":"pub fn i64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 8 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 8 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419569,"byte_end":419607,"line_start":1059,"line_end":1059,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419608,"byte_end":419611,"line_start":1060,"line_end":1060,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i64 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419612,"byte_end":419699,"line_start":1061,"line_end":1061,"column_start":1,"column_end":88}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i64 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419700,"byte_end":419785,"line_start":1062,"line_end":1062,"column_start":1,"column_end":86}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419786,"byte_end":419882,"line_start":1063,"line_end":1063,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419883,"byte_end":419894,"line_start":1064,"line_end":1064,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419895,"byte_end":419942,"line_start":1065,"line_end":1065,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419943,"byte_end":419971,"line_start":1066,"line_end":1066,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":419972,"byte_end":420008,"line_start":1067,"line_end":1067,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420009,"byte_end":420012,"line_start":1068,"line_end":1068,"column_start":1,"column_end":4}},{"value":"/ let be_i64 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420013,"byte_end":420035,"line_start":1069,"line_end":1069,"column_start":1,"column_end":23}},{"value":"/   i64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420036,"byte_end":420099,"line_start":1070,"line_end":1070,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420100,"byte_end":420106,"line_start":1071,"line_end":1071,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420107,"byte_end":420110,"line_start":1072,"line_end":1072,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420111,"byte_end":420224,"line_start":1073,"line_end":1073,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(be_i64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420225,"byte_end":420300,"line_start":1074,"line_end":1074,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420301,"byte_end":420304,"line_start":1075,"line_end":1075,"column_start":1,"column_end":4}},{"value":"/ let le_i64 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420305,"byte_end":420327,"line_start":1076,"line_end":1076,"column_start":1,"column_end":23}},{"value":"/   i64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420328,"byte_end":420394,"line_start":1077,"line_end":1077,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420395,"byte_end":420401,"line_start":1078,"line_end":1078,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420402,"byte_end":420405,"line_start":1079,"line_end":1079,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i64(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x0706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420406,"byte_end":420519,"line_start":1080,"line_end":1080,"column_start":1,"column_end":114}},{"value":"/ assert_eq!(le_i64(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420520,"byte_end":420595,"line_start":1081,"line_end":1081,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420596,"byte_end":420603,"line_start":1082,"line_end":1082,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":420604,"byte_end":420613,"line_start":1083,"line_end":1083,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2660},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422257,"byte_end":422261,"line_start":1124,"line_end":1124,"column_start":8,"column_end":12},"name":"i128","qualname":"::number::streaming::i128","value":"pub fn i128<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, i128, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a signed 16 byte integer","sig":null,"attributes":[{"value":"/ Recognizes a signed 16 byte integer","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421075,"byte_end":421114,"line_start":1098,"line_end":1098,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421115,"byte_end":421118,"line_start":1099,"line_end":1099,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian i128 integer,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421119,"byte_end":421207,"line_start":1100,"line_end":1100,"column_start":1,"column_end":89}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian i128 integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421208,"byte_end":421294,"line_start":1101,"line_end":1101,"column_start":1,"column_end":87}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421295,"byte_end":421391,"line_start":1102,"line_end":1102,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421392,"byte_end":421403,"line_start":1103,"line_end":1103,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421404,"byte_end":421451,"line_start":1104,"line_end":1104,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421452,"byte_end":421480,"line_start":1105,"line_end":1105,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::i128;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421481,"byte_end":421518,"line_start":1106,"line_end":1106,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421519,"byte_end":421522,"line_start":1107,"line_end":1107,"column_start":1,"column_end":4}},{"value":"/ let be_i128 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421523,"byte_end":421546,"line_start":1108,"line_end":1108,"column_start":1,"column_end":24}},{"value":"/   i128::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421547,"byte_end":421611,"line_start":1109,"line_end":1109,"column_start":1,"column_end":65}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421612,"byte_end":421618,"line_start":1110,"line_end":1110,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421619,"byte_end":421622,"line_start":1111,"line_end":1111,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x00010203040506070001020304050607)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421623,"byte_end":421785,"line_start":1112,"line_end":1112,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(be_i128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421786,"byte_end":421863,"line_start":1113,"line_end":1113,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421864,"byte_end":421867,"line_start":1114,"line_end":1114,"column_start":1,"column_end":4}},{"value":"/ let le_i128 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421868,"byte_end":421891,"line_start":1115,"line_end":1115,"column_start":1,"column_end":24}},{"value":"/   i128::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421892,"byte_end":421959,"line_start":1116,"line_end":1116,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421960,"byte_end":421966,"line_start":1117,"line_end":1117,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421967,"byte_end":421970,"line_start":1118,"line_end":1118,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_i128(&b\"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07abcefg\"[..]), Ok((&b\"abcefg\"[..], 0x07060504030201000706050403020100)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":421971,"byte_end":422133,"line_start":1119,"line_end":1119,"column_start":1,"column_end":163}},{"value":"/ assert_eq!(le_i128(&b\"\\x01\"[..]), Err(Err::Incomplete(Needed::new(15))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422134,"byte_end":422211,"line_start":1120,"line_end":1120,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422212,"byte_end":422219,"line_start":1121,"line_end":1121,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422220,"byte_end":422229,"line_start":1122,"line_end":1122,"column_start":1,"column_end":10}},{"value":"cfg(stable_i128)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422230,"byte_end":422249,"line_start":1123,"line_end":1123,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2663},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423233,"byte_end":423239,"line_start":1153,"line_end":1153,"column_start":8,"column_end":14},"name":"be_f32","qualname":"::number::streaming::be_f32","value":"pub fn be_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 4 bytes floating point number.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422717,"byte_end":422775,"line_start":1138,"line_end":1138,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422776,"byte_end":422779,"line_start":1139,"line_end":1139,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422780,"byte_end":422876,"line_start":1140,"line_end":1140,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422877,"byte_end":422888,"line_start":1141,"line_end":1141,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422889,"byte_end":422936,"line_start":1142,"line_end":1142,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_f32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422937,"byte_end":422976,"line_start":1143,"line_end":1143,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422977,"byte_end":422980,"line_start":1144,"line_end":1144,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":422981,"byte_end":423003,"line_start":1145,"line_end":1145,"column_start":1,"column_end":23}},{"value":"/   be_f32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423004,"byte_end":423040,"line_start":1146,"line_end":1146,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423041,"byte_end":423047,"line_start":1147,"line_end":1147,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423048,"byte_end":423051,"line_start":1148,"line_end":1148,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00][..]), Ok((&b\"\"[..], 2.640625)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423052,"byte_end":423132,"line_start":1149,"line_end":1149,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423133,"byte_end":423207,"line_start":1150,"line_end":1150,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423208,"byte_end":423215,"line_start":1151,"line_end":1151,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423216,"byte_end":423225,"line_start":1152,"line_end":1152,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2666},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424003,"byte_end":424009,"line_start":1178,"line_end":1178,"column_start":8,"column_end":14},"name":"be_f64","qualname":"::number::streaming::be_f64","value":"pub fn be_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a big endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a big endian 8 bytes floating point number.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423467,"byte_end":423525,"line_start":1163,"line_end":1163,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423526,"byte_end":423529,"line_start":1164,"line_end":1164,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423530,"byte_end":423626,"line_start":1165,"line_end":1165,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423627,"byte_end":423638,"line_start":1166,"line_end":1166,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423639,"byte_end":423686,"line_start":1167,"line_end":1167,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::be_f64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423687,"byte_end":423726,"line_start":1168,"line_end":1168,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423727,"byte_end":423730,"line_start":1169,"line_end":1169,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423731,"byte_end":423753,"line_start":1170,"line_end":1170,"column_start":1,"column_end":23}},{"value":"/   be_f64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423754,"byte_end":423790,"line_start":1171,"line_end":1171,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423791,"byte_end":423797,"line_start":1172,"line_end":1172,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423798,"byte_end":423801,"line_start":1173,"line_end":1173,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423802,"byte_end":423902,"line_start":1174,"line_end":1174,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423903,"byte_end":423977,"line_start":1175,"line_end":1175,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423978,"byte_end":423985,"line_start":1176,"line_end":1176,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":423986,"byte_end":423995,"line_start":1177,"line_end":1177,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2669},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424752,"byte_end":424758,"line_start":1203,"line_end":1203,"column_start":8,"column_end":14},"name":"le_f32","qualname":"::number::streaming::le_f32","value":"pub fn le_f32<I, E: ParseError<I>>(I) -> IResult<I, f32, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 4 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 4 bytes floating point number.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424237,"byte_end":424298,"line_start":1188,"line_end":1188,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424299,"byte_end":424302,"line_start":1189,"line_end":1189,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424303,"byte_end":424399,"line_start":1190,"line_end":1190,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424400,"byte_end":424411,"line_start":1191,"line_end":1191,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424412,"byte_end":424459,"line_start":1192,"line_end":1192,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_f32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424460,"byte_end":424499,"line_start":1193,"line_end":1193,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424500,"byte_end":424503,"line_start":1194,"line_end":1194,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424504,"byte_end":424526,"line_start":1195,"line_end":1195,"column_start":1,"column_end":23}},{"value":"/   le_f32::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424527,"byte_end":424563,"line_start":1196,"line_end":1196,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424564,"byte_end":424570,"line_start":1197,"line_end":1197,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424571,"byte_end":424574,"line_start":1198,"line_end":1198,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424575,"byte_end":424651,"line_start":1199,"line_end":1199,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(3))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424652,"byte_end":424726,"line_start":1200,"line_end":1200,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424727,"byte_end":424734,"line_start":1201,"line_end":1201,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424735,"byte_end":424744,"line_start":1202,"line_end":1202,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2672},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425530,"byte_end":425536,"line_start":1228,"line_end":1228,"column_start":8,"column_end":14},"name":"le_f64","qualname":"::number::streaming::le_f64","value":"pub fn le_f64<I, E: ParseError<I>>(I) -> IResult<I, f64, E> where\nI: Slice<RangeFrom<usize>> + InputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a little endian 8 bytes floating point number.","sig":null,"attributes":[{"value":"/ Recognizes a little endian 8 bytes floating point number.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":424986,"byte_end":425047,"line_start":1213,"line_end":1213,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425048,"byte_end":425051,"line_start":1214,"line_end":1214,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425052,"byte_end":425148,"line_start":1215,"line_end":1215,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425149,"byte_end":425160,"line_start":1216,"line_end":1216,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425161,"byte_end":425208,"line_start":1217,"line_end":1217,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::le_f64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425209,"byte_end":425248,"line_start":1218,"line_end":1218,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425249,"byte_end":425252,"line_start":1219,"line_end":1219,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425253,"byte_end":425275,"line_start":1220,"line_end":1220,"column_start":1,"column_end":23}},{"value":"/   le_f64::<_, (_, ErrorKind)>(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425276,"byte_end":425312,"line_start":1221,"line_end":1221,"column_start":1,"column_end":37}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425313,"byte_end":425319,"line_start":1222,"line_end":1222,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425320,"byte_end":425323,"line_start":1223,"line_end":1223,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 3145728.0)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425324,"byte_end":425429,"line_start":1224,"line_end":1224,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(parser(&[0x01][..]), Err(Err::Incomplete(Needed::new(7))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425430,"byte_end":425504,"line_start":1225,"line_end":1225,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425505,"byte_end":425512,"line_start":1226,"line_end":1226,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425513,"byte_end":425522,"line_start":1227,"line_end":1227,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2675},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426743,"byte_end":426746,"line_start":1263,"line_end":1263,"column_start":8,"column_end":11},"name":"f32","qualname":"::number::streaming::f32","value":"pub fn f32<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f32, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a 4 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes a 4 byte floating point number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425764,"byte_end":425809,"line_start":1238,"line_end":1238,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425810,"byte_end":425813,"line_start":1239,"line_end":1239,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian f32 float,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425814,"byte_end":425899,"line_start":1240,"line_end":1240,"column_start":1,"column_end":86}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian f32 float.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425900,"byte_end":425983,"line_start":1241,"line_end":1241,"column_start":1,"column_end":84}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":425984,"byte_end":426080,"line_start":1242,"line_end":1242,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426081,"byte_end":426092,"line_start":1243,"line_end":1243,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426093,"byte_end":426140,"line_start":1244,"line_end":1244,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426141,"byte_end":426169,"line_start":1245,"line_end":1245,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::f32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426170,"byte_end":426206,"line_start":1246,"line_end":1246,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426207,"byte_end":426210,"line_start":1247,"line_end":1247,"column_start":1,"column_end":4}},{"value":"/ let be_f32 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426211,"byte_end":426233,"line_start":1248,"line_end":1248,"column_start":1,"column_end":23}},{"value":"/   f32::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426234,"byte_end":426297,"line_start":1249,"line_end":1249,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426298,"byte_end":426304,"line_start":1250,"line_end":1250,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426305,"byte_end":426308,"line_start":1251,"line_end":1251,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f32(&[0x41, 0x48, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426309,"byte_end":426385,"line_start":1252,"line_end":1252,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(be_f32(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426386,"byte_end":426460,"line_start":1253,"line_end":1253,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426461,"byte_end":426464,"line_start":1254,"line_end":1254,"column_start":1,"column_end":4}},{"value":"/ let le_f32 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426465,"byte_end":426487,"line_start":1255,"line_end":1255,"column_start":1,"column_end":23}},{"value":"/   f32::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426488,"byte_end":426554,"line_start":1256,"line_end":1256,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426555,"byte_end":426561,"line_start":1257,"line_end":1257,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426562,"byte_end":426565,"line_start":1258,"line_end":1258,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f32(&[0x00, 0x00, 0x48, 0x41][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426566,"byte_end":426642,"line_start":1259,"line_end":1259,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(le_f32(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426643,"byte_end":426717,"line_start":1260,"line_end":1260,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426718,"byte_end":426725,"line_start":1261,"line_end":1261,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":426726,"byte_end":426735,"line_start":1262,"line_end":1262,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2678},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428225,"byte_end":428228,"line_start":1302,"line_end":1302,"column_start":8,"column_end":11},"name":"f64","qualname":"::number::streaming::f64","value":"pub fn f64<I, E: ParseError<I>>(crate::number::Endianness)\n-> fn(: I) -> IResult<I, f64, E> where I: Slice<RangeFrom<usize>> +\nInputIter<Item = u8> + InputLength","parent":null,"children":[],"decl_id":null,"docs":" Recognizes an 8 byte floating point number","sig":null,"attributes":[{"value":"/ Recognizes an 8 byte floating point number","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427197,"byte_end":427243,"line_start":1277,"line_end":1277,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427244,"byte_end":427247,"line_start":1278,"line_end":1278,"column_start":1,"column_end":4}},{"value":"/ If the parameter is `nom::number::Endianness::Big`, parse a big endian f64 float,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427248,"byte_end":427333,"line_start":1279,"line_end":1279,"column_start":1,"column_end":86}},{"value":"/ otherwise if `nom::number::Endianness::Little` parse a little endian f64 float.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427334,"byte_end":427417,"line_start":1280,"line_end":1280,"column_start":1,"column_end":84}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427418,"byte_end":427514,"line_start":1281,"line_end":1281,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427515,"byte_end":427526,"line_start":1282,"line_end":1282,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427527,"byte_end":427574,"line_start":1283,"line_end":1283,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427575,"byte_end":427603,"line_start":1284,"line_end":1284,"column_start":1,"column_end":29}},{"value":"/ use nom::number::streaming::f64;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427604,"byte_end":427640,"line_start":1285,"line_end":1285,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427641,"byte_end":427644,"line_start":1286,"line_end":1286,"column_start":1,"column_end":4}},{"value":"/ let be_f64 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427645,"byte_end":427667,"line_start":1287,"line_end":1287,"column_start":1,"column_end":23}},{"value":"/   f64::<_, (_, ErrorKind)>(nom::number::Endianness::Big)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427668,"byte_end":427731,"line_start":1288,"line_end":1288,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427732,"byte_end":427738,"line_start":1289,"line_end":1289,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427739,"byte_end":427742,"line_start":1290,"line_end":1290,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(be_f64(&[0x40, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427743,"byte_end":427843,"line_start":1291,"line_end":1291,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(be_f64(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427844,"byte_end":427918,"line_start":1292,"line_end":1292,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427919,"byte_end":427922,"line_start":1293,"line_end":1293,"column_start":1,"column_end":4}},{"value":"/ let le_f64 = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427923,"byte_end":427945,"line_start":1294,"line_end":1294,"column_start":1,"column_end":23}},{"value":"/   f64::<_, (_, ErrorKind)>(nom::number::Endianness::Little)(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":427946,"byte_end":428012,"line_start":1295,"line_end":1295,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428013,"byte_end":428019,"line_start":1296,"line_end":1296,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428020,"byte_end":428023,"line_start":1297,"line_end":1297,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(le_f64(&[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x40][..]), Ok((&b\"\"[..], 12.5)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428024,"byte_end":428124,"line_start":1298,"line_end":1298,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(le_f64(&b\"abc\"[..]), Err(Err::Incomplete(Needed::new(5))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428125,"byte_end":428199,"line_start":1299,"line_end":1299,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428200,"byte_end":428207,"line_start":1300,"line_end":1300,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428208,"byte_end":428217,"line_start":1301,"line_end":1301,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2681},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":429208,"byte_end":429215,"line_start":1332,"line_end":1332,"column_start":8,"column_end":15},"name":"hex_u32","qualname":"::number::streaming::hex_u32","value":"pub fn hex_u32<'a, E: ParseError<&'a [u8]>>(&'a [u8])\n-> IResult<&'a [u8], u32, E>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a hex-encoded integer.","sig":null,"attributes":[{"value":"/ Recognizes a hex-encoded integer.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428679,"byte_end":428716,"line_start":1316,"line_end":1316,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428717,"byte_end":428720,"line_start":1317,"line_end":1317,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428721,"byte_end":428817,"line_start":1318,"line_end":1318,"column_start":1,"column_end":97}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428818,"byte_end":428829,"line_start":1319,"line_end":1319,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428830,"byte_end":428877,"line_start":1320,"line_end":1320,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::hex_u32;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428878,"byte_end":428918,"line_start":1321,"line_end":1321,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428919,"byte_end":428922,"line_start":1322,"line_end":1322,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428923,"byte_end":428945,"line_start":1323,"line_end":1323,"column_start":1,"column_end":23}},{"value":"/   hex_u32(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428946,"byte_end":428962,"line_start":1324,"line_end":1324,"column_start":1,"column_end":17}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428963,"byte_end":428969,"line_start":1325,"line_end":1325,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428970,"byte_end":428973,"line_start":1326,"line_end":1326,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(b\"01AE;\"), Ok((&b\";\"[..], 0x01AE)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":428974,"byte_end":429032,"line_start":1327,"line_end":1327,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(parser(b\"abc\"), Err(Err::Incomplete(Needed::new(1))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":429033,"byte_end":429102,"line_start":1328,"line_end":1328,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(parser(b\"ggg\"), Err(Err::Error((&b\"ggg\"[..], ErrorKind::IsA))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":429103,"byte_end":429182,"line_start":1329,"line_end":1329,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":429183,"byte_end":429190,"line_start":1330,"line_end":1330,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":429191,"byte_end":429200,"line_start":1331,"line_end":1331,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6078},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430397,"byte_end":430412,"line_start":1373,"line_end":1373,"column_start":8,"column_end":23},"name":"recognize_float","qualname":"::number::streaming::recognize_float","value":"pub fn recognize_float<T, E: ParseError<T>>(T) -> IResult<T, T, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter, <T as InputIter>::Item: AsChar, T: InputTakeAtPosition +\nInputLength, <T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a floating point number in text format and returns the corresponding part of the input.","sig":null,"attributes":[{"value":"/ Recognizes a floating point number in text format and returns the corresponding part of the input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":429740,"byte_end":429842,"line_start":1355,"line_end":1355,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":429843,"byte_end":429846,"line_start":1356,"line_end":1356,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if it reaches the end of input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":429847,"byte_end":429946,"line_start":1357,"line_end":1357,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":429947,"byte_end":429950,"line_start":1358,"line_end":1358,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":429951,"byte_end":429962,"line_start":1359,"line_end":1359,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":429963,"byte_end":430010,"line_start":1360,"line_end":1360,"column_start":1,"column_end":48}},{"value":"/ use nom::number::streaming::recognize_float;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430011,"byte_end":430059,"line_start":1361,"line_end":1361,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430060,"byte_end":430063,"line_start":1362,"line_end":1362,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430064,"byte_end":430086,"line_start":1363,"line_end":1363,"column_start":1,"column_end":23}},{"value":"/   recognize_float(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430087,"byte_end":430111,"line_start":1364,"line_end":1364,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430112,"byte_end":430118,"line_start":1365,"line_end":1365,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430119,"byte_end":430122,"line_start":1366,"line_end":1366,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1;\"), Ok((\";\", \"11e-1\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430123,"byte_end":430176,"line_start":1367,"line_end":1367,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser(\"123E-02;\"), Ok((\";\", \"123E-02\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430177,"byte_end":430234,"line_start":1368,"line_end":1368,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", \"123\")));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430235,"byte_end":430290,"line_start":1369,"line_end":1369,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Char))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430291,"byte_end":430364,"line_start":1370,"line_end":1370,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430365,"byte_end":430372,"line_start":1371,"line_end":1371,"column_start":1,"column_end":8}},{"value":"rustfmt::skip","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":430373,"byte_end":430389,"line_start":1372,"line_end":1372,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":2685},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":431115,"byte_end":431144,"line_start":1400,"line_end":1400,"column_start":8,"column_end":37},"name":"recognize_float_or_exceptions","qualname":"::number::streaming::recognize_float_or_exceptions","value":"pub fn recognize_float_or_exceptions<T, E: ParseError<T>>(T)\n-> IResult<T, T, E> where T: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>,\nT: Clone + Offset, T: InputIter + InputTake + InputLength +\nCompare<&'static str>, <T as InputIter>::Item: AsChar, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2696},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":432587,"byte_end":432608,"line_start":1436,"line_end":1436,"column_start":8,"column_end":29},"name":"recognize_float_parts","qualname":"::number::streaming::recognize_float_parts","value":"pub fn recognize_float_parts<T, E: ParseError<T>>(T)\n-> IResult<T, (bool, T, T, i32), E> where T: Slice<RangeFrom<usize>> +\nSlice<RangeTo<usize>>, T: Clone + Offset, T: InputIter +\ncrate::traits::ParseTo<i32>, <T as InputIter>::Item: AsChar,\nT: InputTakeAtPosition + InputTake + InputLength,\n<T as InputTakeAtPosition>::Item: AsChar, T: for<'a> Compare<&'a [u8]>,\nT: AsBytes","parent":null,"children":[],"decl_id":null,"docs":" Recognizes a floating point number in text format and returns the integer, fraction and exponent parts of the input data","sig":null,"attributes":[{"value":"/ Recognizes a floating point number in text format and returns the integer, fraction and exponent parts of the input data","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":432350,"byte_end":432474,"line_start":1432,"line_end":1432,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":432475,"byte_end":432478,"line_start":1433,"line_end":1433,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":432479,"byte_end":432575,"line_start":1434,"line_end":1434,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":432576,"byte_end":432579,"line_start":1435,"line_end":1435,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":2702},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435606,"byte_end":435611,"line_start":1545,"line_end":1545,"column_start":8,"column_end":13},"name":"float","qualname":"::number::streaming::float","value":"pub fn float<T, E: ParseError<T>>(T) -> IResult<T, f32, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter + InputLength + InputTake + crate::traits::ParseTo<f32> +\nCompare<&'static str>, <T as InputIter>::Item: AsChar,\n<T as InputIter>::IterElem: Clone, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar, T: AsBytes,\nT: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in text format and returns a f32.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in text format and returns a f32.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435005,"byte_end":435075,"line_start":1527,"line_end":1527,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435076,"byte_end":435079,"line_start":1528,"line_end":1528,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435080,"byte_end":435176,"line_start":1529,"line_end":1529,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435177,"byte_end":435180,"line_start":1530,"line_end":1530,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435181,"byte_end":435192,"line_start":1531,"line_end":1531,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435193,"byte_end":435240,"line_start":1532,"line_end":1532,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435241,"byte_end":435269,"line_start":1533,"line_end":1533,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::float;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435270,"byte_end":435307,"line_start":1534,"line_end":1534,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435308,"byte_end":435311,"line_start":1535,"line_end":1535,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435312,"byte_end":435334,"line_start":1536,"line_end":1536,"column_start":1,"column_end":23}},{"value":"/   float(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435335,"byte_end":435349,"line_start":1537,"line_end":1537,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435350,"byte_end":435356,"line_start":1538,"line_end":1538,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435357,"byte_end":435360,"line_start":1539,"line_end":1539,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435361,"byte_end":435408,"line_start":1540,"line_end":1540,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435409,"byte_end":435459,"line_start":1541,"line_end":1541,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435460,"byte_end":435515,"line_start":1542,"line_end":1542,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435516,"byte_end":435590,"line_start":1543,"line_end":1543,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":435591,"byte_end":435598,"line_start":1544,"line_end":1544,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2706},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":437138,"byte_end":437144,"line_start":1599,"line_end":1599,"column_start":8,"column_end":14},"name":"double","qualname":"::number::streaming::double","value":"pub fn double<T, E: ParseError<T>>(T) -> IResult<T, f64, E> where\nT: Slice<RangeFrom<usize>> + Slice<RangeTo<usize>>, T: Clone + Offset,\nT: InputIter + InputLength + InputTake + crate::traits::ParseTo<f64> +\nCompare<&'static str>, <T as InputIter>::Item: AsChar,\n<T as InputIter>::IterElem: Clone, T: InputTakeAtPosition,\n<T as InputTakeAtPosition>::Item: AsChar, T: AsBytes,\nT: for<'a> Compare<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Recognizes floating point number in text format and returns a f64.","sig":null,"attributes":[{"value":"/ Recognizes floating point number in text format and returns a f64.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436535,"byte_end":436605,"line_start":1581,"line_end":1581,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436606,"byte_end":436609,"line_start":1582,"line_end":1582,"column_start":1,"column_end":4}},{"value":"/ *Streaming version*: Will return `Err(nom::Err::Incomplete(_))` if there is not enough data.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436610,"byte_end":436706,"line_start":1583,"line_end":1583,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436707,"byte_end":436710,"line_start":1584,"line_end":1584,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436711,"byte_end":436722,"line_start":1585,"line_end":1585,"column_start":1,"column_end":12}},{"value":"/ # use nom::{Err, error::ErrorKind, Needed};","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436723,"byte_end":436770,"line_start":1586,"line_end":1586,"column_start":1,"column_end":48}},{"value":"/ # use nom::Needed::Size;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436771,"byte_end":436799,"line_start":1587,"line_end":1587,"column_start":1,"column_end":29}},{"value":"/ use nom::number::complete::double;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436800,"byte_end":436838,"line_start":1588,"line_end":1588,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436839,"byte_end":436842,"line_start":1589,"line_end":1589,"column_start":1,"column_end":4}},{"value":"/ let parser = |s| {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436843,"byte_end":436865,"line_start":1590,"line_end":1590,"column_start":1,"column_end":23}},{"value":"/   double(s)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436866,"byte_end":436881,"line_start":1591,"line_end":1591,"column_start":1,"column_end":16}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436882,"byte_end":436888,"line_start":1592,"line_end":1592,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436889,"byte_end":436892,"line_start":1593,"line_end":1593,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser(\"11e-1\"), Ok((\"\", 1.1)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436893,"byte_end":436940,"line_start":1594,"line_end":1594,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser(\"123E-02\"), Ok((\"\", 1.23)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436941,"byte_end":436991,"line_start":1595,"line_end":1595,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(parser(\"123K-01\"), Ok((\"K-01\", 123.0)));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":436992,"byte_end":437047,"line_start":1596,"line_end":1596,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser(\"abc\"), Err(Err::Error((\"abc\", ErrorKind::Float))));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":437048,"byte_end":437122,"line_start":1597,"line_end":1597,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/streaming.rs","byte_start":437123,"byte_end":437130,"line_start":1598,"line_end":1598,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6084},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","byte_start":319239,"byte_end":319242,"line_start":10,"line_end":10,"column_start":3,"column_end":6},"name":"Big","qualname":"::number::Endianness::Big","value":"Endianness::Big","parent":{"krate":0,"index":6083},"children":[],"decl_id":null,"docs":" Big endian\n","sig":null,"attributes":[{"value":"/ Big endian","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","byte_start":319222,"byte_end":319236,"line_start":9,"line_end":9,"column_start":3,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6086},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","byte_start":319266,"byte_end":319272,"line_start":12,"line_end":12,"column_start":3,"column_end":9},"name":"Little","qualname":"::number::Endianness::Little","value":"Endianness::Little","parent":{"krate":0,"index":6083},"children":[],"decl_id":null,"docs":" Little endian\n","sig":null,"attributes":[{"value":"/ Little endian","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","byte_start":319246,"byte_end":319263,"line_start":11,"line_end":11,"column_start":3,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6088},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","byte_start":319315,"byte_end":319321,"line_start":14,"line_end":14,"column_start":3,"column_end":9},"name":"Native","qualname":"::number::Endianness::Native","value":"Endianness::Native","parent":{"krate":0,"index":6083},"children":[],"decl_id":null,"docs":" Will match the host's endianness\n","sig":null,"attributes":[{"value":"/ Will match the host's endianness","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","byte_start":319276,"byte_end":319312,"line_start":13,"line_end":13,"column_start":3,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":6083},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","byte_start":319207,"byte_end":319217,"line_start":8,"line_end":8,"column_start":10,"column_end":20},"name":"Endianness","qualname":"::number::Endianness","value":"pub enum Endianness { Big, Little, Native, }","parent":null,"children":[{"krate":0,"index":6084},{"krate":0,"index":6086},{"krate":0,"index":6088}],"decl_id":null,"docs":" Configurable endianness\n","sig":null,"attributes":[{"value":"/ Configurable endianness","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","byte_start":319125,"byte_end":319152,"line_start":6,"line_end":6,"column_start":1,"column_end":28}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18145,"byte_end":18150,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18301,"byte_end":18306,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18507,"byte_end":18512,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18559,"byte_end":18564,"line_start":84,"line_end":84,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18862,"byte_end":18867,"line_start":92,"line_end":92,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":19080,"byte_end":19085,"line_start":99,"line_end":99,"column_start":58,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":21449,"byte_end":21461,"line_start":172,"line_end":172,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":22002,"byte_end":22014,"line_start":193,"line_end":193,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":22300,"byte_end":22312,"line_start":202,"line_end":202,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":22568,"byte_end":22580,"line_start":210,"line_end":210,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":23107,"byte_end":23119,"line_start":226,"line_end":226,"column_start":58,"column_end":70},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":30837,"byte_end":30846,"line_start":483,"line_end":483,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":60571,"byte_end":60585,"line_start":678,"line_end":678,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":64749,"byte_end":64756,"line_start":35,"line_end":35,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65515,"byte_end":65521,"line_start":57,"line_end":57,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67328,"byte_end":67331,"line_start":108,"line_end":108,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":68005,"byte_end":68008,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":68415,"byte_end":68418,"line_start":153,"line_end":153,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69076,"byte_end":69079,"line_start":176,"line_end":176,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69322,"byte_end":69325,"line_start":185,"line_end":185,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69566,"byte_end":69569,"line_start":194,"line_end":194,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69814,"byte_end":69817,"line_start":203,"line_end":203,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":70048,"byte_end":70051,"line_start":211,"line_end":211,"column_start":20,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":70084,"byte_end":70087,"line_start":213,"line_end":213,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":70595,"byte_end":70598,"line_start":231,"line_end":231,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":72785,"byte_end":72786,"line_start":320,"line_end":320,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":73018,"byte_end":73021,"line_start":333,"line_end":333,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":73406,"byte_end":73409,"line_start":347,"line_end":347,"column_start":83,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":73880,"byte_end":73887,"line_start":365,"line_end":365,"column_start":7,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":74305,"byte_end":74312,"line_start":382,"line_end":382,"column_start":7,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":74707,"byte_end":74710,"line_start":399,"line_end":399,"column_start":7,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":75132,"byte_end":75134,"line_start":416,"line_end":416,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":75919,"byte_end":75923,"line_start":447,"line_end":447,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":89369,"byte_end":89370,"line_start":499,"line_end":499,"column_start":7,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":96815,"byte_end":96816,"line_start":789,"line_end":789,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":108279,"byte_end":108284,"line_start":1283,"line_end":1283,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":108479,"byte_end":108484,"line_start":1292,"line_end":1292,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":108767,"byte_end":108779,"line_start":1303,"line_end":1303,"column_start":57,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":109104,"byte_end":109116,"line_start":1313,"line_end":1313,"column_start":66,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15466,"byte_end":15471,"line_start":446,"line_end":446,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":66}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15482,"byte_end":15492,"line_start":448,"line_end":448,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":185}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15541,"byte_end":15547,"line_start":452,"line_end":452,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1075}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15557,"byte_end":15562,"line_start":453,"line_end":453,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1129}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15572,"byte_end":15580,"line_start":454,"line_end":454,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1297}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15591,"byte_end":15595,"line_start":456,"line_end":456,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1383}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158257,"byte_end":158265,"line_start":4,"line_end":4,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1384}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bits/mod.rs","byte_start":158275,"byte_end":158284,"line_start":5,"line_end":5,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1443}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15605,"byte_end":15610,"line_start":457,"line_end":457,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1549}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/mod.rs","byte_start":172266,"byte_end":172274,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1550}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/bytes/mod.rs","byte_start":172284,"byte_end":172293,"line_start":4,"line_end":4,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1708}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15621,"byte_end":15630,"line_start":459,"line_end":459,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1868}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220423,"byte_end":220431,"line_start":8,"line_end":8,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1869}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/character/mod.rs","byte_start":220441,"byte_end":220450,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2042}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/lib.rs","byte_start":15651,"byte_end":15657,"line_start":463,"line_end":463,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2226}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","byte_start":319095,"byte_end":319103,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2227}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/number/mod.rs","byte_start":319113,"byte_end":319122,"line_start":4,"line_end":4,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2473}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":16342,"byte_end":16347,"line_start":16,"line_end":16,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":17218,"byte_end":17223,"line_start":39,"line_end":39,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18145,"byte_end":18150,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18301,"byte_end":18306,"line_start":72,"line_end":72,"column_start":27,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2710},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18507,"byte_end":18512,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2710},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18559,"byte_end":18564,"line_start":84,"line_end":84,"column_start":40,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2710},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":18862,"byte_end":18867,"line_start":92,"line_end":92,"column_start":40,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2710},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":19080,"byte_end":19085,"line_start":99,"line_end":99,"column_start":58,"column_end":63},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2710},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":21449,"byte_end":21461,"line_start":172,"line_end":172,"column_start":27,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2723},"to":{"krate":0,"index":73}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":22002,"byte_end":22014,"line_start":193,"line_end":193,"column_start":29,"column_end":41},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2723},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":22300,"byte_end":22312,"line_start":202,"line_end":202,"column_start":40,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2723},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":22568,"byte_end":22580,"line_start":210,"line_end":210,"column_start":40,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2723},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":23107,"byte_end":23119,"line_start":226,"line_end":226,"column_start":58,"column_end":70},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2723},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/error.rs","byte_start":30837,"byte_end":30846,"line_start":483,"line_end":483,"column_start":6,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/combinator/mod.rs","byte_start":60571,"byte_end":60585,"line_start":678,"line_end":678,"column_start":22,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":64749,"byte_end":64756,"line_start":35,"line_end":35,"column_start":35,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":459},"to":{"krate":0,"index":463}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":65515,"byte_end":65521,"line_start":57,"line_end":57,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":67328,"byte_end":67331,"line_start":108,"line_end":108,"column_start":9,"column_end":12},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":68005,"byte_end":68008,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":68415,"byte_end":68418,"line_start":153,"line_end":153,"column_start":9,"column_end":12},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69076,"byte_end":69079,"line_start":176,"line_end":176,"column_start":6,"column_end":9},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69322,"byte_end":69325,"line_start":185,"line_end":185,"column_start":6,"column_end":9},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69566,"byte_end":69569,"line_start":194,"line_end":194,"column_start":6,"column_end":9},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":69814,"byte_end":69817,"line_start":203,"line_end":203,"column_start":6,"column_end":9},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":70048,"byte_end":70051,"line_start":211,"line_end":211,"column_start":20,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2897},"to":{"krate":2,"index":2660}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":70084,"byte_end":70087,"line_start":213,"line_end":213,"column_start":26,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2897},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":70595,"byte_end":70598,"line_start":231,"line_end":231,"column_start":19,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2897},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":72785,"byte_end":72786,"line_start":320,"line_end":320,"column_start":42,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":553},"to":{"krate":0,"index":525}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":73018,"byte_end":73021,"line_start":333,"line_end":333,"column_start":39,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":525}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":73406,"byte_end":73409,"line_start":347,"line_end":347,"column_start":83,"column_end":86},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":564},"to":{"krate":0,"index":525}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":73880,"byte_end":73887,"line_start":365,"line_end":365,"column_start":7,"column_end":14},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":580},"to":{"krate":0,"index":525}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":74305,"byte_end":74312,"line_start":382,"line_end":382,"column_start":7,"column_end":14},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":597},"to":{"krate":0,"index":525}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":74707,"byte_end":74710,"line_start":399,"line_end":399,"column_start":7,"column_end":10},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":613},"to":{"krate":0,"index":525}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":75132,"byte_end":75134,"line_start":416,"line_end":416,"column_start":23,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":627},"to":{"krate":0,"index":525}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/internal.rs","byte_start":75919,"byte_end":75923,"line_start":447,"line_end":447,"column_start":27,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":640},"to":{"krate":0,"index":525}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":84351,"byte_end":84356,"line_start":328,"line_end":328,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":807}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":87393,"byte_end":87398,"line_start":444,"line_end":444,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":840}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":89369,"byte_end":89370,"line_start":499,"line_end":499,"column_start":7,"column_end":8},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":855},"to":{"krate":0,"index":840}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":96815,"byte_end":96816,"line_start":789,"line_end":789,"column_start":20,"column_end":21},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":916},"to":{"krate":0,"index":903}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":108279,"byte_end":108284,"line_start":1283,"line_end":1283,"column_start":50,"column_end":55},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2710},"to":{"krate":0,"index":1039}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":108479,"byte_end":108484,"line_start":1292,"line_end":1292,"column_start":59,"column_end":64},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2710},"to":{"krate":0,"index":1039}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":108767,"byte_end":108779,"line_start":1303,"line_end":1303,"column_start":57,"column_end":69},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2723},"to":{"krate":0,"index":1039}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/nom-7.1.0/src/traits.rs","byte_start":109104,"byte_end":109116,"line_start":1313,"line_end":1313,"column_start":66,"column_end":78},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2723},"to":{"krate":0,"index":1039}}]}