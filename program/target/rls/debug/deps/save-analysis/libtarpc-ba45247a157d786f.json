{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2","program":"/home/zfaizal/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tarpc","--edition=2018","/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"full\"","--cfg","feature=\"serde\"","--cfg","feature=\"serde-transport\"","--cfg","feature=\"serde1\"","--cfg","feature=\"tcp\"","--cfg","feature=\"tokio-serde\"","--cfg","feature=\"tokio1\"","-C","metadata=ba45247a157d786f","-C","extra-filename=-ba45247a157d786f","--out-dir","/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps","-L","dependency=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps","--extern","anyhow=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libanyhow-9352a6df3f21cc4d.rmeta","--extern","fnv=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libfnv-a73377529446fa20.rmeta","--extern","futures=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libfutures-d0c9249f4e5f48bd.rmeta","--extern","humantime=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libhumantime-2c8525a21fdb5d25.rmeta","--extern","opentelemetry=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libopentelemetry-012c7d2865296ecd.rmeta","--extern","pin_project=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libpin_project-0ca5771f3878ba8f.rmeta","--extern","rand=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/librand-2e001405af96c5f6.rmeta","--extern","serde=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libserde-86ec39294452ac4e.rmeta","--extern","static_assertions=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libstatic_assertions-6eb96a9a09e62cf4.rmeta","--extern","tarpc_plugins=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libtarpc_plugins-58460dcee36d5b8c.so","--extern","thiserror=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libthiserror-c9de706e412fcd8c.rmeta","--extern","tokio=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libtokio-c6397101639d139b.rmeta","--extern","tokio_serde=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libtokio_serde-343057453c0bc220.rmeta","--extern","tokio_util=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libtokio_util-d8bb2c6087e7521f.rmeta","--extern","tracing=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libtracing-0beb8b09c89df919.rmeta","--extern","tracing_opentelemetry=/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libtracing_opentelemetry-fa24492e49f6e5ae.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/zfaizal/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/zfaizal/Projects/exchange_booth_skeleton/program/target/rls/debug/deps/libtarpc-ba45247a157d786f.rmeta"},"prelude":{"crate_id":{"name":"tarpc","disambiguator":[18036745193269624949,0]},"crate_root":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src","external_crates":[{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":20,"id":{"name":"serde","disambiguator":[14044248563112677927,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":21,"id":{"name":"serde_derive","disambiguator":[13995095357157139497,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":22,"id":{"name":"tokio_serde","disambiguator":[11216736574001761599,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":23,"id":{"name":"bytes","disambiguator":[6191440968204973069,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":24,"id":{"name":"futures_core","disambiguator":[18200893915827065529,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":25,"id":{"name":"futures_sink","disambiguator":[8307411743786656110,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":26,"id":{"name":"pin_project","disambiguator":[14961834963295434675,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":27,"id":{"name":"pin_project_internal","disambiguator":[11410496046174426483,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":28,"id":{"name":"educe","disambiguator":[4660346549999787111,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":29,"id":{"name":"bincode","disambiguator":[13168398120385942670,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":30,"id":{"name":"futures","disambiguator":[4337358424974900475,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":31,"id":{"name":"futures_util","disambiguator":[17413347477511345824,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":32,"id":{"name":"pin_utils","disambiguator":[3673188743213573932,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":33,"id":{"name":"futures_macro","disambiguator":[12835129650532780108,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":34,"id":{"name":"futures_task","disambiguator":[13474543951748236176,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":35,"id":{"name":"pin_project_lite","disambiguator":[17627374544393263653,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":36,"id":{"name":"futures_channel","disambiguator":[1832996214919299864,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":37,"id":{"name":"slab","disambiguator":[4028794699268519618,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":38,"id":{"name":"futures_io","disambiguator":[489674024207278210,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":39,"id":{"name":"futures","disambiguator":[9893048567650089844,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":40,"id":{"name":"memchr","disambiguator":[5547902202154193270,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":41,"id":{"name":"futures_executor","disambiguator":[1166865853276972167,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":42,"id":{"name":"num_cpus","disambiguator":[8888045507868980783,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":43,"id":{"name":"libc","disambiguator":[1623297377879856316,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":44,"id":{"name":"tokio","disambiguator":[17212243770576452484,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":45,"id":{"name":"parking_lot","disambiguator":[12507362848068905465,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":46,"id":{"name":"instant","disambiguator":[17081669115862444966,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":47,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":48,"id":{"name":"lock_api","disambiguator":[12682360784623646209,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":49,"id":{"name":"scopeguard","disambiguator":[7389675204133512052,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":50,"id":{"name":"parking_lot_core","disambiguator":[3275111788447745139,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":51,"id":{"name":"smallvec","disambiguator":[1603597397311112112,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":52,"id":{"name":"mio","disambiguator":[10862057843324194718,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":53,"id":{"name":"log","disambiguator":[9662559984274894343,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":54,"id":{"name":"once_cell","disambiguator":[1725345041460281935,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":55,"id":{"name":"tokio_macros","disambiguator":[9526833921484424160,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":56,"id":{"name":"signal_hook_registry","disambiguator":[5873125402128122042,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","num":57,"id":{"name":"tokio_util","disambiguator":[7237004935817681035,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":58,"id":{"name":"opentelemetry","disambiguator":[8969768251053233917,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":59,"id":{"name":"async_trait","disambiguator":[18293269867069617882,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":60,"id":{"name":"percent_encoding","disambiguator":[16519944498376996947,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":61,"id":{"name":"rand","disambiguator":[12252018600484131900,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":62,"id":{"name":"rand_core","disambiguator":[3192443078635754823,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":63,"id":{"name":"getrandom","disambiguator":[6561512141613163802,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":64,"id":{"name":"rand_chacha","disambiguator":[12263224266856247605,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":65,"id":{"name":"ppv_lite86","disambiguator":[13049449680620946981,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","num":66,"id":{"name":"thiserror","disambiguator":[10176578803914340585,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":67,"id":{"name":"thiserror_impl","disambiguator":[7812757140900411430,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":68,"id":{"name":"lazy_static","disambiguator":[2335416628160260444,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":69,"id":{"name":"tracing_opentelemetry","disambiguator":[7919367251354039349,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":70,"id":{"name":"tracing_core","disambiguator":[7296801535872264544,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":71,"id":{"name":"tracing_subscriber","disambiguator":[11050399775091611606,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":72,"id":{"name":"sharded_slab","disambiguator":[3550422942689215411,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":73,"id":{"name":"thread_local","disambiguator":[4322103436635300751,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client/in_flight_requests.rs","num":74,"id":{"name":"tracing","disambiguator":[9656391517508561629,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","num":75,"id":{"name":"tracing_attributes","disambiguator":[122738137554638762,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":76,"id":{"name":"tarpc_plugins","disambiguator":[4327545351905405345,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client/in_flight_requests.rs","num":77,"id":{"name":"fnv","disambiguator":[5726890394453190873,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","num":78,"id":{"name":"static_assertions","disambiguator":[18091571177233982124,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","num":79,"id":{"name":"anyhow","disambiguator":[18131539348552354722,0]}},{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","num":80,"id":{"name":"humantime","disambiguator":[8199000222804016955,0]}}],"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":182,"byte_end":15789,"line_start":6,"line_end":428,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8983,"byte_end":8988,"line_start":211,"line_end":211,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":0},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":9035,"byte_end":9046,"line_start":214,"line_end":214,"column_start":9,"column_end":20},"alias_span":null,"name":"tokio_serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":76,"index":127},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":9236,"byte_end":9248,"line_start":223,"line_end":223,"column_start":24,"column_end":36},"alias_span":null,"name":"derive_serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":76,"index":128},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":9991,"byte_end":9998,"line_start":247,"line_end":247,"column_start":24,"column_end":31},"alias_span":null,"name":"service","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":76,"index":141},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":11676,"byte_end":11682,"line_start":303,"line_end":303,"column_start":24,"column_end":30},"alias_span":null,"name":"server","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2346},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":77750,"byte_end":77763,"line_start":36,"line_end":36,"column_start":13,"column_end":26},"alias_span":null,"name":"ChannelFilter","value":"","parent":{"krate":0,"index":532}},{"kind":"Use","ref_id":{"krate":0,"index":2635},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":77780,"byte_end":77789,"line_start":37,"line_end":37,"column_start":16,"column_end":25},"alias_span":null,"name":"Throttler","value":"","parent":{"krate":0,"index":532}},{"kind":"Use","ref_id":{"krate":0,"index":2707},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":77791,"byte_end":77806,"line_start":37,"line_end":37,"column_start":27,"column_end":42},"alias_span":null,"name":"ThrottlerStream","value":"","parent":{"krate":0,"index":532}},{"kind":"Use","ref_id":{"krate":0,"index":1109},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":11809,"byte_end":11818,"line_start":311,"line_end":311,"column_start":35,"column_end":44},"alias_span":null,"name":"Transport","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":182,"byte_end":15789,"line_start":6,"line_end":428,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":184},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":492},{"krate":0,"index":532},{"krate":0,"index":1041},{"krate":0,"index":1119},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":3355},{"krate":0,"index":3362},{"krate":0,"index":3369},{"krate":0,"index":3352},{"krate":0,"index":3458},{"krate":0,"index":3463},{"krate":0,"index":3470},{"krate":0,"index":3450},{"krate":0,"index":3453},{"krate":0,"index":3455},{"krate":0,"index":3539},{"krate":0,"index":3543},{"krate":0,"index":3550},{"krate":0,"index":3518},{"krate":0,"index":3521},{"krate":0,"index":3524},{"krate":0,"index":3526},{"krate":0,"index":3530},{"krate":0,"index":3532},{"krate":0,"index":3535},{"krate":0,"index":3610},{"krate":0,"index":3612},{"krate":0,"index":3626},{"krate":0,"index":3596},{"krate":0,"index":3598},{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3604},{"krate":0,"index":3605},{"krate":0,"index":3607},{"krate":0,"index":1193},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1205}],"decl_id":null,"docs":" *Disclaimer*: This is not an official Google product.","sig":null,"attributes":[{"value":"/ *Disclaimer*: This is not an official Google product.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":182,"byte_end":239,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":240,"byte_end":243,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ tarpc is an RPC framework for rust with a focus on ease of use. Defining a","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":244,"byte_end":322,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ service can be done in just a few lines of code, and most of the boilerplate of","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":323,"byte_end":406,"line_start":9,"line_end":9,"column_start":1,"column_end":84}},{"value":"/ writing a server is taken care of for you.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":407,"byte_end":453,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":454,"byte_end":457,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [Documentation](https://docs.rs/crate/tarpc/)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":458,"byte_end":507,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":508,"byte_end":511,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## What is an RPC framework?","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":512,"byte_end":544,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/ \"RPC\" stands for \"Remote Procedure Call,\" a function call where the work of","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":545,"byte_end":624,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ producing the return value is being done somewhere else. When an rpc function is","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":625,"byte_end":709,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ invoked, behind the scenes the function contacts some other process somewhere","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":710,"byte_end":791,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ and asks them to evaluate the function instead. The original function then","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":792,"byte_end":870,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ returns the value produced by the other process.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":871,"byte_end":923,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":924,"byte_end":927,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ RPC frameworks are a fundamental building block of most microservices-oriented","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":928,"byte_end":1010,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/ architectures. Two well-known ones are [gRPC](http://www.grpc.io) and","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1011,"byte_end":1084,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ [Cap'n Proto](https://capnproto.org/).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1085,"byte_end":1127,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1128,"byte_end":1131,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ tarpc differentiates itself from other RPC frameworks by defining the schema in code,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1132,"byte_end":1221,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ rather than in a separate language such as .proto. This means there's no separate compilation","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1222,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ process, and no context switching between different languages.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1320,"byte_end":1386,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1387,"byte_end":1390,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Some other features of tarpc:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1391,"byte_end":1424,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ - Pluggable transport: any type impling `Stream<Item = Request> + Sink<Response>` can be","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1425,"byte_end":1517,"line_start":30,"line_end":30,"column_start":1,"column_end":93}},{"value":"/   used as a transport to connect the client and server.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1518,"byte_end":1577,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ - `Send + 'static` optional: if the transport doesn't require it, neither does tarpc!","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1578,"byte_end":1667,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/ - Cascading cancellation: dropping a request will send a cancellation message to the server.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1668,"byte_end":1764,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/   The server will cease any unfinished work on the request, subsequently cancelling any of its","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1765,"byte_end":1863,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/   own requests, repeating for the entire chain of transitive dependencies.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1864,"byte_end":1942,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ - Configurable deadlines and deadline propagation: request deadlines default to 10s if","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":1943,"byte_end":2033,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/   unspecified. The server will automatically cease work when the deadline has passed. Any","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":2034,"byte_end":2127,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/   requests sent by the server that use the request context will propagate the request deadline.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":2128,"byte_end":2227,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/   For example, if a server is handling a request with a 10s deadline, does 2s of work, then","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":2228,"byte_end":2323,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/   sends a request to another server, that server will see an 8s deadline.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":2324,"byte_end":2401,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ - Distributed tracing: tarpc is instrumented with","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":2402,"byte_end":2455,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/   [tracing](https://github.com/tokio-rs/tracing) primitives extended with","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":2456,"byte_end":2533,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/   [OpenTelemetry](https://opentelemetry.io/) traces. Using a compatible tracing subscriber like","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":2534,"byte_end":2633,"line_start":43,"line_end":43,"column_start":1,"column_end":100}},{"value":"/   [Jaeger](https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-jaeger),","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":2634,"byte_end":2734,"line_start":44,"line_end":44,"column_start":1,"column_end":101}},{"value":"/   each RPC can be traced through the client, server, amd other dependencies downstream of the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":2735,"byte_end":2832,"line_start":45,"line_end":45,"column_start":1,"column_end":98}},{"value":"/   server. Even for applications not connected to a distributed tracing collector, the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":2833,"byte_end":2922,"line_start":46,"line_end":46,"column_start":1,"column_end":90}},{"value":"/   instrumentation can also be ingested by regular loggers like","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":2923,"byte_end":2989,"line_start":47,"line_end":47,"column_start":1,"column_end":67}},{"value":"/   [env_logger](https://github.com/env-logger-rs/env_logger/).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":2990,"byte_end":3055,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/ - Serde serialization: enabling the `serde1` Cargo feature will make service requests and","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3056,"byte_end":3149,"line_start":49,"line_end":49,"column_start":1,"column_end":94}},{"value":"/   responses `Serialize + Deserialize`. It's entirely optional, though: in-memory transports can","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3150,"byte_end":3249,"line_start":50,"line_end":50,"column_start":1,"column_end":100}},{"value":"/   be used, as well, so the price of serialization doesn't have to be paid when it's not needed.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3250,"byte_end":3349,"line_start":51,"line_end":51,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3350,"byte_end":3353,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3354,"byte_end":3366,"line_start":53,"line_end":53,"column_start":1,"column_end":13}},{"value":"/ Add to your `Cargo.toml` dependencies:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3367,"byte_end":3409,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3410,"byte_end":3413,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3414,"byte_end":3425,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ tarpc = \"0.26\"","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3426,"byte_end":3444,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3445,"byte_end":3452,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3453,"byte_end":3456,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The `tarpc::service` attribute expands to a collection of items that form an rpc service.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3457,"byte_end":3550,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/ These generated types make it easy and ergonomic to write servers with less boilerplate.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3551,"byte_end":3643,"line_start":61,"line_end":61,"column_start":1,"column_end":93}},{"value":"/ Simply implement the generated service trait, and you're off to the races!","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3644,"byte_end":3722,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3723,"byte_end":3726,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3727,"byte_end":3741,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3742,"byte_end":3745,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This example uses [tokio](https://tokio.rs), so add the following dependencies to","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3746,"byte_end":3831,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ your `Cargo.toml`:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3832,"byte_end":3854,"line_start":67,"line_end":67,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3855,"byte_end":3858,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3859,"byte_end":3870,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ futures = \"1.0\"","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3871,"byte_end":3890,"line_start":70,"line_end":70,"column_start":1,"column_end":20}},{"value":"/ tarpc = { version = \"0.26\", features = [\"tokio1\"] }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3891,"byte_end":3946,"line_start":71,"line_end":71,"column_start":1,"column_end":56}},{"value":"/ tokio = { version = \"1.0\", features = [\"macros\"] }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":3947,"byte_end":4001,"line_start":72,"line_end":72,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4002,"byte_end":4009,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4010,"byte_end":4013,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ In the following example, we use an in-process channel for communication between","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4014,"byte_end":4098,"line_start":75,"line_end":75,"column_start":1,"column_end":85}},{"value":"/ client and server. In real code, you will likely communicate over the network.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4099,"byte_end":4181,"line_start":76,"line_end":76,"column_start":1,"column_end":83}},{"value":"/ For a more real-world example, see [example-service](example-service).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4182,"byte_end":4256,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4257,"byte_end":4260,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ First, let's set up the dependencies and service definition.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4261,"byte_end":4325,"line_start":79,"line_end":79,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4326,"byte_end":4329,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4330,"byte_end":4341,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4342,"byte_end":4369,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4370,"byte_end":4373,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ use futures::{","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4374,"byte_end":4392,"line_start":84,"line_end":84,"column_start":1,"column_end":19}},{"value":"/     future::{self, Ready},","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4393,"byte_end":4423,"line_start":85,"line_end":85,"column_start":1,"column_end":31}},{"value":"/     prelude::*,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4424,"byte_end":4443,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4444,"byte_end":4450,"line_start":87,"line_end":87,"column_start":1,"column_end":7}},{"value":"/ use tarpc::{","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4451,"byte_end":4467,"line_start":88,"line_end":88,"column_start":1,"column_end":17}},{"value":"/     client, context,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4468,"byte_end":4492,"line_start":89,"line_end":89,"column_start":1,"column_end":25}},{"value":"/     server::{self, Incoming},","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4493,"byte_end":4526,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/ };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4527,"byte_end":4533,"line_start":91,"line_end":91,"column_start":1,"column_end":7}},{"value":"/ use std::io;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4534,"byte_end":4550,"line_start":92,"line_end":92,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4551,"byte_end":4554,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // This is the service definition. It looks a lot like a trait definition.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4555,"byte_end":4633,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/ // It defines one RPC, hello, which takes one arg, name, and returns a String.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4634,"byte_end":4716,"line_start":95,"line_end":95,"column_start":1,"column_end":83}},{"value":"/ #[tarpc::service]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4717,"byte_end":4738,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/ trait World {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4739,"byte_end":4756,"line_start":97,"line_end":97,"column_start":1,"column_end":18}},{"value":"/     /// Returns a greeting for name.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4757,"byte_end":4797,"line_start":98,"line_end":98,"column_start":1,"column_end":41}},{"value":"/     async fn hello(name: String) -> String;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4798,"byte_end":4845,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4846,"byte_end":4851,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4852,"byte_end":4859,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4860,"byte_end":4863,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ This service definition generates a trait called `World`. Next we need to","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4864,"byte_end":4941,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ implement it for our Server struct.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4942,"byte_end":4981,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4982,"byte_end":4985,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4986,"byte_end":4997,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":4998,"byte_end":5025,"line_start":107,"line_end":107,"column_start":1,"column_end":28}},{"value":"/ # use futures::{","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5026,"byte_end":5046,"line_start":108,"line_end":108,"column_start":1,"column_end":21}},{"value":"/ #     future::{self, Ready},","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5047,"byte_end":5079,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ #     prelude::*,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5080,"byte_end":5101,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/ # };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5102,"byte_end":5110,"line_start":111,"line_end":111,"column_start":1,"column_end":9}},{"value":"/ # use tarpc::{","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5111,"byte_end":5129,"line_start":112,"line_end":112,"column_start":1,"column_end":19}},{"value":"/ #     client, context,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5130,"byte_end":5156,"line_start":113,"line_end":113,"column_start":1,"column_end":27}},{"value":"/ #     server::{self, Incoming},","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5157,"byte_end":5192,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ # };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5193,"byte_end":5201,"line_start":115,"line_end":115,"column_start":1,"column_end":9}},{"value":"/ # use std::io;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5202,"byte_end":5220,"line_start":116,"line_end":116,"column_start":1,"column_end":19}},{"value":"/ # // This is the service definition. It looks a lot like a trait definition.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5221,"byte_end":5301,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ # // It defines one RPC, hello, which takes one arg, name, and returns a String.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5302,"byte_end":5386,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ # #[tarpc::service]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5387,"byte_end":5410,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"/ # trait World {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5411,"byte_end":5430,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/ #     /// Returns a greeting for name.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5431,"byte_end":5473,"line_start":121,"line_end":121,"column_start":1,"column_end":43}},{"value":"/ #     async fn hello(name: String) -> String;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5474,"byte_end":5523,"line_start":122,"line_end":122,"column_start":1,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5524,"byte_end":5531,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/ // This is the type that implements the generated World trait. It is the business logic","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5532,"byte_end":5623,"line_start":124,"line_end":124,"column_start":1,"column_end":92}},{"value":"/ // and is used to start the server.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5624,"byte_end":5663,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5664,"byte_end":5684,"line_start":126,"line_end":126,"column_start":1,"column_end":21}},{"value":"/ struct HelloServer;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5685,"byte_end":5708,"line_start":127,"line_end":127,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5709,"byte_end":5712,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ impl World for HelloServer {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5713,"byte_end":5745,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/     // Each defined rpc generates two items in the trait, a fn that serves the RPC, and","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5746,"byte_end":5837,"line_start":130,"line_end":130,"column_start":1,"column_end":92}},{"value":"/     // an associated type representing the future output by the fn.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5838,"byte_end":5909,"line_start":131,"line_end":131,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5910,"byte_end":5913,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/     type HelloFut = Ready<String>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5914,"byte_end":5952,"line_start":133,"line_end":133,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5953,"byte_end":5956,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/     fn hello(self, _: context::Context, name: String) -> Self::HelloFut {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":5957,"byte_end":6034,"line_start":135,"line_end":135,"column_start":1,"column_end":78}},{"value":"/         future::ready(format!(\"Hello, {}!\", name))","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6035,"byte_end":6089,"line_start":136,"line_end":136,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6090,"byte_end":6099,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6100,"byte_end":6105,"line_start":138,"line_end":138,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6106,"byte_end":6113,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6114,"byte_end":6117,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Lastly let's write our `main` that will start the server. While this example uses an","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6118,"byte_end":6206,"line_start":141,"line_end":141,"column_start":1,"column_end":89}},{"value":"/ [in-process channel](transport::channel), tarpc also ships a generic [`serde_transport`]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6207,"byte_end":6299,"line_start":142,"line_end":142,"column_start":1,"column_end":93}},{"value":"/ behind the `serde-transport` feature, with additional [TCP](serde_transport::tcp) functionality","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6300,"byte_end":6399,"line_start":143,"line_end":143,"column_start":1,"column_end":100}},{"value":"/ available behind the `tcp` feature.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6400,"byte_end":6439,"line_start":144,"line_end":144,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6440,"byte_end":6443,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6444,"byte_end":6455,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6456,"byte_end":6483,"line_start":147,"line_end":147,"column_start":1,"column_end":28}},{"value":"/ # use futures::{","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6484,"byte_end":6504,"line_start":148,"line_end":148,"column_start":1,"column_end":21}},{"value":"/ #     future::{self, Ready},","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6505,"byte_end":6537,"line_start":149,"line_end":149,"column_start":1,"column_end":33}},{"value":"/ #     prelude::*,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6538,"byte_end":6559,"line_start":150,"line_end":150,"column_start":1,"column_end":22}},{"value":"/ # };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6560,"byte_end":6568,"line_start":151,"line_end":151,"column_start":1,"column_end":9}},{"value":"/ # use tarpc::{","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6569,"byte_end":6587,"line_start":152,"line_end":152,"column_start":1,"column_end":19}},{"value":"/ #     client, context,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6588,"byte_end":6614,"line_start":153,"line_end":153,"column_start":1,"column_end":27}},{"value":"/ #     server::{self, Channel},","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6615,"byte_end":6649,"line_start":154,"line_end":154,"column_start":1,"column_end":35}},{"value":"/ # };","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6650,"byte_end":6658,"line_start":155,"line_end":155,"column_start":1,"column_end":9}},{"value":"/ # use std::io;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6659,"byte_end":6677,"line_start":156,"line_end":156,"column_start":1,"column_end":19}},{"value":"/ # // This is the service definition. It looks a lot like a trait definition.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6678,"byte_end":6758,"line_start":157,"line_end":157,"column_start":1,"column_end":81}},{"value":"/ # // It defines one RPC, hello, which takes one arg, name, and returns a String.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6759,"byte_end":6843,"line_start":158,"line_end":158,"column_start":1,"column_end":85}},{"value":"/ # #[tarpc::service]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6844,"byte_end":6867,"line_start":159,"line_end":159,"column_start":1,"column_end":24}},{"value":"/ # trait World {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6868,"byte_end":6887,"line_start":160,"line_end":160,"column_start":1,"column_end":20}},{"value":"/ #     /// Returns a greeting for name.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6888,"byte_end":6930,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/ #     async fn hello(name: String) -> String;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6931,"byte_end":6980,"line_start":162,"line_end":162,"column_start":1,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6981,"byte_end":6988,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ # // This is the type that implements the generated World trait. It is the business logic","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":6989,"byte_end":7082,"line_start":164,"line_end":164,"column_start":1,"column_end":94}},{"value":"/ # // and is used to start the server.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7083,"byte_end":7124,"line_start":165,"line_end":165,"column_start":1,"column_end":42}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7125,"byte_end":7147,"line_start":166,"line_end":166,"column_start":1,"column_end":23}},{"value":"/ # struct HelloServer;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7148,"byte_end":7173,"line_start":167,"line_end":167,"column_start":1,"column_end":26}},{"value":"/ # impl World for HelloServer {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7174,"byte_end":7208,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ #     // Each defined rpc generates two items in the trait, a fn that serves the RPC, and","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7209,"byte_end":7302,"line_start":169,"line_end":169,"column_start":1,"column_end":94}},{"value":"/ #     // an associated type representing the future output by the fn.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7303,"byte_end":7376,"line_start":170,"line_end":170,"column_start":1,"column_end":74}},{"value":"/ #     type HelloFut = Ready<String>;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7377,"byte_end":7417,"line_start":171,"line_end":171,"column_start":1,"column_end":41}},{"value":"/ #     fn hello(self, _: context::Context, name: String) -> Self::HelloFut {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7418,"byte_end":7497,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ #         future::ready(format!(\"Hello, {}!\", name))","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7498,"byte_end":7554,"line_start":173,"line_end":173,"column_start":1,"column_end":57}},{"value":"/ #     }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7555,"byte_end":7566,"line_start":174,"line_end":174,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7567,"byte_end":7574,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"tokio1\"))]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7575,"byte_end":7612,"line_start":176,"line_end":176,"column_start":1,"column_end":38}},{"value":"/ # fn main() {}","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7613,"byte_end":7631,"line_start":177,"line_end":177,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(feature = \"tokio1\")]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7632,"byte_end":7664,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7665,"byte_end":7683,"line_start":179,"line_end":179,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7684,"byte_end":7723,"line_start":180,"line_end":180,"column_start":1,"column_end":40}},{"value":"/     let (client_transport, server_transport) = tarpc::transport::channel::unbounded();","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7724,"byte_end":7814,"line_start":181,"line_end":181,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7815,"byte_end":7818,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/     let server = server::BaseChannel::with_defaults(server_transport);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7819,"byte_end":7893,"line_start":183,"line_end":183,"column_start":1,"column_end":75}},{"value":"/     tokio::spawn(server.execute(HelloServer.serve()));","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7894,"byte_end":7952,"line_start":184,"line_end":184,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7953,"byte_end":7956,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     // WorldClient is generated by the #[tarpc::service] attribute. It has a constructor `new`","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":7957,"byte_end":8055,"line_start":186,"line_end":186,"column_start":1,"column_end":99}},{"value":"/     // that takes a config and any Transport as input.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8056,"byte_end":8114,"line_start":187,"line_end":187,"column_start":1,"column_end":59}},{"value":"/     let mut client = WorldClient::new(client::Config::default(), client_transport).spawn();","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8115,"byte_end":8210,"line_start":188,"line_end":188,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8211,"byte_end":8214,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/     // The client has an RPC method for each RPC defined in the annotated trait. It takes the same","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8215,"byte_end":8317,"line_start":190,"line_end":190,"column_start":1,"column_end":103}},{"value":"/     // args as defined, with the addition of a Context, which is always the first arg. The Context","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8318,"byte_end":8420,"line_start":191,"line_end":191,"column_start":1,"column_end":103}},{"value":"/     // specifies a deadline and trace information which can be helpful in debugging requests.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8421,"byte_end":8518,"line_start":192,"line_end":192,"column_start":1,"column_end":98}},{"value":"/     let hello = client.hello(context::current(), \"Stim\".to_string()).await?;","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8519,"byte_end":8599,"line_start":193,"line_end":193,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8600,"byte_end":8603,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", hello);","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8604,"byte_end":8634,"line_start":195,"line_end":195,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8635,"byte_end":8638,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8639,"byte_end":8653,"line_start":197,"line_end":197,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8654,"byte_end":8659,"line_start":198,"line_end":198,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8660,"byte_end":8667,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8668,"byte_end":8671,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ## Service Documentation","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8672,"byte_end":8700,"line_start":201,"line_end":201,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8701,"byte_end":8704,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Use `cargo doc` as you normally would to see the documentation created for all","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8705,"byte_end":8787,"line_start":203,"line_end":203,"column_start":1,"column_end":83}},{"value":"/ items expanded by a `service!` invocation.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8788,"byte_end":8834,"line_start":204,"line_end":204,"column_start":1,"column_end":47}},{"value":"deny(missing_docs)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8835,"byte_end":8857,"line_start":205,"line_end":205,"column_start":1,"column_end":23}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":8858,"byte_end":8892,"line_start":206,"line_end":206,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serde_transport","qualname":"::serde_transport","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":1281},{"krate":0,"index":1217},{"krate":0,"index":52},{"krate":0,"index":58},{"krate":0,"index":68},{"krate":0,"index":83},{"krate":0,"index":89},{"krate":0,"index":96}],"decl_id":null,"docs":" A generic Serde-based `Transport` that can serialize anything supported by `tokio-serde` via any medium that implements `AsyncRead` and `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"serde-transport\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":9049,"byte_end":9084,"line_start":216,"line_end":216,"column_start":1,"column_end":36}},{"value":"/ A generic Serde-based `Transport` that can serialize anything supported by `tokio-serde` via any medium that implements `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":15974,"byte_end":16127,"line_start":7,"line_end":7,"column_start":1,"column_end":154}},{"value":"deny(missing_docs)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":16129,"byte_end":16151,"line_start":9,"line_end":9,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1281},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":16554,"byte_end":16563,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"Transport","qualname":"::serde_transport::Transport","value":"Transport {  }","parent":null,"children":[{"krate":0,"index":1286}],"decl_id":null,"docs":" A transport that serializes to, and deserializes from, a byte stream.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":16528,"byte_end":16542,"line_start":20,"line_end":20,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1247},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":16554,"byte_end":16563,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"__Transport","qualname":"::serde_transport::_::__Transport","value":"__Transport {  }","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":16528,"byte_end":16542,"line_start":20,"line_end":20,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":16845,"byte_end":16852,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Transport<S, Item, SinkItem, Codec>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner transport over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner transport over which messages are sent and received.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":16759,"byte_end":16833,"line_start":27,"line_end":27,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":19392,"byte_end":19395,"line_start":103,"line_end":103,"column_start":8,"column_end":11},"name":"new","qualname":"::serde_transport::new","value":"pub fn new<S, Item, SinkItem, Codec>(Framed<S, LengthDelimitedCodec>, Codec)\n-> Transport<S, Item, SinkItem, Codec> where S: AsyncWrite + AsyncRead,\nItem: for<'de> Deserialize, SinkItem: Serialize, Codec: Serializer<SinkItem> +\nDeserializer<Item>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new transport from a framed transport and a serialization codec.\n","sig":null,"attributes":[{"value":"/ Constructs a new transport from a framed transport and a serialization codec.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":19303,"byte_end":19384,"line_start":102,"line_end":102,"column_start":1,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":96},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":20255,"byte_end":20258,"line_start":133,"line_end":133,"column_start":9,"column_end":12},"name":"tcp","qualname":"::serde_transport::tcp","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":129},{"krate":0,"index":1357},{"krate":0,"index":1287},{"krate":0,"index":135},{"krate":0,"index":144},{"krate":0,"index":151},{"krate":0,"index":159},{"krate":0,"index":1443},{"krate":0,"index":1372},{"krate":0,"index":1366},{"krate":0,"index":168},{"krate":0,"index":176}],"decl_id":null,"docs":" TCP support for generic transport using Tokio.\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":20125,"byte_end":20148,"line_start":130,"line_end":130,"column_start":1,"column_end":24}},{"value":"/ TCP support for generic transport using Tokio.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":20196,"byte_end":20246,"line_start":132,"line_end":132,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":20810,"byte_end":20819,"line_start":152,"line_end":152,"column_start":16,"column_end":25},"name":"peer_addr","qualname":"<Transport<TcpStream, Item, SinkItem, Codec>>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address of the underlying TcpStream.\n","sig":null,"attributes":[{"value":"/ Returns the peer address of the underlying TcpStream.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":20737,"byte_end":20794,"line_start":151,"line_end":151,"column_start":9,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":21002,"byte_end":21012,"line_start":156,"line_end":156,"column_start":16,"column_end":26},"name":"local_addr","qualname":"<Transport<TcpStream, Item, SinkItem, Codec>>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address of the underlying TcpStream.\n","sig":null,"attributes":[{"value":"/ Returns the local address of the underlying TcpStream.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":20928,"byte_end":20986,"line_start":155,"line_end":155,"column_start":9,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1357},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":21238,"byte_end":21245,"line_start":163,"line_end":163,"column_start":16,"column_end":23},"name":"Connect","qualname":"::serde_transport::tcp::Connect","value":"Connect {  }","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364}],"decl_id":null,"docs":" A connection Future that also exposes the length-delimited framing config.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":21208,"byte_end":21222,"line_start":162,"line_end":162,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":21238,"byte_end":21245,"line_start":163,"line_end":163,"column_start":16,"column_end":23},"name":"__Connect","qualname":"::serde_transport::tcp::_::__Connect","value":"__Connect {  }","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":21208,"byte_end":21222,"line_start":162,"line_end":162,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":22266,"byte_end":22272,"line_start":189,"line_end":189,"column_start":16,"column_end":22},"name":"config","qualname":"<Connect<T, Item, SinkItem, CodecFn>>::config","value":"pub fn config(&Self) -> &length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns an immutable reference to the length-delimited codec's config.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":22176,"byte_end":22250,"line_start":188,"line_end":188,"column_start":9,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":22443,"byte_end":22453,"line_start":194,"line_end":194,"column_start":16,"column_end":26},"name":"config_mut","qualname":"<Connect<T, Item, SinkItem, CodecFn>>::config_mut","value":"pub fn config_mut(&mut Self) -> &mut length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the length-delimited codec's config.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":22356,"byte_end":22427,"line_start":193,"line_end":193,"column_start":9,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":151},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":22630,"byte_end":22637,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"connect","qualname":"::serde_transport::tcp::connect","value":"pub fn connect<A, Item, SinkItem, Codec, CodecFn>(A, CodecFn)\n-> Connect</*impl Trait*/, Item, SinkItem, CodecFn> where A: ToSocketAddrs,\nItem: for<'de> Deserialize, SinkItem: Serialize, Codec: Serializer<SinkItem> +\nDeserializer<Item>, CodecFn: Fn() -> Codec","parent":null,"children":[],"decl_id":null,"docs":" Connects to `addr`, wrapping the connection in a TCP transport.\n","sig":null,"attributes":[{"value":"/ Connects to `addr`, wrapping the connection in a TCP transport.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":22551,"byte_end":22618,"line_start":199,"line_end":199,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":159},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":23287,"byte_end":23293,"line_start":220,"line_end":220,"column_start":18,"column_end":24},"name":"listen","qualname":"::serde_transport::tcp::listen","value":"pub async fn listen<A, Item, SinkItem, Codec, CodecFn>(A, CodecFn)\n-> /*impl Trait*/ where A: ToSocketAddrs, Item: for<'de> Deserialize,\nCodec: Serializer<SinkItem> + Deserializer<Item>, CodecFn: Fn() -> Codec","parent":null,"children":[],"decl_id":null,"docs":" Listens on `addr`, wrapping accepted connections in TCP transports.\n","sig":null,"attributes":[{"value":"/ Listens on `addr`, wrapping accepted connections in TCP transports.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":23198,"byte_end":23269,"line_start":219,"line_end":219,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1443},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":24038,"byte_end":24046,"line_start":244,"line_end":244,"column_start":16,"column_end":24},"name":"Incoming","qualname":"::serde_transport::tcp::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452}],"decl_id":null,"docs":" A [`TcpListener`] that wraps connections in [transports](Transport).\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":23987,"byte_end":24001,"line_start":242,"line_end":242,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1410},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":24038,"byte_end":24046,"line_start":244,"line_end":244,"column_start":16,"column_end":24},"name":"__Incoming","qualname":"::serde_transport::tcp::_::__Incoming","value":"__Incoming {  }","parent":null,"children":[{"krate":0,"index":1416}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":23987,"byte_end":24001,"line_start":242,"line_end":242,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":24436,"byte_end":24446,"line_start":254,"line_end":254,"column_start":16,"column_end":26},"name":"local_addr","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn>>::local_addr","value":"pub fn local_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address being listened on.\n","sig":null,"attributes":[{"value":"/ Returns the address being listened on.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":24378,"byte_end":24420,"line_start":253,"line_end":253,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":24607,"byte_end":24613,"line_start":259,"line_end":259,"column_start":16,"column_end":22},"name":"config","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn>>::config","value":"pub fn config(&Self) -> &length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns an immutable reference to the length-delimited codec's config.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":24517,"byte_end":24591,"line_start":258,"line_end":258,"column_start":9,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":24784,"byte_end":24794,"line_start":264,"line_end":264,"column_start":16,"column_end":26},"name":"config_mut","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn>>::config_mut","value":"pub fn config_mut(&mut Self) -> &mut length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the length-delimited codec's config.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":24697,"byte_end":24768,"line_start":263,"line_end":263,"column_start":9,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":184},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"trace","qualname":"::trace","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":1470},{"krate":0,"index":1474},{"krate":0,"index":1480},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1469},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1556},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1537},{"krate":0,"index":1539},{"krate":0,"index":1601},{"krate":0,"index":1604},{"krate":0,"index":1610},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1643},{"krate":0,"index":1650},{"krate":0,"index":1656},{"krate":0,"index":1629},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1640},{"krate":0,"index":1642},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255}],"decl_id":null,"docs":" Provides building blocks for tracing distributed programs.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":29515,"byte_end":29568,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/ Provides building blocks for tracing distributed programs.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":29570,"byte_end":29632,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":29633,"byte_end":29636,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A trace is logically a tree of causally-related events called spans. Traces are tracked via a","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":29637,"byte_end":29734,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ [context](Context) that identifies the current trace, span, and parent of the current span.  In","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":29735,"byte_end":29834,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ distributed systems, a context can be sent from client to server to connect events occurring on","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":29835,"byte_end":29934,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ either side.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":29935,"byte_end":29951,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":29952,"byte_end":29955,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate's design is based on [opencensus","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":29956,"byte_end":30003,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/ tracing](https://opencensus.io/core-concepts/tracing/).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":30004,"byte_end":30063,"line_start":17,"line_end":17,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1470},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":30696,"byte_end":30703,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Context","qualname":"::trace::Context","value":"Context { trace_id, span_id, sampling_decision }","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473}],"decl_id":null,"docs":" A context for tracing the execution of processes, distributed or otherwise.","sig":null,"attributes":[{"value":"/ A context for tracing the execution of processes, distributed or otherwise.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":30273,"byte_end":30352,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":30353,"byte_end":30356,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Consists of a span identifying an event, an optional parent span identifying a causal event","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":30357,"byte_end":30452,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/ that triggered the current span, and a trace with which all related spans are associated.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":30453,"byte_end":30546,"line_start":31,"line_end":31,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1471},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":30885,"byte_end":30893,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"name":"trace_id","qualname":"::trace::Context::trace_id","value":"trace::TraceId","parent":{"krate":0,"index":1470},"children":[],"decl_id":null,"docs":" An identifier of the trace associated with the current context. A trace ID is typically\n created at a root span and passed along through all causal events.\n","sig":null,"attributes":[{"value":"/ An identifier of the trace associated with the current context. A trace ID is typically","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":30710,"byte_end":30801,"line_start":35,"line_end":35,"column_start":5,"column_end":96}},{"value":"/ created at a root span and passed along through all causal events.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":30806,"byte_end":30876,"line_start":36,"line_end":36,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1472},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":31184,"byte_end":31191,"line_start":41,"line_end":41,"column_start":9,"column_end":16},"name":"span_id","qualname":"::trace::Context::span_id","value":"trace::SpanId","parent":{"krate":0,"index":1470},"children":[],"decl_id":null,"docs":" An identifier of the current span. In typical RPC usage, a span is created by a client\n before making an RPC, and the span ID is sent to the server. The server is free to create\n its own spans, for which it sets the client's span as the parent span.\n","sig":null,"attributes":[{"value":"/ An identifier of the current span. In typical RPC usage, a span is created by a client","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":30908,"byte_end":30998,"line_start":38,"line_end":38,"column_start":5,"column_end":95}},{"value":"/ before making an RPC, and the span ID is sent to the server. The server is free to create","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":31003,"byte_end":31096,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ its own spans, for which it sets the client's span as the parent span.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":31101,"byte_end":31175,"line_start":40,"line_end":40,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1473},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":31865,"byte_end":31882,"line_start":49,"line_end":49,"column_start":9,"column_end":26},"name":"sampling_decision","qualname":"::trace::Context::sampling_decision","value":"trace::SamplingDecision","parent":{"krate":0,"index":1470},"children":[],"decl_id":null,"docs":" Indicates whether a sampler has already decided whether or not to sample the trace\n associated with the Context. If `sampling_decision` is None, then a decision has not yet\n been made. Downstream samplers do not need to abide by \"no sample\" decisions--for example,\n an upstream client may choose to never sample, which may not make sense for the client's\n dependencies. On the other hand, if an upstream process has chosen to sample this trace,\n then the downstream samplers are expected to respect that decision and also sample the\n trace. Otherwise, the full trace would not be able to be reconstructed.\n","sig":null,"attributes":[{"value":"/ Indicates whether a sampler has already decided whether or not to sample the trace","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":31205,"byte_end":31291,"line_start":42,"line_end":42,"column_start":5,"column_end":91}},{"value":"/ associated with the Context. If `sampling_decision` is None, then a decision has not yet","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":31296,"byte_end":31388,"line_start":43,"line_end":43,"column_start":5,"column_end":97}},{"value":"/ been made. Downstream samplers do not need to abide by \"no sample\" decisions--for example,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":31393,"byte_end":31487,"line_start":44,"line_end":44,"column_start":5,"column_end":99}},{"value":"/ an upstream client may choose to never sample, which may not make sense for the client's","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":31492,"byte_end":31584,"line_start":45,"line_end":45,"column_start":5,"column_end":97}},{"value":"/ dependencies. On the other hand, if an upstream process has chosen to sample this trace,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":31589,"byte_end":31681,"line_start":46,"line_end":46,"column_start":5,"column_end":97}},{"value":"/ then the downstream samplers are expected to respect that decision and also sample the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":31686,"byte_end":31776,"line_start":47,"line_end":47,"column_start":5,"column_end":95}},{"value":"/ trace. Otherwise, the full trace would not be able to be reconstructed.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":31781,"byte_end":31856,"line_start":48,"line_end":48,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1540},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":32162,"byte_end":32169,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"TraceId","qualname":"::trace::TraceId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 128-bit UUID identifying a trace. All spans caused by the same originating span share the\n same trace ID.\n","sig":null,"attributes":[{"value":"/ A 128-bit UUID identifying a trace. All spans caused by the same originating span share the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":31905,"byte_end":32000,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/ same trace ID.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":32001,"byte_end":32019,"line_start":53,"line_end":53,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1601},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":32480,"byte_end":32486,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"SpanId","qualname":"::trace::SpanId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 64-bit identifier of a span within a trace. The identifier is unique within the span's trace.\n","sig":null,"attributes":[{"value":"/ A 64-bit identifier of a span within a trace. The identifier is unique within the span's trace.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":32238,"byte_end":32337,"line_start":58,"line_end":58,"column_start":1,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1644},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":33320,"byte_end":33327,"line_start":74,"line_end":74,"column_start":5,"column_end":12},"name":"Sampled","qualname":"::trace::SamplingDecision::Sampled","value":"SamplingDecision::Sampled","parent":{"krate":0,"index":1643},"children":[],"decl_id":null,"docs":" The associated span was sampled by its creating process. Child spans must also be sampled.\n","sig":null,"attributes":[{"value":"/ The associated span was sampled by its creating process. Child spans must also be sampled.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":33221,"byte_end":33315,"line_start":73,"line_end":73,"column_start":5,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1647},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":33445,"byte_end":33454,"line_start":76,"line_end":76,"column_start":5,"column_end":14},"name":"Unsampled","qualname":"::trace::SamplingDecision::Unsampled","value":"SamplingDecision::Unsampled","parent":{"krate":0,"index":1643},"children":[],"decl_id":null,"docs":" The associated span was not sampled by its creating process.\n","sig":null,"attributes":[{"value":"/ The associated span was not sampled by its creating process.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":33376,"byte_end":33440,"line_start":75,"line_end":75,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":1643},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":33198,"byte_end":33214,"line_start":72,"line_end":72,"column_start":10,"column_end":26},"name":"SamplingDecision","qualname":"::trace::SamplingDecision","value":"pub enum SamplingDecision { Sampled = , Unsampled = , }","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1647}],"decl_id":null,"docs":" Indicates whether a sampler has decided whether or not to sample the trace associated with the\n Context. Downstream samplers do not need to abide by \"no sample\" decisions--for example, an\n upstream client may choose to never sample, which may not make sense for the client's\n dependencies. On the other hand, if an upstream process has chosen to sample this trace, then\n the downstream samplers are expected to respect that decision and also sample the trace.\n Otherwise, the full trace would not be able to be reconstructed reliably.\n","sig":null,"attributes":[{"value":"/ Indicates whether a sampler has decided whether or not to sample the trace associated with the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":32494,"byte_end":32592,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"/ Context. Downstream samplers do not need to abide by \"no sample\" decisions--for example, an","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":32593,"byte_end":32688,"line_start":64,"line_end":64,"column_start":1,"column_end":96}},{"value":"/ upstream client may choose to never sample, which may not make sense for the client's","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":32689,"byte_end":32778,"line_start":65,"line_end":65,"column_start":1,"column_end":90}},{"value":"/ dependencies. On the other hand, if an upstream process has chosen to sample this trace, then","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":32779,"byte_end":32876,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ the downstream samplers are expected to respect that decision and also sample the trace.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":32877,"byte_end":32969,"line_start":67,"line_end":67,"column_start":1,"column_end":93}},{"value":"/ Otherwise, the full trace would not be able to be reconstructed reliably.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":32970,"byte_end":33047,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"repr(u8)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":33177,"byte_end":33188,"line_start":71,"line_end":71,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34008,"byte_end":34014,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"random","qualname":"<TraceId>::random","value":"pub fn random<R: Rng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a random trace ID that can be assumed to be globally unique if `rng` generates\n actually-random numbers.\n","sig":null,"attributes":[{"value":"/ Returns a random trace ID that can be assumed to be globally unique if `rng` generates","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":33873,"byte_end":33963,"line_start":91,"line_end":91,"column_start":5,"column_end":95}},{"value":"/ actually-random numbers.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":33968,"byte_end":33996,"line_start":92,"line_end":92,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34156,"byte_end":34163,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"is_none","qualname":"<TraceId>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the trace ID is 0.\n","sig":null,"attributes":[{"value":"/ Returns true iff the trace ID is 0.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34105,"byte_end":34144,"line_start":97,"line_end":97,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34324,"byte_end":34330,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"random","qualname":"<SpanId>::random","value":"pub fn random<R: Rng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a random span ID that can be assumed to be unique within a single trace.\n","sig":null,"attributes":[{"value":"/ Returns a random span ID that can be assumed to be unique within a single trace.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34228,"byte_end":34312,"line_start":104,"line_end":104,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34469,"byte_end":34476,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"is_none","qualname":"<SpanId>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the span ID is 0.\n","sig":null,"attributes":[{"value":"/ Returns true iff the span ID is 0.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34419,"byte_end":34457,"line_start":109,"line_end":109,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1695},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":36717,"byte_end":36729,"line_start":205,"line_end":205,"column_start":12,"column_end":24},"name":"NoActiveSpan","qualname":"::trace::NoActiveSpan","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned when a [`Context`] cannot be constructed from a [`Span`](tracing::Span).\n","sig":null,"attributes":[{"value":"/ Returned when a [`Context`] cannot be constructed from a [`Span`](tracing::Span).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":36603,"byte_end":36688,"line_start":203,"line_end":203,"column_start":1,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":270},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1802},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":413},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":1830},{"krate":0,"index":1836},{"krate":0,"index":424},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":1968},{"krate":0,"index":1905},{"krate":0,"index":1900},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1985},{"krate":0,"index":1995},{"krate":0,"index":449},{"krate":0,"index":478},{"krate":0,"index":2186},{"krate":0,"index":2194},{"krate":0,"index":2198},{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2208},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489}],"decl_id":null,"docs":" Provides a client that connects to a server and sends multiplexed requests.\n","sig":null,"attributes":[{"value":"/ Provides a client that connects to a server and sends multiplexed requests.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":38023,"byte_end":38102,"line_start":7,"line_end":7,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1797},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":38652,"byte_end":38658,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"Config","qualname":"::client::Config","value":"Config { max_in_flight_requests, pending_request_buffer }","parent":null,"children":[{"krate":0,"index":1798},{"krate":0,"index":1799}],"decl_id":null,"docs":" Settings that control the behavior of the client.\n","sig":null,"attributes":[{"value":"/ Settings that control the behavior of the client.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":38545,"byte_end":38598,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"non_exhaustive","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":38623,"byte_end":38640,"line_start":30,"line_end":30,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1798},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":38850,"byte_end":38872,"line_start":35,"line_end":35,"column_start":9,"column_end":31},"name":"max_in_flight_requests","qualname":"::client::Config::max_in_flight_requests","value":"usize","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":" The number of requests that can be in flight at once.\n `max_in_flight_requests` controls the size of the map used by the client\n for storing pending requests.\n","sig":null,"attributes":[{"value":"/ The number of requests that can be in flight at once.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":38665,"byte_end":38722,"line_start":32,"line_end":32,"column_start":5,"column_end":62}},{"value":"/ `max_in_flight_requests` controls the size of the map used by the client","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":38727,"byte_end":38803,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ for storing pending requests.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":38808,"byte_end":38841,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1799},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39106,"byte_end":39128,"line_start":39,"line_end":39,"column_start":9,"column_end":31},"name":"pending_request_buffer","qualname":"::client::Config::pending_request_buffer","value":"usize","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":" The number of requests that can be buffered client-side before being sent.\n `pending_requests_buffer` controls the size of the channel clients use\n to communicate with the request dispatch task.\n","sig":null,"attributes":[{"value":"/ The number of requests that can be buffered client-side before being sent.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":38885,"byte_end":38963,"line_start":36,"line_end":36,"column_start":5,"column_end":83}},{"value":"/ `pending_requests_buffer` controls the size of the channel clients use","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":38968,"byte_end":39042,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ to communicate with the request dispatch task.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39047,"byte_end":39097,"line_start":38,"line_end":38,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":408},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39463,"byte_end":39472,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"NewClient","qualname":"::client::NewClient","value":"NewClient { client, dispatch }","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"decl_id":null,"docs":" A channel and dispatch pair. The dispatch drives the sending and receiving of requests\n and must be polled continuously or spawned.\n","sig":null,"attributes":[{"value":"/ A channel and dispatch pair. The dispatch drives the sending and receiving of requests","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39313,"byte_end":39403,"line_start":51,"line_end":51,"column_start":1,"column_end":91}},{"value":"/ and must be polled continuously or spawned.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39404,"byte_end":39451,"line_start":52,"line_end":52,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":411},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39513,"byte_end":39519,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"name":"client","qualname":"::client::NewClient::client","value":"C","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" The new client.\n","sig":null,"attributes":[{"value":"/ The new client.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39485,"byte_end":39504,"line_start":54,"line_end":54,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":412},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39563,"byte_end":39571,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"name":"dispatch","qualname":"::client::NewClient::dispatch","value":"D","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" The client's dispatch.\n","sig":null,"attributes":[{"value":"/ The client's dispatch.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39528,"byte_end":39554,"line_start":56,"line_end":56,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39864,"byte_end":39869,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"spawn","qualname":"<NewClient<C, D>>::spawn","value":"pub fn spawn(Self) -> C","parent":null,"children":[],"decl_id":null,"docs":" Helper method to spawn the dispatch on the default executor.\n","sig":null,"attributes":[{"value":"/ Helper method to spawn the dispatch on the default executor.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39703,"byte_end":39767,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39772,"byte_end":39798,"line_start":66,"line_end":66,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1830},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":40597,"byte_end":40604,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"Channel","qualname":"::client::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835}],"decl_id":null,"docs":" Handles communication from the client to request dispatch.\n","sig":null,"attributes":[{"value":"/ Handles communication from the client to request dispatch.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":40506,"byte_end":40568,"line_start":92,"line_end":92,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":41578,"byte_end":41582,"line_start":123,"line_end":123,"column_start":18,"column_end":22},"name":"call","qualname":"<Channel<Req, Resp>>::call","value":"pub async fn call<'_, '_>(&'_ Self, context::Context, &'_ str, Req)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a request to the dispatch task to forward to the server, returning a [`Future`] that\n resolves to the response.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":445},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":45282,"byte_end":45285,"line_start":209,"line_end":209,"column_start":8,"column_end":11},"name":"new","qualname":"::client::new","value":"pub fn new<Req, Resp, C>(Config, C)\n-> NewClient<Channel<Req, Resp>, RequestDispatch<Req, Resp, C>> where\nC: Transport<ClientMessage<Req>, Response<Resp>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a channel and dispatcher that manages the lifecycle of requests initiated by the\n channel.\n","sig":null,"attributes":[{"value":"/ Returns a channel and dispatcher that manages the lifecycle of requests initiated by the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":45169,"byte_end":45261,"line_start":207,"line_end":207,"column_start":1,"column_end":93}},{"value":"/ channel.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":45262,"byte_end":45274,"line_start":208,"line_end":208,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1968},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":46261,"byte_end":46276,"line_start":240,"line_end":240,"column_start":12,"column_end":27},"name":"RequestDispatch","qualname":"::client::RequestDispatch","value":"RequestDispatch {  }","parent":null,"children":[{"krate":0,"index":1976},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975}],"decl_id":null,"docs":" Handles the lifecycle of requests, writing requests to the wire, managing cancellations,\n and dispatching responses to the appropriate channel.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":46218,"byte_end":46232,"line_start":238,"line_end":238,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1939},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":46261,"byte_end":46276,"line_start":240,"line_end":240,"column_start":12,"column_end":27},"name":"__RequestDispatch","qualname":"::client::_::__RequestDispatch","value":"__RequestDispatch {  }","parent":null,"children":[{"krate":0,"index":1944},{"krate":0,"index":1945}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":46218,"byte_end":46232,"line_start":238,"line_end":238,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1998},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":47105,"byte_end":47114,"line_start":262,"line_end":262,"column_start":5,"column_end":14},"name":"Transport","qualname":"::client::ChannelError::Transport","value":"ChannelError::Transport(E)","parent":{"krate":0,"index":1977},"children":[],"decl_id":null,"docs":" An error occurred reading from, or writing to, the transport.\n","sig":null,"attributes":[{"value":"/ An error occurred reading from, or writing to, the transport.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":46979,"byte_end":47044,"line_start":260,"line_end":260,"column_start":5,"column_end":70}},{"value":"error(\"an error occurred in the transport: {0}\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":47049,"byte_end":47100,"line_start":261,"line_end":261,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2001},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":47261,"byte_end":47266,"line_start":265,"line_end":265,"column_start":5,"column_end":10},"name":"Timer","qualname":"::client::ChannelError::Timer","value":"ChannelError::Timer(tokio::time::error::Error)","parent":{"krate":0,"index":1977},"children":[],"decl_id":null,"docs":" An error occurred while polling expired requests.\n","sig":null,"attributes":[{"value":"/ An error occurred while polling expired requests.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":47133,"byte_end":47186,"line_start":263,"line_end":263,"column_start":5,"column_end":58}},{"value":"error(\"an error occurred while polling expired requests: {0}\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":47191,"byte_end":47256,"line_start":264,"line_end":264,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":1977},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":46913,"byte_end":46925,"line_start":256,"line_end":256,"column_start":10,"column_end":22},"name":"ChannelError","qualname":"::client::ChannelError","value":"pub enum ChannelError<E> where E: Error + Send + Sync + 'static {\n    Transport(E),\n    Timer(tokio::time::error::Error),\n}","parent":null,"children":[{"krate":0,"index":1998},{"krate":0,"index":2001}],"decl_id":null,"docs":" Critical errors that result in a Channel disconnecting.\n","sig":null,"attributes":[{"value":"/ Critical errors that result in a Channel disconnecting.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":46809,"byte_end":46868,"line_start":254,"line_end":254,"column_start":1,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":492},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"context","qualname":"::context","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2223},{"krate":0,"index":2210},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2267},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":2271},{"krate":0,"index":2274},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":528},{"krate":0,"index":530}],"decl_id":null,"docs":" Provides a request context that carries a deadline and trace context. This context is sent from\n client to server and is used by the server to enforce response deadlines.\n","sig":null,"attributes":[{"value":"/ Provides a request context that carries a deadline and trace context. This context is sent from","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":73306,"byte_end":73405,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ client to server and is used by the server to enforce response deadlines.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":73406,"byte_end":73483,"line_start":8,"line_end":8,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2215},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74201,"byte_end":74208,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context { deadline, trace_context }","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2216}],"decl_id":null,"docs":" A request context that carries request-scoped information like deadlines and trace information.\n It is sent from client to server and is used by the server to enforce response deadlines.","sig":null,"attributes":[{"value":"/ A request context that carries request-scoped information like deadlines and trace information.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":73723,"byte_end":73822,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"/ It is sent from client to server and is used by the server to enforce response deadlines.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":73823,"byte_end":73916,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":73917,"byte_end":73920,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The context should not be stored directly in a server implementation, because the context will","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":73921,"byte_end":74019,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ be different for each request in scope.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74020,"byte_end":74063,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"non_exhaustive","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74094,"byte_end":74111,"line_start":25,"line_end":25,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2266},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74440,"byte_end":74448,"line_start":31,"line_end":31,"column_start":9,"column_end":17},"name":"deadline","qualname":"::context::Context::deadline","value":"std::time::SystemTime","parent":{"krate":0,"index":2215},"children":[],"decl_id":null,"docs":" When the client expects the request to be complete by. The server should cancel the request\n if it is not complete by this time.\n","sig":null,"attributes":[{"value":"/ When the client expects the request to be complete by. The server should cancel the request","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74215,"byte_end":74310,"line_start":28,"line_end":28,"column_start":5,"column_end":100}},{"value":"/ if it is not complete by this time.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74315,"byte_end":74354,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"serde(default = \"ten_seconds_from_now\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74390,"byte_end":74429,"line_start":30,"line_end":30,"column_start":36,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":2216},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74788,"byte_end":74801,"line_start":36,"line_end":36,"column_start":9,"column_end":22},"name":"trace_context","qualname":"::context::Context::trace_context","value":"trace::Context","parent":{"krate":0,"index":2215},"children":[],"decl_id":null,"docs":" Uniquely identifies requests originating from the same source.\n When a service handles a request by making requests itself, those requests should\n include the same `trace_id` as that included on the original request. This way,\n users can trace related actions across a distributed system.\n","sig":null,"attributes":[{"value":"/ Uniquely identifies requests originating from the same source.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74466,"byte_end":74532,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ When a service handles a request by making requests itself, those requests should","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74537,"byte_end":74622,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ include the same `trace_id` as that included on the original request. This way,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74627,"byte_end":74710,"line_start":34,"line_end":34,"column_start":5,"column_end":88}},{"value":"/ users can trace related actions across a distributed system.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74715,"byte_end":74779,"line_start":35,"line_end":35,"column_start":5,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":521},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":75057,"byte_end":75064,"line_start":46,"line_end":46,"column_start":8,"column_end":15},"name":"current","qualname":"::context::current","value":"pub fn current() -> Context","parent":null,"children":[],"decl_id":null,"docs":" Returns the context for the current request, or a default Context if no request is active.\n","sig":null,"attributes":[{"value":"/ Returns the context for the current request, or a default Context if no request is active.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":74955,"byte_end":75049,"line_start":45,"line_end":45,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":75379,"byte_end":75386,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"current","qualname":"<Context>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the context for the current request, or a default Context if no request is active.\n","sig":null,"attributes":[{"value":"/ Returns the context for the current request, or a default Context if no request is active.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":75273,"byte_end":75367,"line_start":60,"line_end":60,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":75834,"byte_end":75842,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"trace_id","qualname":"<Context>::trace_id","value":"pub fn trace_id(&Self) -> &TraceId","parent":null,"children":[],"decl_id":null,"docs":" Returns the ID of the request-scoped trace.\n","sig":null,"attributes":[{"value":"/ Returns the ID of the request-scoped trace.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":75775,"byte_end":75822,"line_start":75,"line_end":75,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":532},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":748},{"krate":0,"index":800},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":2711},{"krate":0,"index":2713},{"krate":0,"index":2715},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":894},{"krate":0,"index":900},{"krate":0,"index":908},{"krate":0,"index":916},{"krate":0,"index":2778},{"krate":0,"index":2717},{"krate":0,"index":919},{"krate":0,"index":931},{"krate":0,"index":936},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2794},{"krate":0,"index":2804},{"krate":0,"index":948},{"krate":0,"index":962},{"krate":0,"index":971},{"krate":0,"index":976},{"krate":0,"index":2906},{"krate":0,"index":2865},{"krate":0,"index":987},{"krate":0,"index":999},{"krate":0,"index":3017},{"krate":0,"index":3024},{"krate":0,"index":1002},{"krate":0,"index":1011},{"krate":0,"index":1015},{"krate":0,"index":3158},{"krate":0,"index":3110},{"krate":0,"index":3106},{"krate":0,"index":3215},{"krate":0,"index":3167},{"krate":0,"index":3163},{"krate":0,"index":1019},{"krate":0,"index":1024},{"krate":0,"index":1029},{"krate":0,"index":1035}],"decl_id":null,"docs":" Provides a server that concurrently handles many connections sending multiplexed requests.\n","sig":null,"attributes":[{"value":"/ Provides a server that concurrently handles many connections sending multiplexed requests.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":77033,"byte_end":77127,"line_start":7,"line_end":7,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":2346},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":115260,"byte_end":115273,"line_start":25,"line_end":25,"column_start":12,"column_end":25},"name":"ChannelFilter","qualname":"::server::filter::ChannelFilter","value":"ChannelFilter {  }","parent":null,"children":[{"krate":0,"index":2355},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354}],"decl_id":null,"docs":" A single-threaded filter that drops channels based on per-key limits.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":115217,"byte_end":115231,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2317},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":115260,"byte_end":115273,"line_start":25,"line_end":25,"column_start":12,"column_end":25},"name":"__ChannelFilter","qualname":"::server::filter::_::__ChannelFilter","value":"__ChannelFilter {  }","parent":null,"children":[{"krate":0,"index":2322},{"krate":0,"index":2323}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":115217,"byte_end":115231,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2408},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":115625,"byte_end":115639,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"TrackedChannel","qualname":"::server::filter::TrackedChannel","value":"TrackedChannel {  }","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2411}],"decl_id":null,"docs":" A channel that is tracked by a ChannelFilter.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":115582,"byte_end":115596,"line_start":39,"line_end":39,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2384},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":115625,"byte_end":115639,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"__TrackedChannel","qualname":"::server::filter::_::__TrackedChannel","value":"__TrackedChannel {  }","parent":null,"children":[{"krate":0,"index":2388},{"krate":0,"index":2389}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":115582,"byte_end":115596,"line_start":39,"line_end":39,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":117794,"byte_end":117801,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TrackedChannel<C, K>>::get_ref","value":"pub fn get_ref(&Self) -> &C","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":117752,"byte_end":117782,"line_start":131,"line_end":131,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2537},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/in_flight_requests.rs","byte_start":129806,"byte_end":129824,"line_start":34,"line_end":34,"column_start":12,"column_end":30},"name":"AlreadyExistsError","qualname":"::server::in_flight_requests::AlreadyExistsError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned when a request attempted to start with the same ID as a request already\n in flight.\n","sig":null,"attributes":[{"value":"/ An error returned when a request attempted to start with the same ID as a request already","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/in_flight_requests.rs","byte_start":129669,"byte_end":129762,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ in flight.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/in_flight_requests.rs","byte_start":129763,"byte_end":129777,"line_start":32,"line_end":32,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2635},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136009,"byte_end":136018,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"Throttler","qualname":"::server::throttle::Throttler","value":"Throttler {  }","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2638}],"decl_id":null,"docs":" A [`Channel`] that limits the number of concurrent\n requests by throttling.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":135966,"byte_end":135980,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2616},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136009,"byte_end":136018,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"__Throttler","qualname":"::server::throttle::_::__Throttler","value":"__Throttler {  }","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2620}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":135966,"byte_end":135980,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136156,"byte_end":136163,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttler<C>>::get_ref","value":"pub fn get_ref(&Self) -> &C","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136114,"byte_end":136144,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136395,"byte_end":136398,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Throttler<C>>::new","value":"pub fn new(C, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Throttler` that wraps the given channel and limits concurrent requests to\n `max_in_flight_requests`.\n","sig":null,"attributes":[{"value":"/ Returns a new `Throttler` that wraps the given channel and limits concurrent requests to","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136257,"byte_end":136349,"line_start":35,"line_end":35,"column_start":5,"column_end":97}},{"value":"/ `max_in_flight_requests`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136354,"byte_end":136383,"line_start":36,"line_end":36,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2707},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":139476,"byte_end":139491,"line_start":145,"line_end":145,"column_start":12,"column_end":27},"name":"ThrottlerStream","qualname":"::server::throttle::ThrottlerStream","value":"ThrottlerStream {  }","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2709}],"decl_id":null,"docs":" A stream of throttling channels.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":139433,"byte_end":139447,"line_start":143,"line_end":143,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2688},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":139476,"byte_end":139491,"line_start":145,"line_end":145,"column_start":12,"column_end":27},"name":"__ThrottlerStream","qualname":"::server::throttle::_::__ThrottlerStream","value":"__ThrottlerStream {  }","parent":null,"children":[{"krate":0,"index":2691},{"krate":0,"index":2692}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":139433,"byte_end":139447,"line_start":143,"line_end":143,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2711},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":77911,"byte_end":77917,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Config","qualname":"::server::Config","value":"Config { pending_response_buffer }","parent":null,"children":[{"krate":0,"index":2712}],"decl_id":null,"docs":" Settings that control the behavior of [channels](Channel).\n","sig":null,"attributes":[{"value":"/ Settings that control the behavior of [channels](Channel).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":77813,"byte_end":77875,"line_start":40,"line_end":40,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2712},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78192,"byte_end":78215,"line_start":46,"line_end":46,"column_start":9,"column_end":32},"name":"pending_response_buffer","qualname":"::server::Config::pending_response_buffer","value":"usize","parent":{"krate":0,"index":2711},"children":[],"decl_id":null,"docs":" Controls the buffer size of the in-process channel over which a server's handlers send\n responses to the [`Channel`]. In other words, this is the number of responses that can sit\n in the outbound queue before request handlers begin blocking.\n","sig":null,"attributes":[{"value":"/ Controls the buffer size of the in-process channel over which a server's handlers send","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":77924,"byte_end":78014,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"/ responses to the [`Channel`]. In other words, this is the number of responses that can sit","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78019,"byte_end":78113,"line_start":44,"line_end":44,"column_start":5,"column_end":99}},{"value":"/ in the outbound queue before request handlers begin blocking.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78118,"byte_end":78183,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78459,"byte_end":78466,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"channel","qualname":"<Config>::channel","value":"pub fn channel<Req, Resp, T>(Self, T) -> BaseChannel<Req, Resp, T> where\nT: Transport<Response<Resp>, ClientMessage<Req>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a channel backed by `transport` and configured with `self`.\n","sig":null,"attributes":[{"value":"/ Returns a channel backed by `transport` and configured with `self`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78376,"byte_end":78447,"line_start":58,"line_end":58,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":894},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78730,"byte_end":78735,"line_start":68,"line_end":68,"column_start":11,"column_end":16},"name":"Serve","qualname":"::server::Serve","value":"Serve<Req>","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899}],"decl_id":null,"docs":" Equivalent to a `FnOnce(Req) -> impl Future<Output = Resp>`.\n","sig":null,"attributes":[{"value":"/ Equivalent to a `FnOnce(Req) -> impl Future<Output = Resp>`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78655,"byte_end":78719,"line_start":67,"line_end":67,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":896},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78778,"byte_end":78782,"line_start":70,"line_end":70,"column_start":10,"column_end":14},"name":"Resp","qualname":"::server::Serve::Resp","value":"type Resp;","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":" Type of response.\n","sig":null,"attributes":[{"value":"/ Type of response.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78747,"byte_end":78768,"line_start":69,"line_end":69,"column_start":5,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":897},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78827,"byte_end":78830,"line_start":73,"line_end":73,"column_start":10,"column_end":13},"name":"Fut","qualname":"::server::Serve::Fut","value":"type Fut: Future<Output = Self::Resp>;","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":" Type of response future.\n","sig":null,"attributes":[{"value":"/ Type of response future.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78789,"byte_end":78817,"line_start":72,"line_end":72,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78918,"byte_end":78924,"line_start":76,"line_end":76,"column_start":8,"column_end":14},"name":"method","qualname":"::server::Serve::method","value":"pub fn method(&Self, &Req) -> Option<&'static str>","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":" Extracts a method name from the request.\n","sig":null,"attributes":[{"value":"/ Extracts a method name from the request.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78866,"byte_end":78910,"line_start":75,"line_end":75,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":79039,"byte_end":79044,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"serve","qualname":"::server::Serve::serve","value":"pub fn serve(Self, context::Context, Req) -> Self::Fut","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":" Responds to a single request.\n","sig":null,"attributes":[{"value":"/ Responds to a single request.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78998,"byte_end":79031,"line_start":80,"line_end":80,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":908},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":79450,"byte_end":79458,"line_start":98,"line_end":98,"column_start":11,"column_end":19},"name":"Incoming","qualname":"::server::Incoming","value":"Incoming<C>","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":914}],"decl_id":null,"docs":" An extension trait for [streams](Stream) of [`Channels`](Channel).\n","sig":null,"attributes":[{"value":"/ An extension trait for [streams](Stream) of [`Channels`](Channel).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":79369,"byte_end":79439,"line_start":97,"line_end":97,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":79570,"byte_end":79590,"line_start":104,"line_end":104,"column_start":8,"column_end":28},"name":"max_channels_per_key","qualname":"::server::Incoming::max_channels_per_key","value":"pub fn max_channels_per_key<K, KF>(Self, u32, KF)\n-> filter::ChannelFilter<Self, K, KF> where K: fmt::Display + Eq + Hash +\nClone + Unpin, KF: Fn(&C) -> K","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":" Enforces channel per-key limits.\n","sig":null,"attributes":[{"value":"/ Enforces channel per-key limits.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":79526,"byte_end":79562,"line_start":103,"line_end":103,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":79878,"byte_end":79913,"line_start":113,"line_end":113,"column_start":8,"column_end":43},"name":"max_concurrent_requests_per_channel","qualname":"::server::Incoming::max_concurrent_requests_per_channel","value":"pub fn max_concurrent_requests_per_channel(Self, usize)\n-> ThrottlerStream<Self>","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":" Caps the number of concurrent requests per channel.\n","sig":null,"attributes":[{"value":"/ Caps the number of concurrent requests per channel.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":79815,"byte_end":79870,"line_start":112,"line_end":112,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":80323,"byte_end":80330,"line_start":122,"line_end":122,"column_start":8,"column_end":15},"name":"execute","qualname":"::server::Incoming::execute","value":"pub fn execute<S>(Self, S) -> TokioServerExecutor<Self, S> where\nS: Serve<C::Req, Resp = C::Resp>","parent":{"krate":0,"index":908},"children":[],"decl_id":null,"docs":" [Executes](Channel::execute) each incoming channel. Each channel will be handled\n concurrently by spawning on tokio's default executor, and each request will be also\n be spawned on tokio's default executor.\n","sig":null,"attributes":[{"value":"/ [Executes](Channel::execute) each incoming channel. Each channel will be handled","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":80006,"byte_end":80090,"line_start":117,"line_end":117,"column_start":5,"column_end":89}},{"value":"/ concurrently by spawning on tokio's default executor, and each request will be also","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":80095,"byte_end":80182,"line_start":118,"line_end":118,"column_start":5,"column_end":92}},{"value":"/ be spawned on tokio's default executor.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":80187,"byte_end":80230,"line_start":119,"line_end":119,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":80235,"byte_end":80261,"line_start":120,"line_end":120,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2778},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":81166,"byte_end":81177,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"BaseChannel","qualname":"::server::BaseChannel","value":"BaseChannel {  }","parent":null,"children":[{"krate":0,"index":2782},{"krate":0,"index":2785},{"krate":0,"index":2783},{"krate":0,"index":2784}],"decl_id":null,"docs":" BaseChannel is a [Transport] that keeps track of in-flight requests. It converts a\n [`Transport`](Transport) of [`ClientMessages`](ClientMessage) into a stream of\n [requests](ClientMessage::Request).","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":81140,"byte_end":81154,"line_start":145,"line_end":145,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2749},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":81166,"byte_end":81177,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"__BaseChannel","qualname":"::server::_::__BaseChannel","value":"__BaseChannel {  }","parent":null,"children":[{"krate":0,"index":2754},{"krate":0,"index":2755}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":81140,"byte_end":81154,"line_start":145,"line_end":145,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":81702,"byte_end":81705,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"new","qualname":"<BaseChannel<Req, Resp, T>>::new","value":"pub fn new(Config, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new channel backed by `transport` and configured with `config`.\n","sig":null,"attributes":[{"value":"/ Creates a new channel backed by `transport` and configured with `config`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":81613,"byte_end":81690,"line_start":161,"line_end":161,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":82036,"byte_end":82049,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"with_defaults","qualname":"<BaseChannel<Req, Resp, T>>::with_defaults","value":"pub fn with_defaults(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new channel backed by `transport` and configured with the defaults.\n","sig":null,"attributes":[{"value":"/ Creates a new channel backed by `transport` and configured with the defaults.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":81943,"byte_end":82024,"line_start":171,"line_end":171,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":82219,"byte_end":82226,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BaseChannel<Req, Resp, T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner transport over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner transport over which messages are sent and received.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":82133,"byte_end":82207,"line_start":176,"line_end":176,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":82372,"byte_end":82383,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"get_pin_ref","qualname":"<BaseChannel<Req, Resp, T>>::get_pin_ref","value":"pub fn get_pin_ref(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner transport over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner transport over which messages are sent and received.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":82286,"byte_end":82360,"line_start":181,"line_end":181,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":936},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84703,"byte_end":84710,"line_start":222,"line_end":222,"column_start":11,"column_end":18},"name":"Channel","qualname":"::server::Channel","value":"Channel","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946}],"decl_id":null,"docs":" The server end of an open connection with a client, streaming in requests from, and sinking\n responses to, the client.","sig":null,"attributes":[{"value":"/ The server end of an open connection with a client, streaming in requests from, and sinking","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":82932,"byte_end":83027,"line_start":201,"line_end":201,"column_start":1,"column_end":96}},{"value":"/ responses to, the client.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83028,"byte_end":83057,"line_start":202,"line_end":202,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83058,"byte_end":83061,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ The ways to use a Channel, in order of simplest to most complex, is:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83062,"byte_end":83134,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ 1. [`Channel::execute`] - Requires the `tokio1` feature. This method is best for those who","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83135,"byte_end":83229,"line_start":205,"line_end":205,"column_start":1,"column_end":95}},{"value":"/    do not have specific scheduling needs and whose services are `Send + 'static`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83230,"byte_end":83315,"line_start":206,"line_end":206,"column_start":1,"column_end":86}},{"value":"/ 2. [`Channel::requests`] - This method is best for those who need direct access to individual","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83316,"byte_end":83413,"line_start":207,"line_end":207,"column_start":1,"column_end":98}},{"value":"/    requests, or are not using `tokio`, or want control over [futures](Future) scheduling.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83414,"byte_end":83507,"line_start":208,"line_end":208,"column_start":1,"column_end":94}},{"value":"/    [`Requests`] is a stream of [`InFlightRequests`](InFlightRequest), each which has an","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83508,"byte_end":83599,"line_start":209,"line_end":209,"column_start":1,"column_end":92}},{"value":"/    [`execute`](InFlightRequest::execute) method. If using `execute`, request processing will","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83600,"byte_end":83696,"line_start":210,"line_end":210,"column_start":1,"column_end":97}},{"value":"/    automatically cease when either the request deadline is reached or when a corresponding","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83697,"byte_end":83791,"line_start":211,"line_end":211,"column_start":1,"column_end":95}},{"value":"/    cancellation message is received by the Channel.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83792,"byte_end":83847,"line_start":212,"line_end":212,"column_start":1,"column_end":56}},{"value":"/ 3. [`Sink::start_send`] - A user is free to manually send responses to requests produced by a","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83848,"byte_end":83945,"line_start":213,"line_end":213,"column_start":1,"column_end":98}},{"value":"/    Channel using [`Sink::start_send`] in lieu of the previous methods. If not using one of the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":83946,"byte_end":84044,"line_start":214,"line_end":214,"column_start":1,"column_end":99}},{"value":"/    previous execute methods, then nothing will automatically cancel requests or set up the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84045,"byte_end":84139,"line_start":215,"line_end":215,"column_start":1,"column_end":95}},{"value":"/    request context. However, the Channel will still clean up resources upon deadline expiration","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84140,"byte_end":84239,"line_start":216,"line_end":216,"column_start":1,"column_end":100}},{"value":"/    or cancellation. In the case that the Channel cleans up resources related to a request","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84240,"byte_end":84333,"line_start":217,"line_end":217,"column_start":1,"column_end":94}},{"value":"/    before the response is sent, the response can still be sent into the Channel later on.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84334,"byte_end":84427,"line_start":218,"line_end":218,"column_start":1,"column_end":94}},{"value":"/    Because there is no guarantee that a cancellation message will ever be received for a","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84428,"byte_end":84520,"line_start":219,"line_end":219,"column_start":1,"column_end":93}},{"value":"/    request, or that requests come with reasonably short deadlines, services should strive to","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84521,"byte_end":84617,"line_start":220,"line_end":220,"column_start":1,"column_end":97}},{"value":"/    clean up Channel resources by sending a response for every request.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84618,"byte_end":84692,"line_start":221,"line_end":221,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":937},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84847,"byte_end":84850,"line_start":227,"line_end":227,"column_start":10,"column_end":13},"name":"Req","qualname":"::server::Channel::Req","value":"type Req;","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Type of request item.\n","sig":null,"attributes":[{"value":"/ Type of request item.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84812,"byte_end":84837,"line_start":226,"line_end":226,"column_start":5,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":938},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84898,"byte_end":84902,"line_start":230,"line_end":230,"column_start":10,"column_end":14},"name":"Resp","qualname":"::server::Channel::Resp","value":"type Resp;","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Type of response sink item.\n","sig":null,"attributes":[{"value":"/ Type of response sink item.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84857,"byte_end":84888,"line_start":229,"line_end":229,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":939},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84945,"byte_end":84954,"line_start":233,"line_end":233,"column_start":10,"column_end":19},"name":"Transport","qualname":"::server::Channel::Transport","value":"type Transport;","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" The wrapped transport.\n","sig":null,"attributes":[{"value":"/ The wrapped transport.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84909,"byte_end":84935,"line_start":232,"line_end":232,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85002,"byte_end":85008,"line_start":236,"line_end":236,"column_start":8,"column_end":14},"name":"config","qualname":"::server::Channel::config","value":"pub fn config(&Self) -> &Config","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Configuration of the channel.\n","sig":null,"attributes":[{"value":"/ Configuration of the channel.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":84961,"byte_end":84994,"line_start":235,"line_end":235,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85104,"byte_end":85122,"line_start":239,"line_end":239,"column_start":8,"column_end":26},"name":"in_flight_requests","qualname":"::server::Channel::in_flight_requests","value":"pub fn in_flight_requests(&Self) -> usize","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Returns the number of in-flight requests over this channel.\n","sig":null,"attributes":[{"value":"/ Returns the number of in-flight requests over this channel.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85033,"byte_end":85096,"line_start":238,"line_end":238,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85202,"byte_end":85211,"line_start":242,"line_end":242,"column_start":8,"column_end":17},"name":"transport","qualname":"::server::Channel::transport","value":"pub fn transport(&Self) -> &Self::Transport","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Returns the transport underlying the channel.\n","sig":null,"attributes":[{"value":"/ Returns the transport underlying the channel.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85145,"byte_end":85194,"line_start":241,"line_end":241,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85307,"byte_end":85330,"line_start":245,"line_end":245,"column_start":8,"column_end":31},"name":"max_concurrent_requests","qualname":"::server::Channel::max_concurrent_requests","value":"pub fn max_concurrent_requests(Self, usize) -> Throttler<Self> where\nSelf: Sized","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Caps the number of concurrent requests to `limit`.\n","sig":null,"attributes":[{"value":"/ Caps the number of concurrent requests to `limit`.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85245,"byte_end":85299,"line_start":244,"line_end":244,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85686,"byte_end":85699,"line_start":255,"line_end":255,"column_start":8,"column_end":21},"name":"start_request","qualname":"::server::Channel::start_request","value":"pub fn start_request(Pin<&mut Self>, u64, SystemTime, Span)\n-> Result<AbortRegistration, AlreadyExistsError>","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Tells the Channel that request with ID `request_id` is being handled.\n The request will be tracked until a response with the same ID is sent\n to the Channel or the deadline expires, whichever happens first.\n","sig":null,"attributes":[{"value":"/ Tells the Channel that request with ID `request_id` is being handled.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85454,"byte_end":85527,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/ The request will be tracked until a response with the same ID is sent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85532,"byte_end":85605,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ to the Channel or the deadline expires, whichever happens first.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85610,"byte_end":85678,"line_start":254,"line_end":254,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":86205,"byte_end":86213,"line_start":268,"line_end":268,"column_start":8,"column_end":16},"name":"requests","qualname":"::server::Channel::requests","value":"pub fn requests(Self) -> Requests<Self> where Self: Sized","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Returns a stream of requests that automatically handle request cancellation and response\n routing.","sig":null,"attributes":[{"value":"/ Returns a stream of requests that automatically handle request cancellation and response","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85867,"byte_end":85959,"line_start":262,"line_end":262,"column_start":5,"column_end":97}},{"value":"/ routing.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85964,"byte_end":85976,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85981,"byte_end":85984,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This is a terminal operation. After calling `requests`, the channel cannot be retrieved,","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":85989,"byte_end":86081,"line_start":265,"line_end":265,"column_start":5,"column_end":97}},{"value":"/ and the only way to complete requests is via [`Requests::execute`] or","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":86086,"byte_end":86159,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/ [`InFlightRequest::execute`].","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":86164,"byte_end":86197,"line_start":267,"line_end":267,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":86806,"byte_end":86813,"line_start":286,"line_end":286,"column_start":8,"column_end":15},"name":"execute","qualname":"::server::Channel::execute","value":"pub fn execute<S>(Self, S) -> TokioChannelExecutor<Requests<Self>, S> where\nSelf: Sized, S: Serve<Self::Req, Resp = Self::Resp> + Send + 'static,\nS::Fut: Send, Self::Req: Send + 'static, Self::Resp: Send + 'static","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Runs the channel until completion by executing all requests using the given service\n function. Request handlers are run concurrently by [spawning](tokio::spawn) on tokio's\n default executor.\n","sig":null,"attributes":[{"value":"/ Runs the channel until completion by executing all requests using the given service","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":86505,"byte_end":86592,"line_start":281,"line_end":281,"column_start":5,"column_end":92}},{"value":"/ function. Request handlers are run concurrently by [spawning](tokio::spawn) on tokio's","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":86597,"byte_end":86687,"line_start":282,"line_end":282,"column_start":5,"column_end":95}},{"value":"/ default executor.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":86692,"byte_end":86713,"line_start":283,"line_end":283,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":86718,"byte_end":86744,"line_start":284,"line_end":284,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2807},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":87415,"byte_end":87424,"line_start":306,"line_end":306,"column_start":5,"column_end":14},"name":"Transport","qualname":"::server::ChannelError::Transport","value":"ChannelError::Transport(E)","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" An error occurred reading from, or writing to, the transport.\n","sig":null,"attributes":[{"value":"/ An error occurred reading from, or writing to, the transport.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":87289,"byte_end":87354,"line_start":304,"line_end":304,"column_start":5,"column_end":70}},{"value":"error(\"an error occurred in the transport: {0}\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":87359,"byte_end":87410,"line_start":305,"line_end":305,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2810},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":87571,"byte_end":87576,"line_start":309,"line_end":309,"column_start":5,"column_end":10},"name":"Timer","qualname":"::server::ChannelError::Timer","value":"ChannelError::Timer(tokio::time::error::Error)","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" An error occurred while polling expired requests.\n","sig":null,"attributes":[{"value":"/ An error occurred while polling expired requests.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":87443,"byte_end":87496,"line_start":307,"line_end":307,"column_start":5,"column_end":58}},{"value":"error(\"an error occurred while polling expired requests: {0}\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":87501,"byte_end":87566,"line_start":308,"line_end":308,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":2786},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":87223,"byte_end":87235,"line_start":300,"line_end":300,"column_start":10,"column_end":22},"name":"ChannelError","qualname":"::server::ChannelError","value":"pub enum ChannelError<E> where E: Error + Send + Sync + 'static {\n    Transport(E),\n    Timer(tokio::time::error::Error),\n}","parent":null,"children":[{"krate":0,"index":2807},{"krate":0,"index":2810}],"decl_id":null,"docs":" Critical errors that result in a Channel disconnecting.\n","sig":null,"attributes":[{"value":"/ Critical errors that result in a Channel disconnecting.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":87119,"byte_end":87178,"line_start":298,"line_end":298,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2906},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":92380,"byte_end":92388,"line_start":463,"line_end":463,"column_start":12,"column_end":20},"name":"Requests","qualname":"::server::Requests","value":"Requests {  }","parent":null,"children":[{"krate":0,"index":2910},{"krate":0,"index":2908},{"krate":0,"index":2909}],"decl_id":null,"docs":" A stream of requests coming over a channel. `Requests` also drives the sending of responses, so\n it must be continually polled to ensure progress.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":92354,"byte_end":92368,"line_start":462,"line_end":462,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2887},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":92380,"byte_end":92388,"line_start":463,"line_end":463,"column_start":12,"column_end":20},"name":"__Requests","qualname":"::server::_::__Requests","value":"__Requests {  }","parent":null,"children":[{"krate":0,"index":2890},{"krate":0,"index":2891}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":92354,"byte_end":92368,"line_start":462,"line_end":462,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":92800,"byte_end":92815,"line_start":480,"line_end":480,"column_start":12,"column_end":27},"name":"channel_pin_mut","qualname":"<Requests<C>>::channel_pin_mut","value":"pub fn channel_pin_mut<'a>(&'a mut Pin<&mut Self>) -> Pin<&'a mut C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel over which messages are sent and received.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":92716,"byte_end":92788,"line_start":479,"line_end":479,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":93005,"byte_end":93026,"line_start":485,"line_end":485,"column_start":12,"column_end":33},"name":"pending_responses_mut","qualname":"<Requests<C>>::pending_responses_mut","value":"pub fn pending_responses_mut<'a>(&'a mut Pin<&mut Self>)\n-> &'a mut mpsc::Receiver<Response<C::Resp>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel over which messages are sent and received.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":92921,"byte_end":92993,"line_start":484,"line_end":484,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":3017},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":98592,"byte_end":98607,"line_start":621,"line_end":621,"column_start":12,"column_end":27},"name":"InFlightRequest","qualname":"::server::InFlightRequest","value":"InFlightRequest {  }","parent":null,"children":[{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023}],"decl_id":null,"docs":" A request produced by [Channel::requests].\n","sig":null,"attributes":[{"value":"/ A request produced by [Channel::requests].","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":98517,"byte_end":98563,"line_start":619,"line_end":619,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":98853,"byte_end":98856,"line_start":630,"line_end":630,"column_start":12,"column_end":15},"name":"get","qualname":"<InFlightRequest<Req, Res>>::get","value":"pub fn get(&Self) -> &Request<Req>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the request.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the request.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":98802,"byte_end":98841,"line_start":629,"line_end":629,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":99601,"byte_end":99608,"line_start":645,"line_end":645,"column_start":18,"column_end":25},"name":"execute","qualname":"<InFlightRequest<Req, Res>>::execute","value":"pub async fn execute<S>(Self, S) -> /*impl Trait*/ where S: Serve<Req, Resp =\nRes>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [future](Future) that executes the request using the given [service\n function](Serve). The service function's output is automatically sent back to the [Channel]\n that yielded this request. The request will be executed in the scope of this request's\n context.","sig":null,"attributes":[{"value":"/ Returns a [future](Future) that executes the request using the given [service","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":98916,"byte_end":98997,"line_start":634,"line_end":634,"column_start":5,"column_end":86}},{"value":"/ function](Serve). The service function's output is automatically sent back to the [Channel]","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":99002,"byte_end":99097,"line_start":635,"line_end":635,"column_start":5,"column_end":100}},{"value":"/ that yielded this request. The request will be executed in the scope of this request's","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":99102,"byte_end":99192,"line_start":636,"line_end":636,"column_start":5,"column_end":95}},{"value":"/ context.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":99197,"byte_end":99209,"line_start":637,"line_end":637,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":99214,"byte_end":99217,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ The returned future will stop executing when the first of the following conditions is met:","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":99222,"byte_end":99316,"line_start":639,"line_end":639,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":99321,"byte_end":99324,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ 1. The channel that yielded this request receives a [cancellation","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":99329,"byte_end":99398,"line_start":641,"line_end":641,"column_start":5,"column_end":74}},{"value":"/    message](ClientMessage::Cancel) for this request.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":99403,"byte_end":99459,"line_start":642,"line_end":642,"column_start":5,"column_end":61}},{"value":"/ 2. The request [deadline](crate::context::Context::deadline) is reached.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":99464,"byte_end":99540,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ 3. The service function completes.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":99545,"byte_end":99583,"line_start":644,"line_end":644,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":101897,"byte_end":101904,"line_start":719,"line_end":719,"column_start":12,"column_end":19},"name":"execute","qualname":"<Requests<C>>::execute","value":"pub fn execute<S>(Self, S) -> TokioChannelExecutor<Self, S> where\nS: Serve<C::Req, Resp = C::Resp> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes all requests using the given service function. Requests are handled concurrently\n by [spawning](tokio::spawn) each handler on tokio's default executor.\n","sig":null,"attributes":[{"value":"/ Executes all requests using the given service function. Requests are handled concurrently","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":101714,"byte_end":101807,"line_start":717,"line_end":717,"column_start":5,"column_end":98}},{"value":"/ by [spawning](tokio::spawn) each handler on tokio's default executor.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":101812,"byte_end":101885,"line_start":718,"line_end":718,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":3158},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":102352,"byte_end":102371,"line_start":733,"line_end":733,"column_start":12,"column_end":31},"name":"TokioServerExecutor","qualname":"::server::TokioServerExecutor","value":"TokioServerExecutor {  }","parent":null,"children":[{"krate":0,"index":3162},{"krate":0,"index":3161}],"decl_id":null,"docs":" A future that drives the server by [spawning](tokio::spawn) a [`TokioChannelExecutor`](TokioChannelExecutor)\n for each new channel.\n","sig":null,"attributes":[{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":102264,"byte_end":102290,"line_start":731,"line_end":731,"column_start":1,"column_end":27}},{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":102232,"byte_end":102246,"line_start":729,"line_end":729,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3134},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":102352,"byte_end":102371,"line_start":733,"line_end":733,"column_start":12,"column_end":31},"name":"__TokioServerExecutor","qualname":"::server::_::__TokioServerExecutor","value":"__TokioServerExecutor {  }","parent":null,"children":[{"krate":0,"index":3138},{"krate":0,"index":3139}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":102232,"byte_end":102246,"line_start":729,"line_end":729,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3215},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":102689,"byte_end":102709,"line_start":745,"line_end":745,"column_start":12,"column_end":32},"name":"TokioChannelExecutor","qualname":"::server::TokioChannelExecutor","value":"TokioChannelExecutor {  }","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3218}],"decl_id":null,"docs":" A future that drives the server by [spawning](tokio::spawn) each [response\n handler](InFlightRequest::execute) on tokio's default executor.\n","sig":null,"attributes":[{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":102601,"byte_end":102627,"line_start":743,"line_end":743,"column_start":1,"column_end":27}},{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":102569,"byte_end":102583,"line_start":741,"line_end":741,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3191},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":102689,"byte_end":102709,"line_start":745,"line_end":745,"column_start":12,"column_end":32},"name":"__TokioChannelExecutor","qualname":"::server::_::__TokioChannelExecutor","value":"__TokioChannelExecutor {  }","parent":null,"children":[{"krate":0,"index":3195},{"krate":0,"index":3196}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":102569,"byte_end":102583,"line_start":741,"line_end":741,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":1041},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transport","qualname":"::transport","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1104}],"decl_id":null,"docs":" Provides a [`Transport`](sealed::Transport) trait as well as implementations.","sig":null,"attributes":[{"value":"/ Provides a [`Transport`](sealed::Transport) trait as well as implementations.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":146600,"byte_end":146681,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":146682,"byte_end":146685,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The rpc crate is transport- and protocol-agnostic. Any transport that impls [`Transport`](sealed::Transport)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":146686,"byte_end":146798,"line_start":9,"line_end":9,"column_start":1,"column_end":113}},{"value":"/ can be plugged in, using whatever protocol it wants.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":146799,"byte_end":146855,"line_start":10,"line_end":10,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1042},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::transport::channel","value":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3278},{"krate":0,"index":3280},{"krate":0,"index":1064},{"krate":0,"index":3285},{"krate":0,"index":3290},{"krate":0,"index":1067},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1083},{"krate":0,"index":3347},{"krate":0,"index":3298},{"krate":0,"index":3294},{"krate":0,"index":1086},{"krate":0,"index":1092}],"decl_id":null,"docs":" Transports backed by in-memory channels.\n","sig":null,"attributes":[{"value":"/ Transports backed by in-memory channels.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":148032,"byte_end":148076,"line_start":7,"line_end":7,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3282},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":148457,"byte_end":148461,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Send","qualname":"::transport::channel::ChannelError::Send","value":"ChannelError::Send(Box<dyn Error + Send + Sync + 'static>)","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":" An error occurred sending over the channel.\n","sig":null,"attributes":[{"value":"/ An error occurred sending over the channel.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":148346,"byte_end":148393,"line_start":17,"line_end":17,"column_start":5,"column_end":52}},{"value":"error(\"an error occurred sending over the channel\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":148398,"byte_end":148452,"line_start":18,"line_end":18,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":3272},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":148327,"byte_end":148339,"line_start":16,"line_end":16,"column_start":10,"column_end":22},"name":"ChannelError","qualname":"::transport::channel::ChannelError","value":"pub enum ChannelError { Send(Box<dyn Error + Send + Sync + 'static>), }","parent":null,"children":[{"krate":0,"index":3282}],"decl_id":null,"docs":" Errors that occur in the sending or receiving of messages over a channel.\n","sig":null,"attributes":[{"value":"/ Errors that occur in the sending or receiving of messages over a channel.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":148205,"byte_end":148282,"line_start":14,"line_end":14,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1064},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":148632,"byte_end":148641,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::transport::channel::unbounded","value":"pub fn unbounded<SinkItem, Item>()\n-> (UnboundedChannel<SinkItem, Item>, UnboundedChannel<Item, SinkItem>)","parent":null,"children":[],"decl_id":null,"docs":" Returns two unbounded channel peers. Each [`Stream`] yields items sent through the other's\n [`Sink`].\n","sig":null,"attributes":[{"value":"/ Returns two unbounded channel peers. Each [`Stream`] yields items sent through the other's","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":148516,"byte_end":148610,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/ [`Sink`].","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":148611,"byte_end":148624,"line_start":23,"line_end":23,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3285},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":149119,"byte_end":149135,"line_start":39,"line_end":39,"column_start":12,"column_end":28},"name":"UnboundedChannel","qualname":"::transport::channel::UnboundedChannel","value":"UnboundedChannel {  }","parent":null,"children":[{"krate":0,"index":3288},{"krate":0,"index":3289}],"decl_id":null,"docs":" A bi-directional channel backed by an [`UnboundedSender`](mpsc::UnboundedSender)\n and [`UnboundedReceiver`](mpsc::UnboundedReceiver).\n","sig":null,"attributes":[{"value":"/ A bi-directional channel backed by an [`UnboundedSender`](mpsc::UnboundedSender)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":148950,"byte_end":149034,"line_start":36,"line_end":36,"column_start":1,"column_end":85}},{"value":"/ and [`UnboundedReceiver`](mpsc::UnboundedReceiver).","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":149035,"byte_end":149090,"line_start":37,"line_end":37,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":1083},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":150709,"byte_end":150716,"line_start":87,"line_end":87,"column_start":8,"column_end":15},"name":"bounded","qualname":"::transport::channel::bounded","value":"pub fn bounded<SinkItem, Item>(usize)\n-> (Channel<SinkItem, Item>, Channel<Item, SinkItem>)","parent":null,"children":[],"decl_id":null,"docs":" Returns two channel peers with buffer equal to `capacity`. Each [`Stream`] yields items sent\n through the other's [`Sink`].\n","sig":null,"attributes":[{"value":"/ Returns two channel peers with buffer equal to `capacity`. Each [`Stream`] yields items sent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":150571,"byte_end":150667,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"/ through the other's [`Sink`].","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":150668,"byte_end":150701,"line_start":86,"line_end":86,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3347},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":151192,"byte_end":151199,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"Channel","qualname":"::transport::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3351}],"decl_id":null,"docs":" A bi-directional channel backed by a [`Sender`](futures::channel::mpsc::Sender)\n and [`Receiver`](futures::channel::mpsc::Receiver).\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":151149,"byte_end":151163,"line_start":97,"line_end":97,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3322},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":151192,"byte_end":151199,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"__Channel","qualname":"::transport::channel::_::__Channel","value":"__Channel {  }","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":151149,"byte_end":151163,"line_start":97,"line_end":97,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1109},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":147038,"byte_end":147047,"line_start":19,"line_end":19,"column_start":15,"column_end":24},"name":"Transport","qualname":"::transport::sealed::Transport","value":"Transport<SinkItem, Item>","parent":null,"children":[{"krate":0,"index":1112}],"decl_id":null,"docs":" A bidirectional stream ([`Sink`] + [`Stream`]) of messages.\n","sig":null,"attributes":[{"value":"/ A bidirectional stream ([`Sink`] + [`Stream`]) of messages.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":146960,"byte_end":147023,"line_start":18,"line_end":18,"column_start":5,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1112},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":147525,"byte_end":147539,"line_start":28,"line_end":28,"column_start":14,"column_end":28},"name":"TransportError","qualname":"::transport::sealed::Transport::TransportError","value":"type TransportError: Error + Send + Sync + 'static;","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" Associated type where clauses are not elaborated; this associated type allows users\n bounding types by Transport to avoid having to explicitly add `T::Error: Error` to their\n bounds.\n","sig":null,"attributes":[{"value":"/ Associated type where clauses are not elaborated; this associated type allows users","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":147303,"byte_end":147390,"line_start":25,"line_end":25,"column_start":9,"column_end":96}},{"value":"/ bounding types by Transport to avoid having to explicitly add `T::Error: Error` to their","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":147399,"byte_end":147491,"line_start":26,"line_end":26,"column_start":9,"column_end":101}},{"value":"/ bounds.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":147500,"byte_end":147511,"line_start":27,"line_end":27,"column_start":9,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3357},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12350,"byte_end":12357,"line_start":325,"line_end":325,"column_start":5,"column_end":12},"name":"Request","qualname":"::ClientMessage::Request","value":"ClientMessage::Request(Request<T>)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" A request initiated by a user. The server responds to a request by invoking a\n service-provided request handler.  The handler completes with a [`response`](Response), which\n the server sends back to the client.\n","sig":null,"attributes":[{"value":"/ A request initiated by a user. The server responds to a request by invoking a","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12117,"byte_end":12198,"line_start":322,"line_end":322,"column_start":5,"column_end":86}},{"value":"/ service-provided request handler.  The handler completes with a [`response`](Response), which","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12203,"byte_end":12300,"line_start":323,"line_end":323,"column_start":5,"column_end":102}},{"value":"/ the server sends back to the client.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12305,"byte_end":12345,"line_start":324,"line_end":324,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":3360},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12792,"byte_end":12798,"line_start":333,"line_end":333,"column_start":5,"column_end":11},"name":"Cancel","qualname":"::ClientMessage::Cancel","value":"ClientMessage::Cancel { trace_context, request_id }","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" A command to cancel an in-flight request, automatically sent by the client when a response\n future is dropped.","sig":null,"attributes":[{"value":"/ A command to cancel an in-flight request, automatically sent by the client when a response","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12375,"byte_end":12469,"line_start":326,"line_end":326,"column_start":5,"column_end":99}},{"value":"/ future is dropped.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12474,"byte_end":12496,"line_start":327,"line_end":327,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12501,"byte_end":12504,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ When received, the server will immediately cancel the main task (top-level future) of the","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12509,"byte_end":12602,"line_start":329,"line_end":329,"column_start":5,"column_end":98}},{"value":"/ request handler for the associated request. Any tasks spawned by the request handler will","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12607,"byte_end":12700,"line_start":330,"line_end":330,"column_start":5,"column_end":98}},{"value":"/ not be canceled, because the framework layer does not","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12705,"byte_end":12762,"line_start":331,"line_end":331,"column_start":5,"column_end":62}},{"value":"/ know about them.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12767,"byte_end":12787,"line_start":332,"line_end":332,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":3355},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12094,"byte_end":12107,"line_start":321,"line_end":321,"column_start":10,"column_end":23},"name":"ClientMessage","qualname":"::ClientMessage","value":"pub enum ClientMessage<T> {\n    Request(Request<T>),\n    Cancel {\n        trace_context: trace::Context,\n        request_id: u64,\n    },\n}","parent":null,"children":[{"krate":0,"index":3357},{"krate":0,"index":3360}],"decl_id":null,"docs":" A message from a client to a server.\n","sig":null,"attributes":[{"value":"/ A message from a client to a server.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":11931,"byte_end":11971,"line_start":317,"line_end":317,"column_start":1,"column_end":41}},{"value":"non_exhaustive","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":12067,"byte_end":12084,"line_start":320,"line_end":320,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3458},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13325,"byte_end":13332,"line_start":347,"line_end":347,"column_start":12,"column_end":19},"name":"Request","qualname":"::Request","value":"Request { context, id, message }","parent":null,"children":[{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462}],"decl_id":null,"docs":" A request from a client to a server.\n","sig":null,"attributes":[{"value":"/ A request from a client to a server.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13147,"byte_end":13187,"line_start":343,"line_end":343,"column_start":1,"column_end":41}},{"value":"non_exhaustive","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13218,"byte_end":13235,"line_start":345,"line_end":345,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3460},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13413,"byte_end":13420,"line_start":349,"line_end":349,"column_start":9,"column_end":16},"name":"context","qualname":"::Request::context","value":"context::Context","parent":{"krate":0,"index":3458},"children":[],"decl_id":null,"docs":" Trace context, deadline, and other cross-cutting concerns.\n","sig":null,"attributes":[{"value":"/ Trace context, deadline, and other cross-cutting concerns.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13342,"byte_end":13404,"line_start":348,"line_end":348,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3461},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13536,"byte_end":13538,"line_start":351,"line_end":351,"column_start":9,"column_end":11},"name":"id","qualname":"::Request::id","value":"u64","parent":{"krate":0,"index":3458},"children":[],"decl_id":null,"docs":" Uniquely identifies the request across all requests sent over a single channel.\n","sig":null,"attributes":[{"value":"/ Uniquely identifies the request across all requests sent over a single channel.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13444,"byte_end":13527,"line_start":350,"line_end":350,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":3462},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13579,"byte_end":13586,"line_start":353,"line_end":353,"column_start":9,"column_end":16},"name":"message","qualname":"::Request::message","value":"T","parent":{"krate":0,"index":3458},"children":[],"decl_id":null,"docs":" The request body.\n","sig":null,"attributes":[{"value":"/ The request body.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13549,"byte_end":13570,"line_start":352,"line_end":352,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3539},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13788,"byte_end":13796,"line_start":360,"line_end":360,"column_start":12,"column_end":20},"name":"Response","qualname":"::Response","value":"Response { request_id, message }","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3542}],"decl_id":null,"docs":" A response from a server to a client.\n","sig":null,"attributes":[{"value":"/ A response from a server to a client.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13594,"byte_end":13635,"line_start":356,"line_end":356,"column_start":1,"column_end":42}},{"value":"non_exhaustive","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13681,"byte_end":13698,"line_start":358,"line_end":358,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3541},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13860,"byte_end":13870,"line_start":362,"line_end":362,"column_start":9,"column_end":19},"name":"request_id","qualname":"::Response::request_id","value":"u64","parent":{"krate":0,"index":3539},"children":[],"decl_id":null,"docs":" The ID of the request being responded to.\n","sig":null,"attributes":[{"value":"/ The ID of the request being responded to.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13806,"byte_end":13851,"line_start":361,"line_end":361,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3542},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13947,"byte_end":13954,"line_start":364,"line_end":364,"column_start":9,"column_end":16},"name":"message","qualname":"::Response::message","value":"std::result::Result<T, ServerError>","parent":{"krate":0,"index":3539},"children":[],"decl_id":null,"docs":" The response body, or an error if the request failed.\n","sig":null,"attributes":[{"value":"/ The response body, or an error if the request failed.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13881,"byte_end":13938,"line_start":363,"line_end":363,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3610},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14184,"byte_end":14195,"line_start":371,"line_end":371,"column_start":12,"column_end":23},"name":"ServerError","qualname":"::ServerError","value":"ServerError { kind, detail }","parent":null,"children":[{"krate":0,"index":3688},{"krate":0,"index":3611}],"decl_id":null,"docs":" An error response from a server to a client.\n","sig":null,"attributes":[{"value":"/ An error response from a server to a client.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":13983,"byte_end":14031,"line_start":367,"line_end":367,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14077,"byte_end":14094,"line_start":369,"line_end":369,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3688},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14531,"byte_end":14535,"line_start":381,"line_end":381,"column_start":9,"column_end":13},"name":"kind","qualname":"::ServerError::kind","value":"std::io::ErrorKind","parent":{"krate":0,"index":3610},"children":[],"decl_id":null,"docs":" The type of error that occurred to fail the request.\n","sig":null,"attributes":[{"value":"serde(serialize_with = \"util::serde::serialize_io_error_kind_as_u32\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14250,"byte_end":14319,"line_start":374,"line_end":374,"column_start":9,"column_end":78}},{"value":"serde(deserialize_with = \"util::serde::deserialize_io_error_kind_from_u32\")","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14379,"byte_end":14454,"line_start":378,"line_end":378,"column_start":9,"column_end":84}},{"value":"/ The type of error that occurred to fail the request.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14466,"byte_end":14522,"line_start":380,"line_end":380,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3611},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14632,"byte_end":14638,"line_start":383,"line_end":383,"column_start":9,"column_end":15},"name":"detail","qualname":"::ServerError::detail","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3610},"children":[],"decl_id":null,"docs":" A message describing more detail about the error that occurred.\n","sig":null,"attributes":[{"value":"/ A message describing more detail about the error that occurred.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14556,"byte_end":14623,"line_start":382,"line_end":382,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14890,"byte_end":14898,"line_start":394,"line_end":394,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Request<T>>::deadline","value":"pub fn deadline(&Self) -> &SystemTime","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline for this request.\n","sig":null,"attributes":[{"value":"/ Returns the deadline for this request.","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14836,"byte_end":14878,"line_start":393,"line_end":393,"column_start":5,"column_end":47}}]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":16717,"byte_end":16726,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":16970,"byte_end":16979,"line_start":33,"line_end":33,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":17719,"byte_end":17728,"line_start":54,"line_end":54,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":19813,"byte_end":19822,"line_start":118,"line_end":118,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":20597,"byte_end":20606,"line_start":147,"line_end":147,"column_start":48,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":20683,"byte_end":20692,"line_start":150,"line_end":150,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":21499,"byte_end":21506,"line_start":171,"line_end":171,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":22130,"byte_end":22137,"line_start":187,"line_end":187,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":24327,"byte_end":24335,"line_start":252,"line_end":252,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":24940,"byte_end":24948,"line_start":269,"line_end":269,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":33511,"byte_end":33518,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":33859,"byte_end":33866,"line_start":90,"line_end":90,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34215,"byte_end":34221,"line_start":103,"line_end":103,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34642,"byte_end":34649,"line_start":121,"line_end":121,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34835,"byte_end":34841,"line_start":133,"line_end":133,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34956,"byte_end":34963,"line_start":139,"line_end":139,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":35122,"byte_end":35129,"line_start":145,"line_end":145,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":35267,"byte_end":35273,"line_start":151,"line_end":151,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":35427,"byte_end":35433,"line_start":157,"line_end":157,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":35551,"byte_end":35558,"line_start":163,"line_end":163,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":35896,"byte_end":35903,"line_start":176,"line_end":176,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":36273,"byte_end":36289,"line_start":187,"line_end":187,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":36524,"byte_end":36540,"line_start":197,"line_end":197,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":36754,"byte_end":36761,"line_start":207,"line_end":207,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":36911,"byte_end":36918,"line_start":214,"line_end":214,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":37070,"byte_end":37076,"line_start":221,"line_end":221,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":37226,"byte_end":37232,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client/in_flight_requests.rs","byte_start":68920,"byte_end":68936,"line_start":23,"line_end":23,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client/in_flight_requests.rs","byte_start":69508,"byte_end":69524,"line_start":46,"line_end":46,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39157,"byte_end":39163,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39593,"byte_end":39602,"line_start":60,"line_end":60,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":40102,"byte_end":40111,"line_start":77,"line_end":77,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":40897,"byte_end":40904,"line_start":102,"line_end":102,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":41161,"byte_end":41168,"line_start":112,"line_end":112,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":43417,"byte_end":43430,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":44164,"byte_end":44177,"line_start":190,"line_end":190,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":47327,"byte_end":47342,"line_start":268,"line_end":268,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":56177,"byte_end":56192,"line_start":507,"line_end":507,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":58531,"byte_end":58550,"line_start":571,"line_end":571,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":58698,"byte_end":58714,"line_start":578,"line_end":578,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":58844,"byte_end":58860,"line_start":584,"line_end":584,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":75170,"byte_end":75178,"line_start":53,"line_end":53,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":75259,"byte_end":75266,"line_start":59,"line_end":59,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":76217,"byte_end":76221,"line_start":88,"line_end":88,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":115827,"byte_end":115834,"line_start":53,"line_end":53,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":116012,"byte_end":116026,"line_start":60,"line_end":60,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":116263,"byte_end":116277,"line_start":71,"line_end":71,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":116941,"byte_end":116955,"line_start":94,"line_end":94,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":117045,"byte_end":117059,"line_start":100,"line_end":100,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":117725,"byte_end":117739,"line_start":130,"line_end":130,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":118022,"byte_end":118035,"line_start":142,"line_end":142,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":118576,"byte_end":118589,"line_start":162,"line_end":162,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":121770,"byte_end":121783,"line_start":254,"line_end":254,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/in_flight_requests.rs","byte_start":129832,"byte_end":129848,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/in_flight_requests.rs","byte_start":132704,"byte_end":132720,"line_start":117,"line_end":117,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136095,"byte_end":136104,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136216,"byte_end":136225,"line_start":31,"line_end":31,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136563,"byte_end":136572,"line_start":45,"line_end":45,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":137921,"byte_end":137930,"line_start":80,"line_end":80,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":138624,"byte_end":138633,"line_start":106,"line_end":106,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":138717,"byte_end":138726,"line_start":112,"line_end":112,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":139568,"byte_end":139583,"line_start":151,"line_end":151,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":139825,"byte_end":139840,"line_start":164,"line_end":164,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78244,"byte_end":78250,"line_start":49,"line_end":49,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78363,"byte_end":78369,"line_start":57,"line_end":57,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":79140,"byte_end":79141,"line_start":84,"line_end":84,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":80527,"byte_end":80528,"line_start":130,"line_end":130,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":81521,"byte_end":81532,"line_start":157,"line_end":157,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":82799,"byte_end":82810,"line_start":195,"line_end":195,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":87648,"byte_end":87659,"line_start":312,"line_end":312,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":89901,"byte_end":89912,"line_start":374,"line_end":374,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":91385,"byte_end":91396,"line_start":422,"line_end":422,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":91515,"byte_end":91526,"line_start":428,"line_end":428,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":92676,"byte_end":92684,"line_start":475,"line_end":475,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":98375,"byte_end":98383,"line_start":610,"line_end":610,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":98770,"byte_end":98785,"line_start":628,"line_end":628,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":100648,"byte_end":100656,"line_start":681,"line_end":681,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":101617,"byte_end":101625,"line_start":711,"line_end":711,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":102848,"byte_end":102867,"line_start":753,"line_end":753,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":103086,"byte_end":103106,"line_start":761,"line_end":761,"column_start":12,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":103291,"byte_end":103310,"line_start":768,"line_end":768,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":103914,"byte_end":103934,"line_start":789,"line_end":789,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":149269,"byte_end":149285,"line_start":44,"line_end":44,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":149686,"byte_end":149702,"line_start":57,"line_end":57,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":151373,"byte_end":151380,"line_start":106,"line_end":106,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":151692,"byte_end":151699,"line_start":117,"line_end":117,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":147640,"byte_end":147641,"line_start":31,"line_end":31,"column_start":62,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/util.rs","byte_start":155051,"byte_end":155061,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/util.rs","byte_start":155435,"byte_end":155442,"line_start":35,"line_end":35,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14690,"byte_end":14695,"line_start":386,"line_end":386,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14819,"byte_end":14826,"line_start":392,"line_end":392,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":15309,"byte_end":15313,"line_start":410,"line_end":410,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":9152,"byte_end":9167,"line_start":218,"line_end":218,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":9178,"byte_end":9183,"line_start":220,"line_end":220,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":184}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":11693,"byte_end":11699,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":270}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":11709,"byte_end":11716,"line_start":306,"line_end":306,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":492}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":11726,"byte_end":11732,"line_start":307,"line_end":307,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":532}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":11742,"byte_end":11751,"line_start":308,"line_end":308,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1041}},{"kind":"Mod","span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":146865,"byte_end":146872,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1042}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":16717,"byte_end":16726,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":16970,"byte_end":16979,"line_start":33,"line_end":33,"column_start":55,"column_end":64},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1281},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":17719,"byte_end":17728,"line_start":54,"line_end":54,"column_start":63,"column_end":72},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1281},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":19813,"byte_end":19822,"line_start":118,"line_end":118,"column_start":53,"column_end":62},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1281},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":20597,"byte_end":20606,"line_start":147,"line_end":147,"column_start":48,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1281},"to":{"krate":0,"index":124}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":20683,"byte_end":20692,"line_start":150,"line_end":150,"column_start":33,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":21499,"byte_end":21506,"line_start":171,"line_end":171,"column_start":56,"column_end":63},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1357},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":22130,"byte_end":22137,"line_start":187,"line_end":187,"column_start":38,"column_end":45},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":24327,"byte_end":24335,"line_start":252,"line_end":252,"column_start":42,"column_end":50},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/serde_transport.rs","byte_start":24940,"byte_end":24948,"line_start":269,"line_end":269,"column_start":53,"column_end":61},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1443},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":33511,"byte_end":33518,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":33859,"byte_end":33866,"line_start":90,"line_end":90,"column_start":6,"column_end":13},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34215,"byte_end":34221,"line_start":103,"line_end":103,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34642,"byte_end":34649,"line_start":121,"line_end":121,"column_start":21,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34835,"byte_end":34841,"line_start":133,"line_end":133,"column_start":20,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":34956,"byte_end":34963,"line_start":139,"line_end":139,"column_start":46,"column_end":53},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":35122,"byte_end":35129,"line_start":145,"line_end":145,"column_start":46,"column_end":53},"kind":{"Impl":{"id":41}},"from":{"krate":58,"index":2711},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":35267,"byte_end":35273,"line_start":151,"line_end":151,"column_start":45,"column_end":51},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":35427,"byte_end":35433,"line_start":157,"line_end":157,"column_start":45,"column_end":51},"kind":{"Impl":{"id":43}},"from":{"krate":58,"index":2729},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":35551,"byte_end":35558,"line_start":163,"line_end":163,"column_start":34,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1470},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":35896,"byte_end":35903,"line_start":176,"line_end":176,"column_start":48,"column_end":55},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1470},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":36273,"byte_end":36289,"line_start":187,"line_end":187,"column_start":51,"column_end":67},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1643},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":36524,"byte_end":36540,"line_start":197,"line_end":197,"column_start":18,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1643},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":36754,"byte_end":36761,"line_start":207,"line_end":207,"column_start":23,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":36911,"byte_end":36918,"line_start":214,"line_end":214,"column_start":21,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":37070,"byte_end":37076,"line_start":221,"line_end":221,"column_start":23,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/trace.rs","byte_start":37226,"byte_end":37232,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client/in_flight_requests.rs","byte_start":68920,"byte_end":68936,"line_start":23,"line_end":23,"column_start":24,"column_end":40},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1699},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client/in_flight_requests.rs","byte_start":69508,"byte_end":69524,"line_start":46,"line_end":46,"column_start":12,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39157,"byte_end":39163,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1797},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":39593,"byte_end":39602,"line_start":60,"line_end":60,"column_start":15,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":40102,"byte_end":40111,"line_start":77,"line_end":77,"column_start":27,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":40897,"byte_end":40904,"line_start":102,"line_end":102,"column_start":27,"column_end":34},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1830},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":41161,"byte_end":41168,"line_start":112,"line_end":112,"column_start":17,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":43417,"byte_end":43430,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":44164,"byte_end":44177,"line_start":190,"line_end":190,"column_start":21,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":431},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":47327,"byte_end":47342,"line_start":268,"line_end":268,"column_start":20,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":56177,"byte_end":56192,"line_start":507,"line_end":507,"column_start":31,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1968},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":58531,"byte_end":58550,"line_start":571,"line_end":571,"column_start":6,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":58698,"byte_end":58714,"line_start":578,"line_end":578,"column_start":6,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/client.rs","byte_start":58844,"byte_end":58860,"line_start":584,"line_end":584,"column_start":17,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2205},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":75170,"byte_end":75178,"line_start":53,"line_end":53,"column_start":18,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2271},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":75259,"byte_end":75266,"line_start":59,"line_end":59,"column_start":6,"column_end":13},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/context.rs","byte_start":76217,"byte_end":76221,"line_start":88,"line_end":88,"column_start":27,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":74,"index":512},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":115827,"byte_end":115834,"line_start":53,"line_end":53,"column_start":18,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2413},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":116012,"byte_end":116026,"line_start":60,"line_end":60,"column_start":23,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2408},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":116263,"byte_end":116277,"line_start":71,"line_end":71,"column_start":27,"column_end":41},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2408},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":116941,"byte_end":116955,"line_start":94,"line_end":94,"column_start":25,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2408},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":117045,"byte_end":117059,"line_start":100,"line_end":100,"column_start":24,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2408},"to":{"krate":0,"index":936}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":117725,"byte_end":117739,"line_start":130,"line_end":130,"column_start":12,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":118022,"byte_end":118035,"line_start":142,"line_end":142,"column_start":15,"column_end":28},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":118576,"byte_end":118589,"line_start":162,"line_end":162,"column_start":15,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/filter.rs","byte_start":121770,"byte_end":121783,"line_start":254,"line_end":254,"column_start":26,"column_end":39},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2346},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/in_flight_requests.rs","byte_start":129832,"byte_end":129848,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/in_flight_requests.rs","byte_start":132704,"byte_end":132720,"line_start":117,"line_end":117,"column_start":15,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2524},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136095,"byte_end":136104,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136216,"byte_end":136225,"line_start":31,"line_end":31,"column_start":9,"column_end":18},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":136563,"byte_end":136572,"line_start":45,"line_end":45,"column_start":20,"column_end":29},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2635},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":137921,"byte_end":137930,"line_start":80,"line_end":80,"column_start":50,"column_end":59},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2635},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":138624,"byte_end":138633,"line_start":106,"line_end":106,"column_start":22,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2635},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":138717,"byte_end":138726,"line_start":112,"line_end":112,"column_start":21,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2635},"to":{"krate":0,"index":936}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":139568,"byte_end":139583,"line_start":151,"line_end":151,"column_start":9,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server/throttle.rs","byte_start":139825,"byte_end":139840,"line_start":164,"line_end":164,"column_start":20,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2707},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78244,"byte_end":78250,"line_start":49,"line_end":49,"column_start":18,"column_end":24},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2711},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":78363,"byte_end":78369,"line_start":57,"line_end":57,"column_start":6,"column_end":12},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":79140,"byte_end":79141,"line_start":84,"line_end":84,"column_start":40,"column_end":41},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":904},"to":{"krate":0,"index":894}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":80527,"byte_end":80528,"line_start":130,"line_end":130,"column_start":28,"column_end":29},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":917},"to":{"krate":0,"index":908}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":81521,"byte_end":81532,"line_start":157,"line_end":157,"column_start":20,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":82799,"byte_end":82810,"line_start":195,"line_end":195,"column_start":35,"column_end":46},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2778},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":87648,"byte_end":87659,"line_start":312,"line_end":312,"column_start":31,"column_end":42},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2778},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":89901,"byte_end":89912,"line_start":374,"line_end":374,"column_start":45,"column_end":56},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2778},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":91385,"byte_end":91396,"line_start":422,"line_end":422,"column_start":33,"column_end":44},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2778},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":91515,"byte_end":91526,"line_start":428,"line_end":428,"column_start":32,"column_end":43},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2778},"to":{"krate":0,"index":936}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":92676,"byte_end":92684,"line_start":475,"line_end":475,"column_start":9,"column_end":17},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":98375,"byte_end":98383,"line_start":610,"line_end":610,"column_start":24,"column_end":32},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2906},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":98770,"byte_end":98785,"line_start":628,"line_end":628,"column_start":16,"column_end":31},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":100648,"byte_end":100656,"line_start":681,"line_end":681,"column_start":20,"column_end":28},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2906},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":101617,"byte_end":101625,"line_start":711,"line_end":711,"column_start":9,"column_end":17},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":102848,"byte_end":102867,"line_start":753,"line_end":753,"column_start":12,"column_end":31},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":103086,"byte_end":103106,"line_start":761,"line_end":761,"column_start":12,"column_end":32},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":103291,"byte_end":103310,"line_start":768,"line_end":768,"column_start":28,"column_end":47},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3158},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/server.rs","byte_start":103914,"byte_end":103934,"line_start":789,"line_end":789,"column_start":23,"column_end":43},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3215},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":149269,"byte_end":149285,"line_start":44,"line_end":44,"column_start":33,"column_end":49},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3285},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":149686,"byte_end":149702,"line_start":57,"line_end":57,"column_start":41,"column_end":57},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3285},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":151373,"byte_end":151380,"line_start":106,"line_end":106,"column_start":33,"column_end":40},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3347},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport/channel.rs","byte_start":151692,"byte_end":151699,"line_start":117,"line_end":117,"column_start":41,"column_end":48},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3347},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/transport.rs","byte_start":147640,"byte_end":147641,"line_start":31,"line_end":31,"column_start":62,"column_end":63},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1114},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/util.rs","byte_start":155051,"byte_end":155061,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"kind":{"Impl":{"id":170}},"from":{"krate":1,"index":11818},"to":{"krate":0,"index":1162}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/util.rs","byte_start":155435,"byte_end":155442,"line_start":35,"line_end":35,"column_start":27,"column_end":34},"kind":{"Impl":{"id":171}},"from":{"krate":1,"index":1090},"to":{"krate":0,"index":1166}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14690,"byte_end":14695,"line_start":386,"line_end":386,"column_start":32,"column_end":37},"kind":{"Impl":{"id":180}},"from":{"krate":1,"index":3804},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":14819,"byte_end":14826,"line_start":392,"line_end":392,"column_start":9,"column_end":16},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zfaizal/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.26.2/src/lib.rs","byte_start":15309,"byte_end":15313,"line_start":410,"line_end":410,"column_start":31,"column_end":35},"kind":{"Impl":{"id":182}},"from":{"krate":2,"index":46047},"to":{"krate":0,"index":1198}}]}